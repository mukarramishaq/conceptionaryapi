{"version":3,"sources":["Spinner.svg","images/conceptionary.svg","components/LoaderComponent/Loader.js","components/AdComponent/AdComponent.js","schema/conceptSchema.js","actions/conceptsActions.js","actions/navbaractions.js","utilities/index.js","components/SocialShareButtons/ShareButtons.js","components/SocialShareButtons/TwitterSharedButton.js","components/ConceptsPage/Context/Context.js","utils/keywordsSorterFunction.js","utils/conceptsSorterFunction.js","selectors/index.js","components/ConceptsPage/ConceptsPage.js","schema/conceptClusterSchema.js","actions/conceptClustersActions.js","components/ConceptClustersPage/Context.js","components/ConceptClustersPage/ConceptClustersPage.js","components/Messages/Message.js","schema/authorClusterSchema.js","actions/autherCluster.js","components/AutherCluster/AutherCluster.js","schema/authorSchema.js","actions/authorActions.js","components/AuthorPage/AutherPage.js","utils/setAuthorizationToken.js","actions/loginActions.js","components/Login/Login.js","helpers/validateLogin.js","actions/signupActions.js","helpers/validateSignup.js","components/Signup/Signup.js","components/TopNavBar/TopNavBar.js","components/HomePage/HomePage.js","components/FileUpload/FileUpload.js","components/perspectiveDetail/perspective.js","App.js","serviceWorker.js","reducers/auth.js","reducers/navbar.js","reducers/concepts.js","reducers/conceptClusters.js","reducers/author.js","reducers/keyword.js","reducers/autherCluster.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Loader","react_default","a","createElement","src","spiner","Component","AdsComponent","class","style","display","textAlign","data-ad-format","data-ad-layout","data-ad-client","data-ad-slot","React","author","schema","Entity","keyword","perspective","Author","Keywords","conceptSchema","Perspectives","axios","require","flushConceptState","dispatch","type","setConceptPageNo","pageNo","payload","getAllPerspectivesByConcept","conceptId","page_no","conceptPage","post","concat","process","then","data","responseType","perspectives","getConceptPerspectivesByKeywords","keywordId","get","getConceptPerspectivesByAuthor","author_lastName","catch","err","console","log","increasePerspectiveLike","id","like","res","isLike","decreasePerspectiveLike","sortByAuthorLast","sortBy","showAllPerspective","value","sortByKeyword","getConceptFromApi","concept","obj","Conceptobj","conceptDetailsFromApi","perspectivesRelations","normalizedData","normalize","entities","perspectivesDetail","concepts","result","error","getListRelatedByConceptId","listRelatedData","ConceptClusters","flushState","setAutherClusterSelectedItems","selectedItems","setSelectedItem","selectedItem","setSelectedCategory","selectedCategory","addTag","tag","removeTag","getAuthorGroups","name","callback","length","results","i","label","toLowerCase","startsWith","push","login","account","username","Email","password","Password","headers","Content-Type","accept","response","JSON","parse","stringify","success","userInfo","user","e","logout","signup","Username","email","temp","filters","filterobj","Promise","resolve","reject","Axios","ShareButtons","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","link","react_facebook_lib","appId","href","_ref","handleClick","onClick","backgroundColor","border","FacebookIcon","size","round","_ref2","TwitterIcon","Context","_this","state","visibility","_this2","_this$props","authors","keywords","lastName","className","marginTop","padding","borderRadius","fontSize","textTransform","pronoun","selectedOption","description","onAuthorClick","author_first","firstName","author_last","born","dob","died","dod","auth_id","color","cursor","map","k","SocialShareButtons_ShareButtons","aria-hidden","onLikeClick","loves","setState","longDescription","citation","keywordsSorter","b","conceptsSorter","getUniqueKeywords","perspectiveIds","uniqueKeysWords","uniqueKeywordNamesOnly","forEach","count","includes","sort","keywordSorterFunction","getUniqueSortedAuthors","perspectiveids","uniqueAuthorWithDetails","uniqueAuthorNames","indexOf","authorALastName","toUpperCase","authorBLastName","getUniqueConcept","authorPerspectives","uniqueConcecptObjects","helperUniqueIds","element","ConceptId","object","discrete_author_name_id","discrete_author_name","textA","textB","getSortedPerspectivesByConceptName","tempPerspectives","conceptNameA","Concept","conceptNameB","getUniqueAuthorBooks","books","authorBooks","Books","bookids","uniqueBookNameWithId","uniqueBookIds","bookid","discrete_book_id","title","getAuthorBioData","authorGroups","authorBioHeadings","AuthorGroups","uniqueBioHeadings","AuthorBioHeading","heading","values","getUniqueSortedConceptsFromConceptCluster","conceptCluster","conceptClusters","Concepts","uniqueConceptNames","sortedUniqueConcepts","getPerspectivesFromConceptCluster","authorClicked","conceptClicked","apply","toConsumableArray","perspectiveId","ConceptName","authorA","authorB","getUniqueAuthorsFromConceptCluster","conceptids","uniqueAuthors","perspecid","AuthorId","getUniqueSortedConceptNameFromAuthorCluster","autherCluster","authorCluster","uniqueConcepts","conceptid","conceptName","getDynamicSortedAuthorClusterWithDetails","copyAuthorClusterWithDetails","authorLastName","getSortedAuthorClusterWithDetailsByAuthorLast","clustersWithDetails","authorClustersWithDetails","ConceptsPage","getConcept","concept_name","listenToScroll","query","apiLoading","apiServerError","apiNetworkError","conceptWithDetails","listRelatedLoading","listRelatedServerError","listRelatedNetworkError","navbar","UniqueKeywords","uniqueKeyWords","UniqueAuthors","authorId","all","sortByAuthor","filteredPerspectives","perspectiveLoading","getFilteredPerspectives","bind","assertThisInitialized","filterConceptDefinations","onListClick","onListRelatedClick","onRelatedClick","toggleListRelated","viewMorePerspectiveHandler","category","concept_id","tags","listRelated","relationary_supra","relationary_thing_supra_id","match","params","queryString","location","search","queryFilters","author_group","history","nextProps","conceptsWithDetails","orignalConceptsWithDetails","loading","setTimeout","window","addEventListener","document","getElementById","scrollIntoView","behavior","listRelatedRole","keyword_id","rtn","keywords_id","_this3","nonFilteredPerspectives","sortByKeywordId","_this4","LoadingOverlay_default","spinner","LoaderComponent_Loader","active","overflow","width","margin","react_loading_default","height","background","marginBottom","paddingLeft","marginLeft","marginRight","returnOnlyListData","returnOnlyRelationData","textDecoration","fontWeight","borderBottom","zIndex","paddingTop","ConceptsPage_Context_Context","borderLeft","borderRight","borderTop","AdComponent","listData","withRouter","connect","pageNumber","bindActionCreators","conceptClusterSchema","flushConceptClusterState","setClickedState","getConceptClusterFromApi","ConceptClustersPage","sortedConcepts","sortedPerspectives","cluster","groupIds","group","getConceptCluster","Redirect","to","undefined","components_ConceptClustersPage_Context","Message","authorClusterSchema","flushAuthorClusterState","getAuthorCluster","via","asyncToGenerator","regenerator_default","mark","_callee","rej","result1","wrap","_context","prev","next","sent","t0","stop","_x","_x2","arguments","getAuthorClusterHelper","AutherCluster","sortedConceptsNames","dynamicSortedAuthorCluster","sortedAuthorClusterDetail","authorGroup","url","pathname","split","getAuthorGroupByName","getAutherCluster","arr","authorFirstName","long_description","authorBioHeading","book","authorSchema","flushAuthorState","getAuthorInfluencedByAuthors","author_authors_details","getAuthorDetails","authorDetailsFromApi","join","author_firstName","author_image","pictureLink","getPictureLinks","AuthorPage","getAuthor","author_authors","authorInfluencedByAuthors","authorInfluencedOnAuthors","AuthorInfluenceAuthors","authorConvoWithAuthors","AuthorConvoAuthors","showBooks","sortedAuthorInfluencedByAuthors","setInitialsortedAuthorInfluencedByAuthors","sortedAuthorInfluencedOnAuthors","setInitialsortedAuthorInfluencedOnAuthors","sortedAuthorConvoWithAuthors","setInitialsortedAuthorConvoWithAuthors","index","index1","index2","UniqueConcepts","uniqueconcepts","sortedperpectives","authorBio","authorBooksById","getSortedAuthorInfluencedByAuthors","reverse","forward","reverse1","forward1","reverse2","forward2","onConceptClick","onBioClick","x","author_authors_apiLoading","author_authors_apiServerError","author_authors_apiNetworkError","bio","distinct_grouping","distinct_grouping_id","rtnArray","slice","getSortedAuthorInfluencedOnAuthors","getSortedAuthorConvoWithAuthors","totalLength","alt","objectFit","item","charAt","v","Link","maxHeight","minHeight","textOverflow","whiteSpace","BookDescriptions","bookDescription","source","setAuthorizationToken","token","defaults","common","setCurrentUser","userLoginRequest","userData","Access-Control-Allow-Origin","localStorage","setItem","jwt","decode","Login","errors","isLoading","onChange","onSubmit","defineProperty","target","_validateLogin","loginData","validator","isEmpty","isValid","validateLogin","preventDefault","_this$state","form","classnames","has-error","placeholder","disabled","userSignupRequest","Signup","firstname","lastname","_validateSignup","signupData","isEmail","validateSignup","fname","lname","body","server","TopNavBar","Joi","string","required","allow","toggleModalOpen","prevState","modalOpen","toggleModalSignupOpen","modalSignupOpen","validate","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","details","Symbol","iterator","done","path","message","return","handleLoginChange","input","currentTarget","errorMessage","validateProperty","objectSpread","handleSubmit","isSignup","loginStatus_admin","onTagsChanged","searchCategory","suggestions","onInputChanged","handleDelete","splice","handleAddition","toString","loadTags","cb","loadSuggestions","tagsObject","labels","handleChange","handleTagChange","selectedTag","renderRedirect","seletedSearch","authorClusterSelectedOptions","authorClusters","dropdownData","labelsArray","loadOptionsData","loginRequestStatus_admin","userAccount","filter","loadOptions","onSelectedCatagoryChange","searchAllConceptionary","inputValue","shuffle","alert","_this5","_this6","_this7","_this8","_this9","searchConcepts","searchConceptClusters","searchAuthorGroups","searchAuthors","searchAuthorClusters","searchAuthorGroupsNav","SIGNUP_SUCCESS","invalidLogin","pushState","_this10","reactstrap_es","getBackgroudColor","page","light","expand","toggle","isOpen","selected","Async_default","styles","colourStyles","isDisabled","Fragment","loggedInUserAccount_admin","index_es","open","onClose","center","boxShadow","react_loader_spinner_default","data-dismiss","aria-label","dot","alignItems",":before","content","control","option","isFocused","isSelected","chroma","alpha","css","contrast","singleValue","_ref3","userExist_admin","HomePage","conceptionary_svg","FileUpload","selectedFile","msg","skip","wait","onChangeHandler","onClickHandler","event","files","FormData","append","multiple","role","listStyleType","PerspectiveDetail","Perspective","imgURL","img","Helmet","property","createBrowserHistory","App","isAuthenticated","auth","Router","components_TopNavBar_TopNavBar","Switch","Route","exact","component","AuthorCluster","Boolean","hostname","initialState","keywordIds","conceptClustersWithDetails","conceptClusterConceptsDiscrete","conceptClusterWithDetails","authorsWithDetails","keywordsForPerspectiveId","authorClusterConceptsDiscrete","combineReducers","action","searchSuggestions","Array","isArray","keys","AuthorBioHeadings","author_authors_apiNetworkrError","authorBioData","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","jwtToken","ReactDOM","render","es","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fd46370.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Spinner.35060368.svg\";","module.exports = __webpack_public_path__ + \"static/media/conceptionary.4e85499c.svg\";","import React, { Component } from 'react';\r\nimport spiner from '../../../src/Spinner.svg';\r\nclass Loader extends Component{\r\n    render(){\r\n        return(\r\n            <img src={spiner}></img>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport AdSense from 'react-adsense';\r\nclass AdsComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <ins class=\"adsbygoogle\"\r\n            \r\n            style={{display:'block', textAlign:'center'}}\r\n            data-ad-format=\"fluid\"\r\n            data-ad-layout=\"in-article\"\r\n            data-ad-client=\"ca-pub-0123456789101112\"\r\n            data-ad-slot=\"9876543210\"></ins>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdsComponent;","import { schema } from 'normalizr';\r\nconst author = new schema.Entity('authors');\r\nconst keyword = new schema.Entity('keywords');\r\nconst perspective = new schema.Entity('perspectivesRelations', {\r\n    Author: author,\r\n    Keywords: [keyword]\r\n});\r\nexport const conceptSchema = new schema.Entity('concepts', {\r\n    Perspectives: [perspective],\r\n});\r\n","import { normalize } from 'normalizr';\r\nimport { conceptSchema } from '../schema/conceptSchema';\r\nconst axios = require('axios');\r\nexport function flushConceptState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_CONCEPT\",\r\n        })\r\n    }\r\n}\r\nexport function setConceptPageNo(pageNo) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'SET_PAGE_NO',\r\n            payload: pageNo\r\n        })\r\n    }\r\n}\r\nexport function getAllPerspectivesByConcept(conceptId, page_no) {\r\n    let conceptPage = {\r\n        conceptId,\r\n        page_no,\r\n    }\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/concepts/perspective`,{conceptPage})\r\n            .then(data => {\r\n                const { responseType } = data.data;\r\n                if (responseType == \"success\") {\r\n                    dispatch({\r\n                        type: 'SET_DETAILED_PERSPECTIVE',\r\n                        payload: data.data.perspectives\r\n                    })\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getConceptPerspectivesByKeywords(keywordId) {\r\n    return dispatch => {\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/keywords/perspective/${keywordId}`)\r\n            .then(data => {\r\n                const { responseType } = data.data;\r\n                if (responseType == \"success\") {\r\n                    dispatch({\r\n                        type: 'SET_DETAILED_PERSPECTIVE',\r\n                        payload: data.data.data.Perspectives\r\n                    })\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\nexport function getConceptPerspectivesByAuthor(author_lastName) {\r\n    return dispatch => {\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authors/perspective/${author_lastName}`)\r\n            .then(data => {\r\n                const { responseType } = data.data;\r\n                if (responseType == \"success\") {\r\n                    dispatch({\r\n                        type: 'SET_DETAILED_PERSPECTIVE',\r\n                        payload: data.data.perspectives\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\nexport function increasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"increase\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = true;\r\n                dispatch({\r\n                    type: 'SET_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function decreasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"decrease\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = false;\r\n                dispatch({\r\n                    type: 'SET_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function sortByAuthorLast(sortBy) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"sortByAuthorLast\",\r\n            payload: sortBy\r\n        })\r\n    }\r\n}\r\nexport function showAllPerspective(value) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SHOW_ALL_PERSPECTIVE\",\r\n            payload: value\r\n        })\r\n    }\r\n}\r\nexport function sortByKeyword(keyword) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"sortByKeyword\",\r\n            payload: keyword\r\n        })\r\n    }\r\n}\r\nexport function getConceptFromApi(concept) {\r\n    let obj = {}\r\n    obj.Conceptobj = concept\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REQUEST_STARTED\"\r\n        })\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/concepts/filter?relationships=true`, obj).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n                const conceptDetailsFromApi = data.data.Perspectives.perspectivesRelations;\r\n                const normalizedData = normalize(conceptDetailsFromApi, conceptSchema);\r\n                normalizedData.entities.perspectivesDetail = data.data.Perspectives.perspectivesDetail;\r\n                console.log(normalizedData);\r\n                dispatch({\r\n                    type: \"REQUEST_SUCCESSFUL\",\r\n                    payload: conceptDetailsFromApi\r\n                });\r\n                dispatch({\r\n                    type: 'setPerspectiveIds',\r\n                    payload: normalizedData.entities.concepts[normalizedData.result].Perspectives\r\n                });\r\n                dispatch({\r\n                    type: \"SET_CONCEPT_DETAILS\",\r\n                    payload: normalizedData.entities\r\n                });\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"SERVER_ERROR\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"NETWORK_ERROR\"\r\n            })\r\n            console.log('Error While fetching concept details from api', error);\r\n        })\r\n    }\r\n}\r\nexport function getListRelatedByConceptId(concept) {\r\n    let obj = {}\r\n    obj.Conceptobj = concept\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"LIST_RELATED_LOADING\"\r\n        })\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/concepts/filter?relationships=true&withListAndRelatedOnly=true&fbclid=IwAR07GYuFbZ9CIrkYUy-0gMPOQrk-aSlLSKP-w0TP1FV5noOp1T-qLJE5xOk`, obj)\r\n            .then(data => {\r\n                const { responseType } = data.data;\r\n                if (responseType == 'success') {\r\n                    let listRelatedData = data.data.data;\r\n                    listRelatedData = listRelatedData.ConceptClusters;\r\n                    dispatch({\r\n                        type: \"GET_LIST_RELATED\",\r\n                        payload: listRelatedData\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: \"LIST_RELATED_SERVER_ERROR\"\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: 'LIST_RELATED_NETWORK_ERROR'\r\n                })\r\n                console.log('Error While getting list related data', error);\r\n            })\r\n    }\r\n\r\n}\r\n","const axios = require('axios');\r\nlet request = require(\"request\");\r\nfunction shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n}\r\nexport function flushState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_NAV_BAR\",\r\n        })\r\n    }\r\n}\r\nexport function setAutherClusterSelectedItems(selectedItems) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_AUTHOR_CLUSTER_SELECTED_OPTIONS\",\r\n            payload: selectedItems,\r\n        })\r\n    }\r\n}\r\nexport function setSelectedItem(selectedItem) {\r\n    // console.log(\"set selected item called---------------->\");\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_SELECTED_OPTION\",\r\n            payload: selectedItem,\r\n        })\r\n    }\r\n}\r\nexport function setSelectedCategory(selectedCategory) {\r\n    // console.log(\"set selected category called\");\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_SEARCH_CATEGORY\",\r\n            payload: selectedCategory,\r\n        })\r\n    }\r\n}\r\nexport function addTag(tag) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"ADD_TAG\",\r\n            payload: tag\r\n        });\r\n    }\r\n}\r\nexport function removeTag(id) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REMOVE_TAG\",\r\n            payload: id\r\n        });\r\n    }\r\n}\r\nexport function getAllAsync(name, data, callback) {\r\n    if (name) {\r\n        if (data.length > 0) {\r\n            let results = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                if (data[i].label.toLowerCase().startsWith(name.toLowerCase())) {\r\n                    if (results.length < 9) {\r\n                        results.push(data[i]);\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            callback(null, shuffle(results));\r\n        }\r\n        else {\r\n            callback(null, []);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAllData(inputValue) {\r\n    return \"a\";\r\n}\r\n\r\nexport function prefetchConceptsForNavbar() {\r\n    return dispatch => {\r\n        const result = [];\r\n        axios.get('http://3.84.7.245:3000/api/rest/v1/concepts?fields=id+name', {\r\n            headers: {\r\n                \"X-Requested-With\": \"XMLHttpRequest\"\r\n            }\r\n        }).then(data => {\r\n            const { responseType } = data.data;\r\n            console.log(data)\r\n            if (responseType == 'success') {\r\n                const conceptsForNavBar = data.data.data;\r\n                if (conceptsForNavBar.length > 0) {\r\n                    conceptsForNavBar.map(concept => {\r\n                        return result.push({ label: concept.name, value: concept.name, id: concept.id, category: \"Concept\", color: \"#000000\" })\r\n                    })\r\n                }\r\n                dispatch({\r\n                    type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: result\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching concepts for navbar', error);\r\n        });\r\n        //     request(options, function L(error, response, body) {\r\n        //         // console.log(\"Options\")\r\n        //         let data = JSON.parse(body);\r\n\r\n        //         if (error === null && body.error == undefined) {\r\n        //             if (data.length > 0) {\r\n        //                 let j = 0;\r\n        //                 data.map(part => {\r\n        //                     returndata[j] = { label: part.discrete_concept_name, value: part.discrete_concept_name, id: part.discrete_concept_name_id, image: part.discrete_concept_name_image, category: \"Concept\", color: \"#000000\" };\r\n        //                     j++;\r\n        //                 })\r\n        //                 dispatch({\r\n        //                     type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n        //                     payload: returndata\r\n        //                 })\r\n        //             }\r\n        //             else {\r\n        //                 dispatch({\r\n        //                     type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n        //                     payload: [],\r\n        //                 })\r\n        //             }\r\n        //         }\r\n        //         else {\r\n        //             dispatch({\r\n        //                 type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n        //                 payload: [],\r\n        //             })\r\n        //         }\r\n        //     });\r\n        // }\r\n    }\r\n}\r\nexport function prefetchConceptClustersForNavbar() {\r\n    return dispatch => {\r\n        const result = [];\r\n        axios.get('http://3.84.7.245:3000/api/rest/v1/conceptClusters?fields=id+name+pictureLink').then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n                const conceptClustersForNavBar = data.data.data;\r\n                if (conceptClustersForNavBar.length > 0) {\r\n                    conceptClustersForNavBar.map(conceptCluster => {\r\n                        result.push({ label: conceptCluster.name, value: conceptCluster.name, id: conceptCluster.id, category: \"Concept Cluster\", color: \"#FF0000\" })\r\n                    })\r\n                }\r\n                dispatch({\r\n                    type: \"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: result\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching concepts for navbar', error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function prefetchAuthorsForNavbar() {\r\n    let returndata = [];\r\n    let query = `SELECT first_name, last_name, id, dob, dod, picture_link FROM author `;\r\n    var options = {\r\n        method: 'GET',\r\n        url: 'http://3.84.7.245:3000/api/rest/v1/authors/',\r\n        form: { query: query }\r\n    };\r\n    return dispatch => {\r\n        request(options, function L(error, response, body) {\r\n            // console.log(\"Options\")\r\n            let data = JSON.parse(body);\r\n            if (error === null && body.error == undefined) {\r\n                if (data.data.length > 0) {\r\n                    let j = 0;\r\n                    data.data.map(part => {\r\n                        let label = part.firstName + \" \" + part.lastName;\r\n                        let value = label;\r\n                        let id = part.id;\r\n                        let born = part.dob;\r\n                        let died = part.dod;\r\n                        let img = part.picturelink;\r\n                        returndata[j] = { label, value, id, born, died, img, page: \"Authors\", category: \"Author\", color: \"#A52A2A\" };\r\n                        j++;\r\n                    })\r\n                    dispatch({\r\n                        type: \"AUTHORS_TRIMMED_FOR_NAVBAR\",\r\n                        payload: returndata\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: \"AUTHORS_TRIMMED_FOR_NAVBAR\",\r\n                        payload: [],\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"AUTHORS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport function prefetchAuthorClustersForNavbar() {\r\n    let returndata = [];\r\n    let query = `SELECT * FROM Conceptionary.author_relationary_distinct_groupings`;\r\n    var options = {\r\n        method: 'POST',\r\n        url: 'http://3.84.7.245:3000/api/rest/v1/authors',\r\n        headers:\r\n        {\r\n            'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n            'cache-control': 'no-cache',\r\n            'content-type': 'application/x-www-form-urlencoded'\r\n        },\r\n        form: { query: query }\r\n    };\r\n    // console.log(\"Hi\")\r\n    return dispatch => {\r\n        request(options, function L(error, response, body) {\r\n            // console.log(\"Options\")\r\n            let data = JSON.parse(body);\r\n\r\n            if (error === null && body.error == undefined) {\r\n                let query1 = `SELECT * FROM Conceptionary.author_relationary_supra where author_relationary_supra.categories is null;`;\r\n                // console.log(\"Query in getAutherClusterAsynch\", query);\r\n                var options1 = {\r\n                    method: 'POST',\r\n                    url: 'https://cors-anywhere.herokuapp.com/' + 'http://ec2-18-220-90-81.us-east-2.compute.amazonaws.com:8126/',\r\n                    headers:\r\n                    {\r\n                        'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n                        'cache-control': 'no-cache',\r\n                        'content-type': 'application/x-www-form-urlencoded'\r\n                    },\r\n                    form: { query: query1 }\r\n                };\r\n                request(options1, function L(error1, response1, body1) {\r\n                    let data1 = JSON.parse(body1);\r\n                    if (error1 === null && body1.error == undefined) {\r\n                        if (data.length > 0) {\r\n                            // console.log(\"data\", data);\r\n                            let j = 0;\r\n\r\n                            data.map(part => {\r\n                                let label = part.distinct_grouping;\r\n                                let value = label;\r\n                                let id = part.distinct_grouping_id;\r\n                                let search_display = part.search_display;\r\n                                let photograph = part.photograph;\r\n                                returndata[j] = { label, value, id, search_display, photograph, category: \"Author Cluster\", color: \"#800080\" };\r\n                                j++;\r\n                            })\r\n                        }\r\n                        if (data1.length > 0) {\r\n                            // console.log(\"Data1 \", data1)\r\n                            data1.map(part => {\r\n                                // console.log(\"@\");\r\n                                let label = part.author_supra;\r\n                                let value = label;\r\n                                let id = part.author_supra_id;\r\n                                let search_display = part.search_display;\r\n                                let categories = part.categories;\r\n                                let author_relationary_image = part.author_relationary_image;\r\n                                let via = \"supra\"\r\n                                returndata.push({ label, value, id, search_display, categories, author_relationary_image, via, category: \"Author Cluster\", color: \"#800080\" });\r\n                            })\r\n                            // console.log(\"Return data\", returndata)\r\n                            if (returndata.length > 0) {\r\n                                dispatch({\r\n                                    type: \"AUTHOR_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                                    payload: returndata\r\n                                })\r\n                            }\r\n                            else {\r\n                                dispatch({\r\n                                    type: \"AUTHORS_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                                    payload: [],\r\n                                })\r\n                            }\r\n                        }\r\n                        // console.log(\"return data authorCluster\", returndata);\r\n                    }\r\n                });\r\n\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"AUTHOR_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\nexport function getConcepts() {\r\n    let query = \"Select discrete_concept_name,discrete_concept_name_id from Conceptionary.concept_discrete;\"\r\n\r\n    var options = {\r\n        method: 'POST',\r\n        url: 'http://3.84.7.245:3000/api/rest/v1/concepts',\r\n        headers:\r\n        {\r\n            'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n            'cache-control': 'no-cache',\r\n            'content-type': 'application/x-www-form-urlencoded'\r\n        },\r\n        form: { query: query }\r\n    };\r\n    return dispatch => {\r\n        request(options, function (error, response, body) {\r\n            // console.log(\"Error is :\", error);\r\n            let data = JSON.parse(body);\r\n            // console.log(\"Gulzain Re/sponse\", response);\r\n            // console.log(\"BODY_________\", data);\r\n            let returndata = [];\r\n            if (error === null && body.error == undefined) {\r\n                if (data.length > 0) {\r\n                    let j = 0;\r\n                    data.map(part => {\r\n                        returndata[j] = { label: part.discrete_concept_name, value: part.discrete_concept_name, id: part.discrete_concept_name_id };\r\n                        j++;\r\n                    })\r\n                    dispatch({\r\n                        type: \"GET_CONCEPTS_NAMES_NAVBAR\",\r\n                        payload: returndata,\r\n\r\n                    })\r\n                }\r\n            }\r\n\r\n            // if (returndata.length > 0) {\r\n            //     console.log(\"return Data\", returndata);\r\n            //     dispatch({\r\n            //         type: \"GET_RELATIONARY_SUPRA_ITEMS_NAVBAR\",\r\n            //         payload: returndata,\r\n\r\n            //     })\r\n            // }\r\n\r\n            // for (var i = 0; i < parts.length; i += 1) {\r\n            //     relationArray.push(\"\\\"\" + parts[i].relationary_supra.replaceAll(\"\\'\", \"\\\\\\'\") + \"\\\"\");\r\n            // }\r\n            // var myhtml = fs.readFileSync('splash.html');\r\n            // //console.log(termsArray);\r\n            // res.send(myhtml + \"<script>autocomplete(document.getElementById(\\\"myInput\\\"),[\" + termsArray + \"],[\" + termsArray + \"]);</script>\" + \"<script>autocomplete(document.getElementById(\\\"myAuthorInput\\\"),[\" + authorArray + \"],[\" + authorArray + \"]);</script>\" +\r\n            //     \"<script>autocomplete(document.getElementById(\\\"groupInput\\\"),[\" + groupArray + \"],[\" + valArray + \"]);</script>\" +\r\n            //     \"<script>autocomplete(document.getElementById(\\\"myListInput\\\"),[\" + listArray + \"],[\" + listArray + \"]);</script>\" +\r\n            //     \"<script>autocomplete(document.getElementById(\\\"myRelationInput\\\"),[\" + relationArray + \"],[\" + relationArray + \"]);</script>\");\r\n\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function prefetchAuthorGroupsForNavbar() {\r\n    return dispatch => {\r\n        const result = [];\r\n        axios.get('http://3.84.7.245:3000/api/rest/v1/authorGroups/all').then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const authroGroupsNavbar = data.data.data;\r\n                console.log(data.data.data)\r\n                if (authroGroupsNavbar.length > 0) {\r\n                    authroGroupsNavbar.map(conceptCluster => {\r\n                        result.push({ label: conceptCluster.name, value: conceptCluster.name, id: conceptCluster.id, category: \"Concept Cluster\", color: \"#FF0000\" })\r\n                    })\r\n                }\r\n                dispatch({\r\n                    type: \"AUTHOR_GROUPS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: result\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"AUTHOR_GROUPS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author groups for navbar', error);\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport function getAuthorGroups(name, data, callback) {\r\n\r\n    console.log(data)\r\n\r\n    if (name) {\r\n\r\n        if (data.length > 0) {\r\n            let results = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                if (data[i].label.toLowerCase().startsWith(name.toLowerCase())) {\r\n                    if (results.length < 9) {\r\n                        results.push(data[i]);\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            callback(null, results);\r\n        }\r\n        else {\r\n            callback(null, []);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function login(account) {\r\n    return (dispatch) => {\r\n        let obj = {};\r\n\r\n        obj.username = account.Email;\r\n        obj.password = account.Password\r\n\r\n        dispatch(loginRequest());\r\n\r\n        //let accountJSON = JSON.stringify(obj);\r\n        \r\n        return axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/login`, obj, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                'accept': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            let res = JSON.parse(JSON.stringify(response));\r\n            console.log(res)\r\n            console.log(res.data.success)\r\n            if (res.data.success) {\r\n                dispatch(loginSuccess(res.data.user));\r\n\r\n            } else {\r\n                dispatch(loginFailed());\r\n            }\r\n        }).catch(e => {\r\n            dispatch(loginFailed());\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function loginRequest() {\r\n    return {\r\n        type: 'LOGIN_REQUEST'\r\n    }\r\n}\r\n\r\nexport function loginSuccess(userInfo) {\r\n    return {\r\n        type: \"LOGIN_SUCCESS\",\r\n        userInfo: userInfo\r\n    }\r\n}\r\n\r\nexport function loginFailed() {\r\n    return {\r\n        type: \"LOGIN_FAILURE\"\r\n    }\r\n}\r\n\r\n//Logout \r\n\r\n\r\nexport function logout() {\r\n    return {\r\n        type: \"LOGOUT\"\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function signup(account) {\r\n    return (dispatch) => {\r\n        let obj = {};\r\n\r\n        obj.username = account.Username;\r\n        obj.email = account.Email;\r\n        obj.password = account.Password\r\n\r\n        let temp = {};\r\n        temp[\"User\"] = obj;\r\n\r\n\r\n\r\n        dispatch(signupRequest());\r\n        //console.log(accountJSON);\r\n        //let accountJSON = temp;\r\n\r\n        return axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/users`, temp, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                'accept': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            let res = JSON.parse(JSON.stringify(response));\r\n            console.log(res)\r\n            // console.log(res.data.responseType==='success')\r\n            if (res.data.responseType === 'success') {\r\n                dispatch(signupSuccess(res.data.data));\r\n            } else {\r\n                dispatch(signupFailed());\r\n            }\r\n        }).catch(e => {\r\n            dispatch(signupFailed());\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function signupRequest() {\r\n    return {\r\n        type: 'SIGNUP_REQUEST'\r\n    }\r\n}\r\n\r\n\r\nexport function signupSuccess(userInfo) {\r\n    return {\r\n        type: \"SIGNUP_SUCCESS\",\r\n        userInfo: userInfo\r\n    }\r\n}\r\n\r\nexport function signupFailed() {\r\n    return {\r\n        type: \"SIGNUP_FAILURE\"\r\n    }\r\n}\r\n","import Axios from \"axios\";\r\nexport function getAuthorGroups(filters){\r\n    let filterobj = {};\r\n    filterobj.filters = filters;\r\n    return new Promise((resolve, reject) => {\r\n        Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorGroups`, filterobj)\r\n            .then(data => {\r\n                resolve(data.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    });\r\n}","import React, { Component } from 'react';\r\n//import { ShareButton } from \"react-custom-share\";\r\nimport { FacebookProvider, Share } from 'react-facebook';\r\n\r\nimport {\r\n    FacebookIcon,TwitterIcon\r\n} from 'react-share';\r\nimport TwitterSharedButton from './TwitterSharedButton';\r\nclass ShareButtons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        const { id } = this.props;\r\n        const link = `http://conceptionary-frontend.s3-website.us-east-2.amazonaws.com/perspective/${id}`\r\n        return (\r\n          <div>\r\n          <FacebookProvider appId=\"930857800581355\">\r\n            <Share href={link}>\r\n              {({ handleClick}) => (\r\n               \r\n             <button type=\"button\" onClick={handleClick} style={{backgroundColor: 'transparent',border: 'none'}}> <FacebookIcon size={32} round={true} /></button>\r\n              )}\r\n            </Share>\r\n          </FacebookProvider>\r\n          <FacebookProvider appId=\"930857800581355\">\r\n            <Share href={link}>\r\n              {({ handleClick}) => (\r\n               \r\n             <button type=\"button\" onClick={handleClick} style={{backgroundColor: 'transparent',border: 'none'}}> <TwitterIcon size={32} round={true} /></button>\r\n              )}\r\n            </Share>\r\n          </FacebookProvider>\r\n     \r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default ShareButtons;\r\n","import React, { Component } from 'react';\r\n//import { ShareButton } from \"react-custom-share\";\r\nimport ShareLink from 'react-twitter-share-link'\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport './TwitterShareButton.css'\r\nimport {\r\n    TwitterShareButton,TwitterIcon\r\n} from 'react-share';\r\nclass TwitterSharedButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n   \r\n    render() {\r\n        const { id } = this.props;\r\n        const links = `http://conceptionary-frontend.s3-website.us-east-2.amazonaws.com/perspective/${id}`\r\n        return (\r\n        //     <ShareLink link={links}>\r\n        //         {link => (\r\n        //         <a href={link} target='_blank'>Share this on Twitter</a>\r\n        //         )}\r\n        //  </ShareLink>\r\n            <div>\r\n            <Helmet>\r\n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n                <meta name=\"twitter:site\" content=\"@nytimes\" />\r\n                <meta name=\"twitter:creator\" content=\"@SarahMaslinNir\" />\r\n                <meta name=\"twitter:title\" content=\"Parade of Fans for Houston’s Funeral\" />\r\n                <meta name=\"twitter:description\" content=\"NEWARK - The guest list and parade of limousines with celebrities emerging from them seemed more suited to a red carpet event in Hollywood or New York than than a gritty stretch of Sussex Avenue near the former site of the James M. Baxter Terrace public housing project here.\" />\r\n                <meta name=\"twitter:image\" content=\"http://graphics8.nytimes.com/images/2012/02/19/us/19whitney-span/19whitney-span-articleLarge.jpg\" />\r\n            </Helmet>\r\n        <TwitterShareButton\r\n            url={links}\r\n            title=\"Hello World. \\n My name is Jennifer. \\n What is your name?\"\r\n            className=\"Demo__some-network__share-button\">\r\n            <TwitterIcon\r\n            size={32}\r\n            round />\r\n      </TwitterShareButton>\r\n      </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default TwitterSharedButton;\r\n","import React, { Component } from 'react';\r\nimport ShareButtons from '../../SocialShareButtons/ShareButtons';\r\nimport './Context.css'\r\nclass Context extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visibility: 'none',\r\n        }\r\n    }\r\n    render() {\r\n        const { data, authors, keywords } = this.props;\r\n        return (\r\n            <div id={authors[data.Author].lastName} className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\", textAlign:'justify'}} >\r\n                <b style={{fontSize:'18px',textTransform:'capitalize'}}>{data.pronoun}{\" \"} {this.props.selectedOption.label}</b>{\" is \"}{data.description}\r\n                <div onClick={() => this.props.onAuthorClick({ author_first: authors[data.Author].firstName, author_last: authors[data.Author].lastName, born: authors[data.Author].dob, died: authors[data.Author].dod, auth_id: data.Author })} style={{ color: \"red\", cursor: \"pointer\" }}><b>{authors[data.Author].firstName}{\" \"}{authors[data.Author].lastName}</b></div>\r\n                <div ><b>Key Note : </b>&nbsp;\r\n                   {\r\n                        data.Keywords && data.Keywords.length > 0 && data.Keywords.map(k => {\r\n                            return <span style={{ color: \"red\" }}>{data.Keywords.length > 1 && (keywords[k].name + \" | \")}{data.Keywords.length < 2 && (keywords[k].name + \" \")}</span>\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-5 col-sm-5 col-xs-5 pt-3\">\r\n                        <ShareButtons id={data.id} ></ShareButtons>\r\n                    </div>\r\n                    <div className=\"col-md-7 col-sm-7 col-xs-7 text-right  \">\r\n                        {/* <div className=\"text-right\" > */}\r\n                            <i style={{ color: data.isLike ? \"red\" : \"grey\",fontSize:'20px' }}  className=\"fa fa-thumbs-o-up \" aria-hidden=\"true\" onClick={() => this.props.onLikeClick(data.id)}></i>&nbsp;[{data.loves ? this.props.data.loves : \"0\"}]&nbsp;&nbsp; <span className=\"contextbutton\" onClick={() => {\r\n                                this.setState({\r\n                                    visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                                    // id: data.id,\r\n                                })\r\n                            }} style={{ cursor: \"pointer\" }}><span className=\"fa fa-ellipsis-h\" id='ellipseCircle' style={{fontSize:'10px',color:'black'}}></span></span>\r\n                        \r\n                        {/* </div> */}\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-xs-7\">\r\n                        <div id={data.id}  style={{ marginTop: \"20px\", display: [this.state.visibility],backgroundColor:'center' }} >{this.props.data.longDescription}<div style={{ backgroundColor: \"#DCDCDC\" }}>{this.props.data.citation}</div></div>\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n                {/* <div className=\"text-right\" >\r\n                    <i style={{ color: data.isLike ? \"red\" : \"grey\",fontSize:'20px' }} className=\"fa fa-thumbs-o-up \" aria-hidden=\"true\" onClick={() => this.props.onLikeClick(data.id)}></i>&nbsp;[{data.loves ? this.props.data.loves : \"0\"}]&nbsp;&nbsp; <span className=\"contextbutton\" onClick={() => {\r\n                        this.setState({\r\n                            visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                            // id: data.id,\r\n                        })\r\n                    }} style={{ cursor: \"pointer\" }}><i className=\"fa fa-ellipsis-h\" style={{fontSize:'20px'}}></i></span>\r\n                <div id={data.id} style={{ marginTop: \"20px\", display: [this.state.visibility] }} >{this.props.data.longDescription}<div style={{ backgroundColor: \"#DCDCDC\" }}>{this.props.data.citation}</div></div>\r\n                \r\n                </div>\r\n                \r\n                <div>\r\n                    <ShareButtons id={data.id}></ShareButtons>\r\n                </div> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// Context.PropTypes = {\r\n//     data: PropTypes.object.isRequired,\r\n//     selectedOption: PropTypes.object.isRequired,\r\n//     onAuthorClick: PropTypes.func.isRequired,\r\n// }\r\nexport default Context;","const keywordsSorter = (a, b) => {\r\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n        return -1;\r\n    }\r\n    if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport default keywordsSorter;","const conceptsSorter = (a, b) => {\r\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n        return -1;\r\n    }\r\n    if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport default conceptsSorter;","import keywordSorterFunction from '../utils/keywordsSorterFunction';\r\nimport conceptsSorter from '../utils/conceptsSorterFunction';\r\nexport function getUniqueKeywords(state) {\r\n    let perspectivesRelations = state.concepts.perspectivesRelations;\r\n    let perspectiveIds = state.concepts.perspectiveIds;\r\n    let keywords = state.concepts.keywords;\r\n    if (perspectivesRelations && perspectiveIds && perspectiveIds.length > 0 && keywords) {\r\n        const uniqueKeysWords = [];\r\n        const uniqueKeywordNamesOnly = [];\r\n        perspectiveIds.forEach(id => {\r\n            perspectivesRelations[id].Keywords.forEach(keyword => {\r\n                keywords[keyword].count = 1;\r\n                if (!uniqueKeywordNamesOnly.includes(keywords[keyword].name)) {\r\n                    uniqueKeywordNamesOnly.push(keywords[keyword].name)\r\n                    uniqueKeysWords.push(keywords[keyword])\r\n                }\r\n                else {\r\n                    for (let i = 1; i < uniqueKeysWords.length; i++) {\r\n                        if (uniqueKeysWords[i].id === keywords[keyword].id) {\r\n                            uniqueKeysWords[i].count = uniqueKeysWords[i].count + 1;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        return uniqueKeysWords.sort(keywordSorterFunction);\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nexport function getUniqueSortedAuthors(state) {\r\n    let perspectiveids = state.concepts.perspectiveIds;\r\n    let perspectivesRelations = state.concepts.perspectivesRelations;;\r\n    let authors = state.concepts.authors;\r\n    if (perspectiveids && perspectiveids.length > 0 && authors && perspectivesRelations) {\r\n        let uniqueAuthorWithDetails = [];\r\n        let uniqueAuthorNames = [];\r\n        perspectiveids.forEach(id => {\r\n            if (!(uniqueAuthorNames.indexOf((authors[perspectivesRelations[id].Author].firstName + authors[perspectivesRelations[id].Author].lastName)) > -1)) {\r\n                uniqueAuthorNames.push((authors[perspectivesRelations[id].Author].firstName + authors[perspectivesRelations[id].Author].lastName));\r\n                uniqueAuthorWithDetails.push(authors[perspectivesRelations[id].Author]);\r\n            }\r\n        })\r\n        return uniqueAuthorWithDetails.sort(function (a, b) {\r\n            let authorALastName = a.lastName.toUpperCase();\r\n            let authorBLastName = b.lastName.toUpperCase();\r\n            return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n        });\r\n    }\r\n}\r\n\r\nexport function getUniqueConcept(state) {\r\n    let author = state.author.author;\r\n    let perspectives = state.author.authorPerspectives;\r\n    let concepts = state.author.concepts;\r\n    if (author.Perspectives && author.Perspectives.length > 0 && perspectives) {\r\n        let uniqueConcecptObjects = [];\r\n        let helperUniqueIds = [];\r\n        author.Perspectives.forEach(element => {\r\n            let count = 0;\r\n            if (!(helperUniqueIds.includes(perspectives[element].ConceptId))) {\r\n                count += 1;\r\n                let discrete_author_name_id = perspectives[element].ConceptId;\r\n                let discrete_author_name = concepts[perspectives[element].ConceptId].name;\r\n                helperUniqueIds.push(perspectives[element].ConceptId)\r\n                uniqueConcecptObjects.push({ discrete_author_name_id, discrete_author_name, count })\r\n            }\r\n            else {\r\n                uniqueConcecptObjects.forEach(object => {\r\n                    if (object.discrete_author_name_id == perspectives[element].ConceptId) {\r\n                        object.count += 1;\r\n                    }\r\n                })\r\n            }\r\n        });\r\n        uniqueConcecptObjects.sort(function (a, b) {\r\n            var textA = a.discrete_author_name.toUpperCase();\r\n            var textB = b.discrete_author_name.toUpperCase();\r\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n        });\r\n        return uniqueConcecptObjects;\r\n    }\r\n}\r\n\r\nexport function getSortedPerspectivesByConceptName(state) {\r\n    let author = state.author.author;\r\n    let perspectives = state.author.authorPerspectives;\r\n    let concepts = state.author.concepts;\r\n    if (author.Perspectives && author.Perspectives.length > 0 && perspectives) {\r\n        let tempPerspectives = [];\r\n        author.Perspectives.forEach(id => {\r\n            tempPerspectives.push(perspectives[id]);\r\n        })\r\n        return tempPerspectives.sort((a, b) => {\r\n            let conceptNameA = concepts[a.Concept].name.toLowerCase();\r\n            let conceptNameB = concepts[b.Concept].name.toLowerCase();\r\n            return conceptNameA < conceptNameB ? -1 : (conceptNameA > conceptNameB) ? 1 : 0;\r\n        })\r\n    }\r\n}\r\nexport function getUniqueAuthorBooks(state) {\r\n    let author = state.author.author;\r\n    let books = state.author.authorBooks;\r\n    if (author && author.Books && author.Books.length > 0 && books) {\r\n        let bookids = author.Books;\r\n        let uniqueBookNameWithId = [];\r\n        let uniqueBookIds = [];\r\n        bookids.forEach(bookid => {\r\n            if (!(uniqueBookIds.indexOf(books[bookid].id) > -1)) {\r\n                uniqueBookIds.push(books[bookid].id);\r\n                let discrete_book_id = books[bookid].id;\r\n                let title = books[bookid].title;\r\n                uniqueBookNameWithId.push({ discrete_book_id, title });\r\n            }\r\n        })\r\n        return uniqueBookNameWithId;\r\n    }\r\n}\r\nexport function getAuthorBioData(state) {\r\n    let authorGroups = state.author.authorGroups;\r\n    let authorBioHeadings = state.author.authorBioHeadings;\r\n    let author = state.author.author;\r\n    if (author && author.AuthorGroups && author.AuthorGroups.length > 0) {\r\n        let data = [];\r\n        let uniqueBioHeadings = [];\r\n        author.AuthorGroups.map(id => {\r\n            if (authorGroups[id].AuthorBioHeading) {\r\n                if (!uniqueBioHeadings.includes(authorBioHeadings[authorGroups[id].AuthorBioHeading].name)) {\r\n                    uniqueBioHeadings.push(authorBioHeadings[authorGroups[id].AuthorBioHeading].name);\r\n                    data.push({ heading: authorBioHeadings[authorGroups[id].AuthorBioHeading].name, values: [{ name: authorGroups[id].name, id: authorGroups[id].id }] });\r\n                }\r\n                else {\r\n                    data.forEach(element => {\r\n                        if (element.heading === authorBioHeadings[authorGroups[id].AuthorBioHeading].name) {\r\n                            element.values.push({ name: authorGroups[id].name, id: authorGroups[id].id });\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        return data;\r\n    }\r\n    return;\r\n}\r\n\r\nexport function getUniqueSortedConceptsFromConceptCluster(state) {\r\n    let conceptCluster = state.conceptClusters.conceptCluster;\r\n    let concepts = state.conceptClusters.concepts;\r\n    if (conceptCluster && conceptCluster.Concepts && conceptCluster.Concepts.length > 0 && concepts) {\r\n        let uniqueConceptNames = [];\r\n        let sortedUniqueConcepts = [];\r\n        conceptCluster.Concepts.map(id => {\r\n            if (!uniqueConceptNames.includes(concepts[id].name)) {\r\n                uniqueConceptNames.push(concepts[id].name);\r\n                sortedUniqueConcepts.push(concepts[id]);\r\n            }\r\n        })\r\n        return sortedUniqueConcepts.sort((a, b) => {\r\n            let conceptNameA = a.name.toLowerCase();\r\n            let conceptNameB = b.name.toLowerCase();\r\n            return conceptNameA < conceptNameB ? -1 : (conceptNameA > conceptNameB) ? 1 : 0;\r\n        })\r\n    }\r\n}\r\n\r\nexport function getPerspectivesFromConceptCluster(state) {\r\n    let conceptCluster = state.conceptClusters.conceptCluster;\r\n    let concepts = state.conceptClusters.concepts;\r\n    let perspective = state.conceptClusters.perspective;\r\n    let authorClicked = state.conceptClusters.authorClicked;\r\n    let conceptClicked = state.conceptClusters.conceptClicked;\r\n    let authors = state.conceptClusters.authors;\r\n    if (conceptCluster && conceptCluster.Concepts && conceptCluster.Concepts.length > 0 && concepts && perspective) {\r\n        const perspectives = [];\r\n        let conceptids = conceptCluster.Concepts;\r\n        conceptids.forEach(id => {\r\n            perspectives.push(...concepts[id].Perspectives.map(perspectiveId => {\r\n                perspective[perspectiveId].ConceptName = concepts[id].name;\r\n                return perspective[perspectiveId];\r\n            }));\r\n        })\r\n        if (authorClicked) {\r\n            perspectives.sort(function (a, b) {\r\n                var textA = authors[a.Author].lastName.toUpperCase();\r\n                var textB = authors[b.Author].lastName.toUpperCase();\r\n                return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n            });\r\n        }\r\n        else if (conceptClicked) {\r\n            perspectives.sort(function (a, b) {\r\n                var authorA = authors[a.Author].lastName.toUpperCase();\r\n                var authorB = authors[b.Author].lastName.toUpperCase();\r\n                var textA = a.ConceptName.toUpperCase();\r\n                var textB = b.ConceptName.toUpperCase();\r\n                if (textA === textB) {\r\n                    return (authorA < authorB) ? -1 : (authorA > authorB) ? 1 : 0;\r\n                }\r\n                else {\r\n                    return (textA < textB) ? -1 : 1;\r\n                }\r\n            });\r\n\r\n        }\r\n        return perspectives;\r\n    }\r\n}\r\n\r\nexport function getUniqueAuthorsFromConceptCluster(state) {\r\n    let concepts = state.conceptClusters.concepts;\r\n    let authors = state.conceptClusters.authors;\r\n    let perspective = state.conceptClusters.perspective;\r\n    let conceptCluster = state.conceptClusters.conceptCluster;\r\n    if (conceptCluster && conceptCluster.Concepts && concepts && perspective && authors) {\r\n        const conceptids = conceptCluster.Concepts;\r\n        const uniqueAuthors = [];\r\n        const uniqueAuthorNames = [];\r\n        conceptids.forEach(id => {\r\n            concepts[id].Perspectives.forEach(perspecid => {\r\n                if (!uniqueAuthorNames.includes(perspective[perspecid].AuthorId)) {\r\n                    uniqueAuthorNames.push(perspective[perspecid].AuthorId)\r\n                    uniqueAuthors.push({\r\n                        id: perspective[perspecid].AuthorId,\r\n                        firstName: authors[perspective[perspecid].Author].firstName,\r\n                        lastName: authors[perspective[perspecid].Author].lastName\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        uniqueAuthors.sort(function (a, b) {\r\n            let authorALastName = a.lastName.toUpperCase();\r\n            let authorBLastName = b.lastName.toUpperCase();\r\n            return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n        })\r\n        return uniqueAuthors;\r\n    }\r\n}\r\n\r\nexport function getUniqueSortedConceptNameFromAuthorCluster(state) {\r\n    let perspectives = state.autherCluster.perspectives;\r\n    let authorCluster = state.autherCluster.authorCluster;\r\n    if (perspectives && perspectives.length > 0 && authorCluster) {\r\n        let uniqueConceptNames = [];\r\n        let uniqueConcepts = [];\r\n        perspectives.map(conceptid => {\r\n            if (!uniqueConceptNames.includes(authorCluster[conceptid].conceptName)) {\r\n                uniqueConceptNames.push(authorCluster[conceptid].conceptName);\r\n                uniqueConcepts.push({ name: authorCluster[conceptid].conceptName, id: authorCluster[conceptid].conceptId });\r\n            }\r\n        })\r\n        return uniqueConcepts.sort(conceptsSorter);\r\n    }\r\n}\r\n\r\nexport function getDynamicSortedAuthorClusterWithDetails(state) {\r\n    let perspectives = state.autherCluster.perspectives;\r\n    let authorCluster = state.autherCluster.authorCluster;\r\n    let authorClicked = authorCluster.authorClicked;\r\n    let conceptClicked = authorCluster.conceptClicked;\r\n    if (perspectives && perspectives.length > 0 && authorCluster) {\r\n        let copyAuthorClusterWithDetails = [];\r\n        perspectives.forEach(id => {\r\n            copyAuthorClusterWithDetails.push(authorCluster[id]);\r\n        })\r\n        if (authorClicked) {\r\n            copyAuthorClusterWithDetails.sort(function (a, b) {\r\n                var textA = a.authorLastName.toUpperCase();\r\n                var textB = b.authorLastName.toUpperCase();\r\n                return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n            });\r\n        }\r\n        else if (conceptClicked) {\r\n            copyAuthorClusterWithDetails.sort(function (a, b) {\r\n                var authorA = a.authorLastName.toUpperCase();\r\n                var authorB = b.authorLastName.toUpperCase();\r\n                var textA = a.conceptName.toUpperCase();\r\n                var textB = b.conceptName.toUpperCase();\r\n                if (textA === textB) {\r\n                    return (authorA < authorB) ? -1 : (authorA > authorB) ? 1 : 0;\r\n                }\r\n                else {\r\n                    if (textA === \"CULTURE\") {\r\n                        console.log(\"not author sorting\");\r\n                    }\r\n                    else {\r\n                        if (textA === \"CULTURE\") {\r\n                            console.log(\"not author sorting\");\r\n                        }\r\n                        return (textA < textB) ? -1 : 1;\r\n                    }\r\n                    // return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n                }\r\n            });\r\n        }\r\n        return copyAuthorClusterWithDetails;\r\n    }\r\n}\r\n\r\nexport function getSortedAuthorClusterWithDetailsByAuthorLast(state) {\r\n    let clustersWithDetails = state.autherCluster.authorClustersWithDetails;\r\n    if (clustersWithDetails && clustersWithDetails.length > 0) {\r\n        let copyAuthorClusterWithDetails = [...clustersWithDetails];\r\n        copyAuthorClusterWithDetails.sort(function (a, b) {\r\n            var textA = a.authorLastName.toUpperCase();\r\n            var textB = b.authorLastName.toUpperCase();\r\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n        });\r\n        return copyAuthorClusterWithDetails;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Loader from '../LoaderComponent/Loader';\r\nimport AdSense from 'react-adsense';\r\nimport \"./ConceptsPage.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport ReactLoading from 'react-loading';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport AdsComponent from '../AdComponent/AdComponent';\r\nimport {\r\n    flushConceptState, getListRelatedByConceptId,\r\n    getConceptFromApi,\r\n    increasePerspectiveLike,\r\n    decreasePerspectiveLike,\r\n    sortByKeyword,\r\n    showAllPerspective,\r\n    sortByAuthorLast,\r\n    getConceptPerspectivesByAuthor,\r\n    getConceptPerspectivesByKeywords,\r\n    getAllPerspectivesByConcept,\r\n    setConceptPageNo\r\n} from \"../../actions/conceptsActions\";\r\nimport { setSelectedCategory, setSelectedItem, addTag } from \"../../actions/navbaractions\";\r\nimport { getAuthorGroups } from \"../../utilities\";\r\nimport Context from \"./Context/Context\";\r\nimport { getUniqueKeywords, getUniqueSortedAuthors } from '../../selectors';\r\nimport queryString from \"query-string\";\r\nimport Axios from 'axios';\r\nclass ConceptsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: \"\",\r\n            filters: false,\r\n            apiLoading: this.props.concepts.apiLoading,\r\n            apiServerError: this.props.concepts.apiServerError,\r\n            apiNetworkError: this.props.concepts.apiNetworkError,\r\n            conceptWithDetails: this.props.concepts.conceptWithDetails,\r\n            listRelatedData: this.props.concepts.listRelatedData,\r\n            listRelatedLoading: this.props.concepts.listRelatedLoading,\r\n            listRelatedServerError: this.props.concepts.listRelatedServerError,\r\n            listRelatedNetworkError: this.props.concepts.listRelatedNetworkError,\r\n            selectedOption: this.props.navbar.selectedOption,\r\n            perspectives: this.props.concepts.perspectives,\r\n            keywords: this.props.concepts.keywords,\r\n            concept: this.props.concepts.concept,\r\n            authors: this.props.concepts.authors,\r\n            perspectivesRelations: this.props.concepts.perspectivesRelations,\r\n            perspectivesDetail: this.props.concepts.perspectivesDetail,\r\n            UniqueKeywords: this.props.uniqueKeyWords,\r\n            UniqueAuthors: this.props.uniqueAuthors,\r\n            visibility: \"hidden\",\r\n            keywordId: null,\r\n            authorId: null,\r\n            id: \"\",\r\n            all: false,\r\n            sortByAuthor: null,\r\n            isLike: this.props.concepts.isLike,\r\n            filteredPerspectives: [],\r\n            perspectiveLoading: false,\r\n            page_no: 1\r\n        };\r\n        this.getFilteredPerspectives = this.getFilteredPerspectives.bind(this);\r\n        this.filterConceptDefinations = this.filterConceptDefinations.bind(this);\r\n        this.onAuthorClick = this.onAuthorClick.bind(this);\r\n        this.onListClick = this.onListClick.bind(this);\r\n        this.onListRelatedClick = this.onListRelatedClick.bind(this);\r\n        this.onRelatedClick = this.onRelatedClick.bind(this);\r\n        this.toggleListRelated = this.toggleListRelated.bind(this);\r\n        this.viewMorePerspectiveHandler = this.viewMorePerspectiveHandler.bind(this);\r\n        this.onLikeClick = this.onLikeClick.bind(this);\r\n        if (this.props.navbar.selectedOption) {\r\n            if (this.props.navbar.selectedOption.id) {\r\n                if (this.props.navbar.selectedOption.category == \"Concepts\") {\r\n                    let concept = {\r\n                        \"concept_id\": this.props.navbar.selectedOption.id,\r\n                        \"filters\": this.props.navbar.tags.map(tag => tag.id),\r\n                    };\r\n                    this.props.getConceptFromApi(concept);\r\n                    this.props.getListRelatedByConceptId(concept)\r\n                    //this.props.setConceptPageNo(this.props.concepts.page_no + 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onListRelatedClick(listRelated) {\r\n        let label = listRelated.relationary_supra;\r\n        let value = label;\r\n        let id = listRelated.relationary_thing_supra_id;\r\n        let category = \"Concept-Clusters\";\r\n        this.props.flushConceptState()\r\n        this.props.setSelectedItem({ label, value, id, category });\r\n    }\r\n    getConcept = (concept_name) => {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/concepts?name=${concept_name}`).then(data => {\r\n                if (data.data.obj) {\r\n                    let result = data.data.obj.selectedOption;\r\n                    resolve(result);\r\n                }\r\n                resolve(null);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n    async componentWillMount() {\r\n        if (this.props.match.params.name) {\r\n            if (this.props.match.params.name && queryString.parse(this.props.location.search).filters) {\r\n                let filters = [];\r\n                let queryFilters = queryString.parse(this.props.location.search).filters;\r\n                let concept_name = this.props.match.params.name;\r\n                if (typeof queryFilters === \"string\") {\r\n                    filters.push(queryFilters);\r\n                } else {\r\n                    filters = queryFilters;\r\n                }\r\n                this.setState({\r\n                    query: concept_name,\r\n                    filters: true\r\n                })\r\n                let result = await this.getConcept(concept_name);\r\n                let author_group = await getAuthorGroups(filters);\r\n                if (result) {\r\n                    this.props.addTag(author_group);\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result,\r\n                    });\r\n                } else {\r\n                    this.props.history.push('/Message');\r\n                }\r\n\r\n            } else {\r\n                let concept_name = this.props.match.params.name;\r\n                this.setState({\r\n                    query: concept_name\r\n                });\r\n                let result = await this.getConcept(concept_name);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result,\r\n                    })\r\n                } else {\r\n                    this.props.history.push('/Message');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.selectedOption != nextProps.navbar.selectedOption) {\r\n            this.props.flushConceptState();\r\n            this.setState({\r\n                apiLoading: nextProps.concepts.apiLoading,\r\n                apiServerError: nextProps.concepts.apiServerError,\r\n                apiNetworkError: nextProps.concepts.apiNetworkError,\r\n                conceptWithDetails: nextProps.concepts.conceptWithDetails,\r\n                conceptsWithDetails: nextProps.concepts.conceptsWithDetails,\r\n                orignalConceptsWithDetails: nextProps.concepts.conceptsWithDetails,\r\n                //perspectiveids: nextProps.concepts.perspectiveids,\r\n                perspectivesRelations: nextProps.concepts.perspectivesRelations,\r\n                perspectivesDetail: nextProps.concepts.perspectivesDetail,\r\n                concept: nextProps.concepts.concept,\r\n                authors: nextProps.concepts.authors,\r\n                keywords: nextProps.concepts.keywords,\r\n                UniqueKeywords: nextProps.uniqueKeyWords,\r\n                UniqueAuthors: nextProps.uniqueAuthors,\r\n                listRelatedData: nextProps.concepts.listRelatedData,\r\n                listRelatedLoading: nextProps.concepts.listRelatedLoading,\r\n                listRelatedNetworkError: nextProps.concepts.listRelatedNetworkError,\r\n                listRelatedServerError: nextProps.concepts.listRelatedServerError,\r\n                loading: nextProps.concepts.loading,\r\n                //page_no: nextProps.concepts.page_no\r\n            })\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Concepts\") {\r\n                this.setState({\r\n                    selectedOption: nextProps.navbar.selectedOption,\r\n                });\r\n\r\n                let concept = {\r\n                    \"concept_id\": nextProps.navbar.selectedOption.id,\r\n                    \"filters\": nextProps.navbar.tags.map(tag => tag.id)\r\n                };\r\n                this.props.getConceptFromApi(concept)\r\n                this.props.getListRelatedByConceptId(concept);\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                apiLoading: nextProps.concepts.apiLoading,\r\n                apiServerError: nextProps.concepts.apiServerError,\r\n                apiNetworkError: nextProps.concepts.apiNetworkError,\r\n                conceptWithDetails: nextProps.concepts.conceptWithDetails,\r\n                conceptsWithDetails: nextProps.concepts.conceptsWithDetails,\r\n                orignalConceptsWithDetails: nextProps.concepts.conceptsWithDetails,\r\n                perspectiveids: nextProps.concepts.perspectiveids,\r\n                keywords: nextProps.concepts.keywords,\r\n                listRelatedData: nextProps.concepts.listRelatedData,\r\n                listRelatedLoading: nextProps.concepts.listRelatedLoading,\r\n                listRelatedNetworkError: nextProps.concepts.listRelatedNetworkError,\r\n                listRelatedServerError: nextProps.concepts.listRelatedServerError,\r\n                loading: nextProps.concepts.loading,\r\n                perspectivesRelations: nextProps.concepts.perspectivesRelations,\r\n                perspectivesDetail: nextProps.concepts.perspectivesDetail,\r\n                concept: nextProps.concepts.concept,\r\n                UniqueKeywords: nextProps.uniqueKeyWords,\r\n                UniqueAuthors: nextProps.uniqueAuthors,\r\n                authors: nextProps.concepts.authors,\r\n                isLike: nextProps.concepts.isLike,\r\n                // page_no: nextProps.concepts.page_no\r\n            })\r\n        }\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption.category == \"Concepts\") {\r\n                let concept = {\r\n                    \"concept_id\": this.state.selectedOption.id,\r\n                    \"filters\": nextProps.navbar.tags.map(tag => tag.id)\r\n                };\r\n                this.props.getConceptFromApi(concept)\r\n                this.props.getListRelatedByConceptId(concept);\r\n            }\r\n\r\n        }\r\n\r\n        if (nextProps.concepts.perspectivesDetail !== this.state.perspectivesDetail) {\r\n\r\n            this.setState({\r\n                perspectiveLoading: false,\r\n                filteredPerspectives: this.getFilteredPerspectives(\r\n                    nextProps.concepts.perspectivesDetail,\r\n                    nextProps.concepts.perspectivesRelations,\r\n                    nextProps.concepts.authors,\r\n                )\r\n            })\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    perspectiveLoading: false,\r\n                })\r\n            }, 500)\r\n        }\r\n    }\r\n    listenToScroll =() => {\r\n        \r\n        console.log(\"hellow\");\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.listenToScroll)\r\n        this.setState({\r\n            filteredPerspectives: this.getFilteredPerspectives(\r\n                this.state.perspectivesDetail,\r\n                this.state.perspectivesRelations,\r\n                this.state.authors,\r\n            )\r\n        })\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.state.sortByAuthor) {\r\n            const element = document.getElementById(this.state.sortByAuthor);\r\n            if (element) {\r\n                element.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        }\r\n    }\r\n    toggleListRelated() {\r\n        this.setState({\r\n            listRelated: !this.state.listRelated,\r\n        })\r\n    }\r\n    onListClick() {\r\n        this.setState({\r\n            listRelatedRole: 'list'\r\n        })\r\n        this.toggleListRelated();\r\n    }\r\n    onRelatedClick() {\r\n        this.setState({\r\n            listRelatedRole: 'related',\r\n        })\r\n        this.toggleListRelated();\r\n    }\r\n    onLikeClick(id) {\r\n        if (this.state.perspectives[id].isLike) {\r\n            this.props.decreasePerspectiveLike(id);\r\n        }\r\n        else {\r\n            this.props.increasePerspectiveLike(id);\r\n        }\r\n    }\r\n    onAuthorClick(author) {\r\n        let label = author.author_first + \" \" + author.author_last;\r\n        let value = label;\r\n        let id = author.auth_id;\r\n        let born = author.born;\r\n        let died = author.died;\r\n        let category = \"Authors\"\r\n        this.props.flushConceptState()\r\n        this.props.setSelectedItem({ label, value, id, born, died, category });\r\n    }\r\n    filterConceptDefinations(keyword_id) {\r\n        let rtn = [];\r\n        this.state.orignalConceptsWithDetails.forEach(element => {\r\n            if (element.keywords_id == keyword_id) {\r\n                rtn.push(element);\r\n            }\r\n        });\r\n        this.setState({\r\n            conceptsWithDetails: rtn,\r\n        })\r\n    }\r\n    viewMorePerspectiveHandler() {\r\n        this.props.getAllPerspectivesByConcept(this.state.selectedOption.id, this.state.page_no)\r\n        this.setState({\r\n            page_no: this.state.page_no + 1,\r\n            perspectiveLoading: true\r\n        })\r\n    }\r\n    getFilteredPerspectives(perspectivesDetail, perspectivesRelations, authors) {\r\n        if (perspectivesRelations && authors && perspectivesDetail && perspectivesDetail.length > 0) {\r\n            let result = [];\r\n            if (this.state.sortBy == 'keyword') {\r\n                let filteredPerspectives = [];\r\n                let nonFilteredPerspectives = [];\r\n                perspectivesDetail.forEach(perspective => {\r\n                    let includes = false;\r\n                    if (perspectivesRelations[perspective.id]) {\r\n                        perspectivesRelations[perspective.id].Keywords.forEach(k => {\r\n                            if (k == this.state.sortByKeywordId) {\r\n                                perspective.Author = perspectivesRelations[perspective.id].Author;\r\n                                perspective.Keywords = perspectivesRelations[perspective.id].Keywords;\r\n                                includes = true;\r\n                            }\r\n                        });\r\n                        includes === true ? filteredPerspectives.push(perspective) : nonFilteredPerspectives.push(perspective);\r\n                    }\r\n                });\r\n                result = filteredPerspectives.sort(function (a, b) {\r\n                    let authorALastName = authors[a.Author].lastName.toUpperCase();\r\n                    let authorBLastName = authors[b.Author].lastName.toUpperCase();\r\n                    return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n                });\r\n                return result;\r\n            }\r\n            else {\r\n                if (this.state.sortByAuthor) {\r\n                    // let includes = false;\r\n                    // perspectivesDetail.forEach(perspective => {\r\n                    //     if (perspectivesRelations[perspective.id] && authors[perspectivesRelations[perspective.id].Author].lastName === this.state.sortByAuthor) {\r\n                    //         includes = true;\r\n                    //     }\r\n                    // })\r\n                    //if (includes) {\r\n                    perspectivesDetail.forEach(perspective => {\r\n                        if (perspectivesRelations[perspective.id]) {\r\n                            perspective.Author = perspectivesRelations[perspective.id].Author;\r\n                            perspective.Keywords = perspectivesRelations[perspective.id].Keywords;\r\n                            result.push(perspective)\r\n                        }\r\n                    })\r\n                    return result\r\n                    // }\r\n                    // this.setState({\r\n                    //     perspectiveLoading: true\r\n                    // })\r\n                    // this.props.getConceptPerspectivesByAuthor(this.state.sortByAuthor);\r\n                } else {\r\n                    perspectivesDetail.forEach(perspective => {\r\n                        if (perspectivesRelations[perspective.id]) {\r\n                            perspective.Author = perspectivesRelations[perspective.id].Author;\r\n                            perspective.Keywords = perspectivesRelations[perspective.id].Keywords;\r\n                            result.push(perspective);\r\n                        }\r\n                    });\r\n                    result = result.sort(function (a, b) {\r\n                        let authorALastName = authors[a.Author].lastName.toUpperCase();\r\n                        let authorBLastName = authors[b.Author].lastName.toUpperCase();\r\n                        return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n                    })\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <LoadingOverlay\r\n                spinner={<Loader></Loader>}\r\n                active={this.state.perspectiveLoading}\r\n            >\r\n                <div className=\"overflowhidden\" style={{ overflow: \"hidden\" }}>\r\n                    {(this.state.selectedOption.id && this.state.selectedOption.category == \"Concepts\" || this.state.query) && < div className=\"container-fluid\">\r\n                        {this.state.apiLoading && <div style={{ width: \"100px\", margin: \"auto\", marginTop: \"30vh\" }}>\r\n                            <ReactLoading type={\"balls\"} color={\"red\"} />\r\n                        </div>}\r\n                        {!this.state.apiLoading && !this.state.apiNetworkError && !this.state.apiServerError && <div className=\"row\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-3  \" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", textTransform: 'capitalize', height: \"90vh\", overflow: \"auto\", textAlign: \"\" }}>\r\n                                <div className='' style={{ width: \"100%\", margin: \"auto\", background: \"#F6F0EF\", textAlign: '', borderRadius: '20px' }}>\r\n                                    {this.state.listRelatedLoading && <div style={{ width: \"100px\", margin: \"auto\" }}>\r\n                                        <ReactLoading type=\"balls\" color=\"red\" />\r\n                                    </div>}\r\n\r\n                                    {!this.state.listRelatedLoading && <div>\r\n                                        <div style={{ backgroundColor: 'white', textAlign: 'center', marginTop: '10px', padding: '5px' }}><h3>{this.state.selectedOption.label}</h3></div>\r\n                                    </div>}\r\n                                    <div style={{ backgroundColor: 'white', marginBottom: '5px' }}>\r\n                                        {!this.state.listRelatedLoading && <div style={{ paddingLeft: '50px', marginTop: '5px', background: 'white' }}>\r\n                                            <label style={{ backgroundColor: \"\", borderRadius: \"15px\", border: '1px solid black', padding: \"5px 20px\", marginTop: \"10px\", marginLeft: \"\", marginRight: \"5px\", cursor: \"pointer\", }}\r\n                                                onClick={this.onListClick}>Lists</label>\r\n                                            <label style={{ cursor: \"pointer\", backgroundColor: \"\", borderRadius: \"15px\", border: '1px solid black', padding: \"5px 15px\", marginTop: \"10px\", marginLeft: \"5px\" }}\r\n                                                onClick={this.onRelatedClick}>Related</label>\r\n                                        </div>}\r\n                                        <div style={{ width: '200px', border: \"1px solid green\", display: [this.state.listRelated ? 'block' : 'none'], textAlign: \"center\" }}>\r\n                                            {this.state.listRelatedRole == 'list' && this.state.listRelatedData && this.state.listRelatedData.length > 0 && returnOnlyListData(this.state.listRelatedData).map(data => {\r\n                                                return <div style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => this.onListRelatedClick({ relationary_supra: data.name, relationary_thing_supra_id: data.id })}>{data.name}</div>\r\n                                            })}\r\n                                            {this.state.listRelatedRole == 'related' && this.state.listRelatedData && this.state.listRelatedData.length > 0 && returnOnlyRelationData(this.state.listRelatedData).map(data => {\r\n                                                return <div style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => this.onListRelatedClick({ relationary_supra: data.name, relationary_thing_supra_id: data.id })} >{data.name}</div>\r\n                                            })}\r\n                                        </div>\r\n                                        {/* <div onClick={() => this.props.showAllPerspective(true)}  className=\"btn btn-link text-center\">Show All</div> */}\r\n                                    </div>\r\n                                    {this.state.UniqueKeywords && (this.state.UniqueKeywords.length > 0 && <div style={{ width: \"100%\", margin: \"auto\" }} >\r\n                                        <div style={{ backgroundColor: 'white', width: '100%' }}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-xs-2 col-sm-2 col-md-2\">\r\n                                                    <div onClick={() => {\r\n                                                        this.props.showAllPerspective(this.state.selectedOption.id)\r\n                                                    }\r\n                                                    } className=\"btn btn-link text-center rotate\"  ><b>Show All</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-8 col-sm-8 col-md-8\" style={{ backgroundColor: 'white' }}>\r\n                                                    {this.state.UniqueKeywords.map(keyword => {\r\n                                                        return <a href=\"#top\" style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }} onClick={() => {\r\n                                                            this.setState({\r\n                                                                sortBy: \"keyword\",\r\n                                                                sortByKeywordId: keyword.id,\r\n                                                            }, () => {\r\n\r\n                                                                this.props.getConceptPerspectivesByKeywords(this.state.sortByKeywordId)\r\n\r\n                                                            })\r\n                                                        }}><b style={{ color: 'black', fontWeight: '15px:', fontSize: '16px' }}>{keyword.name}</b><span style={{ color: 'gray' }}>{\" (\" + keyword.count + \")\"}</span></a>\r\n\r\n                                                    })}\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n                                    </div>)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"90vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                                <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                    <div id=\"img\" style={{ width: \"398px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                        <h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                    </div>\r\n                                    <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"398px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                        <label className=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Positive\r\n                                        </label>\r\n                                        <label className=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Critical\r\n                                        </label>\r\n                                        <label className=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Funny\r\n                                        </label>\r\n                                    </div>\r\n                                    {\r\n                                        <div id=\"top\"></div>\r\n                                    }\r\n                                    {\r\n                                        this.state.selectedOption && this.state.filteredPerspectives && this.state.filteredPerspectives.length > 0 && this.state.filteredPerspectives.map(data => {\r\n                                            return (\r\n                                                <div>\r\n                                                    <Context data={data}\r\n                                                        authors={this.state.authors}\r\n                                                        selectedOption={this.state.selectedOption}\r\n                                                        keywords={this.state.keywords}\r\n                                                        onAuthorClick={this.onAuthorClick}\r\n                                                        onLikeClick={this.onLikeClick}\r\n                                                        isLike={this.state.isLike}\r\n                                                    />\r\n                                                </div>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                    <div className=\"row\" >\r\n                                        <div className=\"col-md-7 col-sm-7 col-xs-7 text-left \">\r\n                                            <span onClick={() => { this.viewMorePerspectiveHandler() }} style={{cursor:'pointer'}}><b>view more..</b></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-2\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"90vh\", overflow: \"auto\", border: \"1px solid #a5a5a5\", borderLeft: '1px solid black' }}>\r\n                                {this.state.UniqueAuthors && this.state.UniqueAuthors.length > 0 && this.state.UniqueAuthors.map(data => {\r\n                                    return (\r\n                                        <div style={{ width: \"150px\", margin: \"auto\" }}><a onClick={() => {\r\n                                            this.setState({\r\n                                                sortByAuthor: data.lastName,\r\n                                                sortBy: \"\",\r\n                                                perspectiveLoading: true\r\n                                            }, () => {\r\n                                                this.props.getConceptPerspectivesByAuthor(this.state.sortByAuthor)\r\n\r\n                                            })\r\n                                        }} style={{ color: \"black\", textDecoration: \"none\", cursor: \"pointer\" }} href={`#${data.lastName}`}><b>{(data.lastName && data.firstName) ? (data.lastName + \", \" + data.firstName) : (data.lastName ? data.lastName : (data.firstName ? data.firstName : \"\"))}</b></a></div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"90vh\", overflow: \"auto\", borderLeft: \"0px\", borderRight: \"3px  solid pink\", borderTop: \"3px  solid pink\", borderBottom: \"3px  solid pink\", textAlign: \"center\" }}>\r\n                                <div className=\"text-center\">\r\n                                    <AdsComponent></AdsComponent>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>}\r\n                </div>\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //getConceptDetails: bindActionCreators(getConceptDetails, dispatch),\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        flushConceptState: bindActionCreators(flushConceptState, dispatch),\r\n        getListRelatedByConceptId: bindActionCreators(getListRelatedByConceptId, dispatch),\r\n        getConceptFromApi: bindActionCreators(getConceptFromApi, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        increasePerspectiveLike: bindActionCreators(increasePerspectiveLike, dispatch),\r\n        decreasePerspectiveLike: bindActionCreators(decreasePerspectiveLike, dispatch),\r\n        sortByAuthorLast: bindActionCreators(sortByAuthorLast, dispatch),\r\n        sortByKeyword: bindActionCreators(sortByKeyword, dispatch),\r\n        showAllPerspective: bindActionCreators(showAllPerspective, dispatch),\r\n        getConceptPerspectivesByAuthor: bindActionCreators(getConceptPerspectivesByAuthor, dispatch),\r\n        getConceptPerspectivesByKeywords: bindActionCreators(getConceptPerspectivesByKeywords, dispatch),\r\n        getAllPerspectivesByConcept: bindActionCreators(getAllPerspectivesByConcept, dispatch),\r\n        setConceptPageNo: bindActionCreators(setConceptPageNo, dispatch)\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        navbar: state.navbar,\r\n        concepts: state.concepts,\r\n        pageNumber: state.concepts.page_no,\r\n        uniqueKeyWords: getUniqueKeywords(state),\r\n        uniqueAuthors: getUniqueSortedAuthors(state)\r\n    }\r\n}\r\n// const renderConceptsDetails = (data) => {\r\n//     if (data.length > 0) {\r\n//         data.map(item => {\r\n//             return (<h1>{item.description}</h1>);\r\n//         })\r\n//     }\r\n// }\r\nconst returnOnlyListData = (listRelatedData) => {\r\n    let listData = [];\r\n    listRelatedData.forEach(element => {\r\n        if (element.type == 'list of') {\r\n            listData.push(element);\r\n        }\r\n    })\r\n    return listData;\r\n}\r\nconst returnOnlyRelationData = (listRelatedData) => {\r\n    let listData = [];\r\n    listRelatedData.forEach(element => {\r\n        if (element.type == 'dictionary of') {\r\n            listData.push(element);\r\n        }\r\n    })\r\n    return listData;\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ConceptsPage));","import {schema} from 'normalizr';\r\nconst author=new schema.Entity(\"authors\");\r\nconst keyword=new schema.Entity(\"keywords\");\r\nconst perspective=new schema.Entity(\"perspectives\",{\r\n    Author:author,\r\n    Keywords:[keyword]\r\n});\r\nconst concept=new schema .Entity(\"concepts\",{\r\n    Perspectives:[perspective]\r\n})\r\nexport const conceptClusterSchema=new schema.Entity(\"conceptCluster\",{\r\n    Concepts:[concept]\r\n});","\r\nimport {normalize} from 'normalizr';\r\nimport {conceptClusterSchema} from '../schema/conceptClusterSchema';\r\nconst axios = require('axios');\r\nexport function flushConceptClusterState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_CONCEPT_CLUSTER\",\r\n        })\r\n    }\r\n}\r\nexport function increasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"increase\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = true;\r\n                dispatch({\r\n                    type: 'CONCEPT_CLUSTER_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function decreasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"decrease\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = false;\r\n                dispatch({\r\n                    type: 'CONCEPT_CLUSTER_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function setClickedState(obj){\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:'CLICKED_STATE',\r\n            payload:obj\r\n        })\r\n    }\r\n}\r\nexport function getConceptClusterFromApi(id) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REQUEST_STARTED\"\r\n        })\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/conceptClusters/${id}?relationships=true`).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n                const conceptDetailsFromApi = data.data.data;\r\n                const normalizedData=normalize(conceptDetailsFromApi,conceptClusterSchema)\r\n                dispatch({\r\n                    type: \"REQUEST_SUCCESSFUL\",\r\n                    payload: conceptDetailsFromApi,\r\n                })\r\n                dispatch({\r\n                    type:'CONCEPT_CLUSTER_DETAIL',\r\n                    payload:normalizedData.entities\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"SERVER_ERROR\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"NETWORK_ERROR\"\r\n            })\r\n            console.log('Error While fetching concept details from api', error);\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Context.css'\r\nclass Context extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visibility: 'none',\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {authors,data}=this.props;\r\n        return (\r\n            <div id={data.ConceptId}>\r\n                <div id={authors[data.Author].lastName} className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\" }} >\r\n                    <b style={{  cursor: \"pointer\" }}\r\n                        onClick={() => {\r\n                            this.props.flushConceptClusterState();\r\n                            this.props.setSelectedItem({ label: data.ConceptName, value: data.ConceptName, id: data.ConceptId, category: \"Concepts\" })\r\n                        }}>{data.pronoun}{\" \"} {data.ConceptName}</b>{\" is \"}{data.description}\r\n                    <div onClick={() => this.props.onAuthorClick({ auth_id: data.AuthorId, author_first: authors[data.Author].firstName, author_last: authors[data.Author].lastName, born: authors[data.Author].dob, died: authors[data.Author].dod })} style={{ color: \"red\", cursor: \"pointer\" }}>{authors[data.Author].firstName}{\" \"}{authors[data.Author].lastName}</div>\r\n                    <div className=\"text-right\">\r\n                        <i style={{ color: data.isLike?\"red\":\"grey\",fontSize:20}} className=\"fa fa-thumbs-up  \" onClick={()=>{this.props.onLikeClick(data.id)}}></i>&nbsp;[{data.loves?data.loves:0}]&nbsp;&nbsp; <span  id=\"ConceptEllipseCircle\"  className=\"contextbutton  fa fa-ellipsis-h\" onClick={() => {\r\n                            this.setState({\r\n                                visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                            })\r\n                        }} style={{ cursor: \"pointer\" }}></span>\r\n                    </div>\r\n                    <div id={data.id} style={{ marginTop: \"20px\",textAlign:'justify', display: [this.state.visibility] }} >{data.longDescription}<div style={{ backgroundColor: \"#DCDCDC\" }}>{data.citation}</div></div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n// Context.PropTypes = {\r\n//     data: PropTypes.object.isRequired,\r\n//     flushConceptClusterState: PropTypes.func.isRequired,\r\n//     setSelectedItem: PropTypes.func.isRequired,\r\n//     onAuthorClick: PropTypes.func.isRequired,\r\n// }\r\nexport default Context;","import React, { Component } from 'react';\r\nimport \"./ConceptClustersPage.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { flushConceptClusterState,\r\n     getConceptClusterFromApi,\r\n     setClickedState,\r\n     increasePerspectiveLike,\r\n     decreasePerspectiveLike } from \"../../actions/conceptClustersActions\";\r\nimport { setSelectedCategory, setSelectedItem, flushState, addTag } from \"../../actions/navbaractions\";\r\nimport{\r\n    getUniqueSortedConceptsFromConceptCluster,\r\n    getPerspectivesFromConceptCluster,\r\n    getUniqueAuthorsFromConceptCluster\r\n} from '../../selectors';\r\nimport { getAuthorGroups } from \"../../utilities\";\r\nimport Context from './Context';\r\nimport ReactLoading from 'react-loading';\r\nimport queryString from \"query-string\";\r\nimport Axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom'\r\nclass ConceptClustersPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedOption: this.props.navbar.selectedOption,\r\n            apiLoading: this.props.conceptClusters.apiLoading,\r\n            apiServerError: this.props.conceptClusters.apiServerError,\r\n            apiNetworkError: this.props.conceptClusters.apiNetworkError,\r\n            /**\r\n             * normalized states\r\n             */\r\n            authors:this.props.conceptClusters.authors,\r\n            keywords:this.props.conceptClusters.keywords,\r\n            sortedConcepts:this.props.sortedConcepts,\r\n            sortedPerspectives:this.props.sortedPerspectives,\r\n            uniqueAuthors:this.props.uniqueAuthors,\r\n            perspectives:this.props.conceptClusters.perspective\r\n             /**\r\n             * end of normalized states\r\n             */\r\n        }\r\n        this.onAuthorClick = this.onAuthorClick.bind(this);\r\n        this.onLikeClick=this.onLikeClick.bind(this);\r\n        if (this.props.navbar.selectedOption) {\r\n            if (this.props.navbar.selectedOption.id) {\r\n                if (this.props.navbar.selectedOption.category == \"Concept-Clusters\"){\r\n                    this.props.getConceptClusterFromApi(this.props.navbar.selectedOption.id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getConceptCluster(cluster) {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/conceptCluster`, { cluster }).then(data => {\r\n                if(data.data.obj){\r\n                    let result = data.data.obj.selectedOption;\r\n                    resolve(result);\r\n                }\r\n                resolve(null);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n    async componentWillMount() {\r\n        if (this.props.match.params.name) {\r\n            if (this.props.match.params.name && queryString.parse(this.props.location.search).filters) {\r\n                let filters = [];\r\n                let queryFilters = queryString.parse(this.props.location.search).filters;\r\n                if (typeof queryFilters === \"string\") {\r\n                    filters.push(queryFilters);\r\n                } else {\r\n                    filters = queryFilters;\r\n                }\r\n                let author_group = await getAuthorGroups(filters);\r\n                let cluster = {};\r\n                cluster.name = this.props.match.params.name;\r\n                cluster.groupIds = author_group.map(group => group.id);\r\n                let result = await this.getConceptCluster(cluster);\r\n                if (result) {\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.addTag(author_group);\r\n                    this.props.setSelectedItem(result);\r\n                } else {\r\n                    return <Redirect to='/Message' />\r\n                }\r\n            } else {\r\n                let cluster = {};\r\n                cluster.name = this.props.match.params.name;\r\n                cluster.groupIds = [];\r\n                let result = await this.getConceptCluster(cluster);\r\n                this.props.setSelectedItem(result);\r\n                this.setState({\r\n                    selectedOption: result\r\n                });\r\n                this.props.getConceptClusterFromApi(this.state.selectedOption.id);\r\n            }\r\n        }\r\n    }\r\n    async componentWillReceiveProps(nextProps) {\r\n        if (this.state.selectedOption != nextProps.navbar.selectedOption) {\r\n            this.props.flushConceptClusterState();\r\n            this.setState({\r\n                selectedOption: nextProps.navbar.selectedOption,\r\n                apiLoading: nextProps.conceptClusters.apiLoading,\r\n                apiServerError: nextProps.conceptClusters.apiServerError,\r\n                apiNetworkError: nextProps.conceptClusters.apiNetworkError,\r\n            /**\r\n             * normalized states\r\n             */\r\n                authors:nextProps.conceptClusters.authors,\r\n                keywords:nextProps.conceptClusters.keywords,\r\n                sortedConcepts:nextProps.sortedConcepts,\r\n                sortedPerspectives:nextProps.sortedPerspectives,\r\n                uniqueAuthors:nextProps.uniqueAuthors,\r\n                perspectives:nextProps.conceptClusters.perspective\r\n             /**\r\n             * end of normalized states\r\n             */\r\n\r\n            })\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Concept-Clusters\") {\r\n                this.props.getConceptClusterFromApi(nextProps.navbar.selectedOption.id);\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                apiLoading: nextProps.conceptClusters.apiLoading,\r\n                apiServerError: nextProps.conceptClusters.apiServerError,\r\n                apiNetworkError: nextProps.conceptClusters.apiNetworkError,\r\n                /**\r\n             * normalized states\r\n             */\r\n                authors:nextProps.conceptClusters.authors,\r\n                keywords:nextProps.conceptClusters.keywords,\r\n                sortedConcepts:nextProps.sortedConcepts,\r\n                sortedPerspectives:nextProps.sortedPerspectives,\r\n                uniqueAuthors:nextProps.uniqueAuthors,\r\n                perspectives:nextProps.conceptClusters.perspective\r\n            /**\r\n             * end of normalized states\r\n             */\r\n            })\r\n        }\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption.category == \"Concept-Clusters\") {\r\n                let cluster = {};\r\n                cluster.name = nextProps.navbar.selectedOption.value;\r\n                cluster.groupIds = nextProps.navbar.tags.map(group => group.id);\r\n                let result = await this.getConceptCluster(cluster);\r\n                if (result) {\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getConceptClusterFromApi(nextProps.navbar.selectedOption.id);\r\n                } else {\r\n                   \r\n                   this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    onLikeClick(id) {\r\n        if (this.state.perspectives[id].isLike) {\r\n            this.props.decreasePerspectiveLike(id);\r\n        }\r\n        else {\r\n            this.props.increasePerspectiveLike(id);\r\n        }\r\n    }\r\n    onAuthorClick(author) {\r\n        let label = author.author_first + \" \" + author.author_last;\r\n        let value = label;\r\n        let id = author.auth_id;\r\n        let born = author.born;\r\n        let died = author.died;\r\n        let category = \"Authors\";\r\n        this.props.flushConceptClusterState()\r\n        this.props.setSelectedItem({ label, value, id, born, died, category });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"overflowhidden\" style={{ overflow: \"hidden\" }}>\r\n                {this.state.selectedOption.id && this.state.selectedOption.category == \"Concept-Clusters\" && <div className=\"container-fluid\">\r\n                    {this.state.apiLoading && <div style={{ width: \"100px\", margin: \"auto\", marginTop: \"30vh\" }}>\r\n                        <ReactLoading type={\"balls\"} color={\"red\"} />\r\n                    </div>}\r\n                    {!this.state.apiLoading && !this.state.apiNetworkError && !this.state.apiServerError && <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\",  overflow: \"auto\", textAlign: \"\" }}>\r\n                            <div class=\"mb-2 bg-white text-center p-2\">\r\n                                <b><h4>{ this.state.selectedOption.label}</h4></b>\r\n                            </div>\r\n                            {this.state.sortedConcepts&&this.state.sortedConcepts.length > 0 && <div className=\"bg-white mt-2\"><div className=\"\" style={{ width: \"150px\", margin: \"auto\" }}>\r\n                                { this.state.sortedConcepts.map(concept => {\r\n                                    if (concept.name != undefined) {\r\n                                        return <a onClick={() => {\r\n                                            this.props.setClickedState(\r\n                                                {\r\n                                                    conceptClicked: true,\r\n                                                    authorClicked: false,\r\n                                                }\r\n                                            )\r\n                                        }} href={\"#\" + concept.id} style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }}><b>{concept.name}</b></a>\r\n                                    }\r\n                                })}\r\n                            </div></div>}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                            <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                <div id=\"img\" style={{ width: \"458px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                    <h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                </div>\r\n                                <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"458px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Positive\r\n                                        </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Critical\r\n                                        </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Funny\r\n                                        </label>\r\n                                </div>\r\n                                {\r\n                                    this.state.sortedPerspectives && this.state.sortedPerspectives.length > 0 && this.state.sortedPerspectives.map(data => {\r\n\r\n                                        return (\r\n                                            <Context\r\n                                                data={data}\r\n                                                onAuthorClick={this.onAuthorClick}\r\n                                                flushConceptClusterState={this.props.flushConceptClusterState}\r\n                                                setSelectedItem={this.props.setSelectedItem}\r\n                                                authors={this.state.authors}\r\n                                                onLikeClick={this.onLikeClick}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-2\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", borderLeft: \"2px solid black\", borderRight: \"1px solid black\", textAlign: \"\" }}>\r\n                            {this.state.uniqueAuthors && this.state.uniqueAuthors.length > 0 && this.state.uniqueAuthors.map(data => {\r\n                                return (\r\n                                    <div style={{ padding: \" 0px 10px\", width: \"150px\", margin: \"auto\" }}><a onClick={() => {\r\n                                        this.props.setClickedState(\r\n                                            {\r\n                                                authorClicked: true,\r\n                                                conceptClicked: false,\r\n                                            }\r\n                                        )\r\n                                    }} style={{ color: \"black\", textDecoration: \"none\", cursor: \"pointer\" }} href={\"#\" + data.lastName}><b>{(data.lastName && data.firstName) ? (data.lastName + \", \" + data.firstName) : (data.lastName ? data.lastName : (data.firstName ? data.firstName : \"\"))}</b></a></div>\r\n                                );\r\n\r\n                            })}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", borderLeft: \"0px\", borderRight: \"3px  solid pink\", borderTop: \"3px  solid pink\", borderBottom: \"3px  solid pink\", textAlign: \"center\" }}>\r\n                            <div className=\"text-center\">\r\n                                This place is for adds\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        flushConceptClusterState: bindActionCreators(flushConceptClusterState, dispatch),\r\n        getConceptClusterFromApi: bindActionCreators(getConceptClusterFromApi, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        setClickedState:bindActionCreators(setClickedState,dispatch),\r\n        increasePerspectiveLike:bindActionCreators(increasePerspectiveLike,dispatch),\r\n        decreasePerspectiveLike:bindActionCreators(decreasePerspectiveLike,dispatch)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        navbar: state.navbar,\r\n        conceptClusters: state.conceptClusters,\r\n        sortedConcepts:getUniqueSortedConceptsFromConceptCluster(state),\r\n        sortedPerspectives:getPerspectivesFromConceptCluster(state),\r\n        uniqueAuthors:getUniqueAuthorsFromConceptCluster(state)\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ConceptClustersPage));","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nclass Message extends Component{\r\n    render(){\r\n        return(\r\n            <div style={{margin:\"100px auto\",textAlign:\"center\"}}>\r\n                <h1>\r\n                    Try a search...\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","import {schema} from 'normalizr';\r\nconst authorGroup=new schema.Entity(\"authorGroups\");\r\n//,{idAttribute:'conceptId'}\r\nexport const authorClusterSchema=new schema.Entity(\"authorCluster\",[])","import axios from 'axios';\r\nimport {normalize} from 'normalizr';\r\nimport{authorClusterSchema} from '../schema/authorClusterSchema';\r\nexport function flushAuthorClusterState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_AUTHOR_CLUSTER\",\r\n        })\r\n    }\r\n}\r\n\r\n// export function getAutherClusterDetailsViaSupra(id) {\r\n//     // console.log('get author cluster details via supra ', id);\r\n//     let query = `SELECT * from concept_discrete join __perspectives on\r\n//     concept_discrete.discrete_concept_name_id=__perspectives.concept_id\r\n//     join __author on\r\n//     __author.auth_id=__perspectives.auth_id join\r\n//     author_relationary_author_with_distinct_grouping on\r\n//     author_relationary_author_with_distinct_grouping.auth_id=__author.auth_id\r\n//     join author_relationary_distinct_groupings on\r\n//     author_relationary_distinct_groupings.distinct_grouping_id =author_relationary_author_with_distinct_grouping.distinct_grouping_id\r\n//     join author_relationary_distinct_grouping_with_supra on\r\n//     author_relationary_distinct_grouping_with_supra.distinct_grouping_id=author_relationary_distinct_groupings.distinct_grouping_id\r\n//     join author_relationary_supra on\r\n//     author_relationary_supra.author_supra_id=author_relationary_distinct_grouping_with_supra.supra_id\r\n//     where author_relationary_supra.author_supra_id=${id} order by concept_discrete.discrete_concept_name`\r\n\r\n//     var options = {\r\n//         method: 'POST',\r\n//         url: 'https://cors-anywhere.herokuapp.com/' + 'http://ec2-18-220-90-81.us-east-2.compute.amazonaws.com:8126/',\r\n//         headers:\r\n//         {\r\n//             'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n//             'cache-control': 'no-cache',\r\n//             'content-type': 'application/x-www-form-urlencoded'\r\n//         },\r\n//         form: { query: query }\r\n//     };\r\n//     return dispatch => {\r\n//         request(options, function (error, response, body) {\r\n//             let data = JSON.parse(body);\r\n//             // console.log(data);\r\n//             dispatch({\r\n//                 type: \"GET_AUTHOR_CLUSTER_DETAILS\",\r\n//                 payload: data\r\n//             })\r\n\r\n//             if (data.length > 0) {\r\n//                 let uniqueConceptsDiscrete = [];\r\n//                 let uniqueConceptsIds = [];\r\n//                 data.forEach(element => {\r\n//                     if (!(uniqueConceptsIds.includes(element.discrete_concept_name_id))) {\r\n//                         let discrete_concept_name = element.discrete_concept_name;\r\n//                         let discrete_concept_name_id = element.discrete_concept_name_id;\r\n//                         uniqueConceptsIds.push(element.discrete_concept_name_id);\r\n//                         uniqueConceptsDiscrete.push({ discrete_concept_name_id, discrete_concept_name });\r\n//                     }\r\n//                     else {\r\n//                     }\r\n//                 });\r\n//                 // uniqueConceptsDiscrete.sort((a, b) => (a.discrete_concept_name > b.discrete_concept_name) ? 1 : ((b.discrete_concept_name > a.discrete_concept_name) ? -1 : 0))\r\n//                 // console.log(\"Author Cluster before dispatch only concept names\", uniqueConceptsDiscrete.discrete_concept_name)\r\n//                 dispatch({\r\n//                     type: \"GET_AUTHOR_CLUSTER_CONCEPTS_DISCRETE\",\r\n//                     payload: uniqueConceptsDiscrete,\r\n//                 })\r\n\r\n//             }\r\n//         });\r\n//     }\r\n// }\r\n// export function getAutherClusterDetails(id) {\r\n//     let query = `SELECT * from concept_discrete join __perspectives on\r\n//     concept_discrete.discrete_concept_name_id=__perspectives.concept_id\r\n//     join __author on\r\n//     __author.auth_id=__perspectives.auth_id join\r\n//     author_relationary_author_with_distinct_grouping on\r\n//     author_relationary_author_with_distinct_grouping.auth_id=__author.auth_id\r\n//     join author_relationary_distinct_groupings on\r\n//     author_relationary_distinct_groupings.distinct_grouping_id =author_relationary_author_with_distinct_grouping.distinct_grouping_id\r\n//     where author_relationary_distinct_groupings.distinct_grouping_id=${id} order by concept_discrete.discrete_concept_name`\r\n\r\n//     var options = {\r\n//         method: 'POST',\r\n//         url: 'https://cors-anywhere.herokuapp.com/' + 'http://ec2-18-220-90-81.us-east-2.compute.amazonaws.com:8126/',\r\n//         headers:\r\n//         {\r\n//             'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n//             'cache-control': 'no-cache',\r\n//             'content-type': 'application/x-www-form-urlencoded'\r\n//         },\r\n//         form: { query: query }\r\n//     };\r\n//     return dispatch => {\r\n//         request(options, function (error, response, body) {\r\n//             let data = JSON.parse(body);\r\n//             // console.log(data);\r\n//             dispatch({\r\n//                 type: \"GET_AUTHOR_CLUSTER_DETAILS\",\r\n//                 payload: data\r\n//             })\r\n\r\n//             if (data.length > 0) {\r\n\r\n//                 let uniqueConceptsDiscrete = [];\r\n//                 let uniqueConceptsIds = [];\r\n//                 data.forEach(element => {\r\n//                     if (!(uniqueConceptsIds.includes(element.discrete_concept_name_id))) {\r\n//                         let discrete_concept_name = element.discrete_concept_name;\r\n//                         let discrete_concept_name_id = element.discrete_concept_name_id;\r\n//                         uniqueConceptsIds.push(element.discrete_concept_name_id);\r\n//                         uniqueConceptsDiscrete.push({ discrete_concept_name_id, discrete_concept_name });\r\n//                     }\r\n//                     else {\r\n\r\n//                     }\r\n//                 });\r\n\r\n//                 // uniqueConceptsDiscrete.sort((a, b) => (a.discrete_concept_name > b.discrete_concept_name) ? 1 : ((b.discrete_concept_name > a.discrete_concept_name) ? -1 : 0))\r\n//                 // console.log(\"2Author Cluster before dispatch only concept names\", uniqueConceptsDiscrete)\r\n//                 dispatch({\r\n//                     type: \"GET_AUTHOR_CLUSTER_CONCEPTS_DISCRETE\",\r\n//                     payload: uniqueConceptsDiscrete,\r\n//                 })\r\n\r\n//             }\r\n\r\n//         });\r\n//     }\r\n// }\r\n\r\nexport function getAuthorCluster(id, via) {\r\n    // console.log('Get Author Cluster action', id, via);\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REQUEST_STARTED\"\r\n        })\r\n        getAuthorClusterHelper(id, via).then(data => {\r\n            let normalizedData=normalize(data,[authorClusterSchema]);\r\n            normalizedData.data=data;\r\n            console.log(normalizedData)\r\n            dispatch({\r\n                type: \"GET_AUTHOR_CLUSTER_DETAILS\",\r\n                payload: normalizedData,\r\n            })\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"NETWORK_ERROR\"\r\n            })\r\n            console.log('Error while getting detailed author cluster', error);\r\n        })\r\n    }\r\n}\r\nfunction getAuthorClusterHelper(id, via) {\r\n    // alert(via)\r\n    return new Promise(async (res, rej) => {\r\n        let result = [];\r\n        try {\r\n            let result1 = {};\r\n            if (via === 'Author Clusters') {\r\n                //alert(\"getting data cluster\");\r\n                result1 = await axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorClusters/${id}/perspectives?relationships=true`);\r\n            }\r\n            else if (via === 'Author Groups') {\r\n                result1 = await axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorGroups/${id}/perspectives?relationships=true`);\r\n            }\r\n            if (result1.data.responseType == 'success') {\r\n                console.log(\"getting data response\");\r\n                result = result1.data.data;\r\n            }\r\n            res(result);\r\n        } catch (e) {\r\n            console.log('getting detailed author cluster error', e);\r\n            rej(result);\r\n        }\r\n    })\r\n}\r\n\r\nexport function setClickedState(obj){\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:'CLICKED_STATE',\r\n            payload:obj\r\n        })\r\n    }\r\n}\r\n\r\nexport function increasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"increase\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = true;\r\n                dispatch({\r\n                    type: 'AUTHOR_CLUSTER_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function decreasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"decrease\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = false;\r\n                dispatch({\r\n                    type: 'AUTHOR_CLUSTER_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport conceptsSorter from \"../../utils/conceptsSorterFunction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactLoading from 'react-loading';\r\nimport Axios from 'axios';\r\nimport queryString from \"query-string\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { getAutherClusterDetailsViaSupra,\r\n     getAutherClusterDetails,\r\n      flushAuthorClusterState,\r\n       getAuthorCluster,\r\n       setClickedState,\r\n       increasePerspectiveLike,\r\n       decreasePerspectiveLike\r\n    } from \"../../actions/autherCluster\";\r\nimport { setSelectedCategory, setSelectedItem, flushState, addTag } from \"../../actions/navbaractions\";\r\nimport {\r\n    getUniqueSortedConceptNameFromAuthorCluster,\r\n    getDynamicSortedAuthorClusterWithDetails,\r\n    getSortedAuthorClusterWithDetailsByAuthorLast\r\n} from '../../selectors';\r\nclass AutherCluster extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedOption: this.props.navbar.selectedOption,\r\n            //authorClustersWithDetails: this.props.autherCluster.authorClustersWithDetails,\r\n            // authorClusterConceptsDiscrete: this.props.autherCluster.authorClusterConceptsDiscrete,\r\n            apiLoading: this.props.autherCluster.apiLoading,\r\n            apiServerError: this.props.autherCluster.apiServerError,\r\n            apiNetworkError: this.props.autherCluster.apiNetworkError,\r\n            // authorClicked: false,\r\n            // conceptClicked: true,\r\n            //Normalized states\r\n            sortedConceptsNames: this.props.sortedConceptsNames,\r\n            dynamicSortedAuthorCluster: this.props.dynamicSortedAuthorCluster,\r\n            sortedAuthorClusterDetail: this.props.sortedAuthorClusterDetail,\r\n            perspectives:this.props.autherCluster.authorCluster,\r\n            //End of normalized staes\r\n        }\r\n        this.onAuthorClick = this.onAuthorClick.bind(this);\r\n        this.onLikeClick=this.onLikeClick.bind(this);\r\n        //this.getDynamicSortedAuthorClusterWithDetails = this.getDynamicSortedAuthorClusterWithDetails.bind(this);\r\n        if (this.props.navbar.selectedOption) {\r\n            if (this.props.navbar.selectedOption.id) {\r\n                if (this.props.navbar.selectedOption.category == \"Author-Clusters\") {\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Clusters\")\r\n                    // if (this.props.navbar.selectedOption.via) {\r\n                    //     // console.log(\"Helo\");\r\n                    //     this.props.getAutherClusterDetailsViaSupra(this.props.navbar.selectedOption.id);\r\n                    // }\r\n                    // this.props.getAutherClusterDetails(this.props.navbar.selectedOption.id);\r\n                }\r\n                if (this.props.navbar.selectedOption.category == \"Author-Groups\") {\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Groups\")\r\n                    // if (this.props.navbar.selectedOption.via) {\r\n                    //     // console.log(\"Helo\");\r\n                    //     this.props.getAutherClusterDetailsViaSupra(this.props.navbar.selectedOption.id);\r\n                    // }\r\n                    // this.props.getAutherClusterDetails(this.props.navbar.selectedOption.id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getAutherCluster(cluster) {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorClusters`, { cluster }).then(data => {\r\n                if (data.data.obj) {\r\n                    let result = data.data.obj.selectedOption;\r\n                    resolve(result);\r\n                }\r\n\r\n                resolve(\"\");\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n    getAuthorGroups = (filters) => {\r\n        let filterobj = {};\r\n        filterobj.filters = filters;\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorGroups`, filterobj)\r\n                .then(data => {\r\n                    resolve(data.data);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        });\r\n    }\r\n   async getAuthorGroupByName(name){\r\n       let filters=[this.props.match.params.name];\r\n       let authorGroup=await this.getAuthorGroups(filters);\r\n       if(authorGroup[0]){\r\n           authorGroup=authorGroup[0]\r\n           this.props.setSelectedItem({\r\n               label:authorGroup.label,\r\n               value:authorGroup.value,\r\n               id:authorGroup.id,\r\n               category:'Author-Groups'\r\n           });\r\n       }\r\n   }\r\n    async componentWillMount() { \r\n        let url=this.props.location.pathname.split('/')[1];\r\n        if (this.props.match.params.name) {\r\n            if (this.props.match.params.name && queryString.parse(this.props.location.search).filters) {\r\n                let filters = [];\r\n                if(url==\"author-groups\"||url==\"Author-Groups\"){\r\n                    this.getAuthorGroupByName();\r\n                  }else{\r\n                    let queryFilters = queryString.parse(this.props.location.search).filters;\r\n                    if (typeof queryFilters === \"string\") {\r\n                        filters.push(queryFilters);\r\n                    } else {\r\n                        filters = queryFilters;\r\n                    }\r\n                    let author_group = await this.getAuthorGroups(filters);\r\n                    let cluster = {};\r\n                    cluster.name = this.props.match.params.name;\r\n                    cluster.groupIds = author_group.map(group => group.id);\r\n                    let result = await this.getAutherCluster(cluster);\r\n                    if (result) {\r\n                        this.props.addTag(author_group);\r\n                        this.props.setSelectedItem(result);\r\n                        this.setState({\r\n                            selectedOption: result\r\n                        });\r\n                    } else {\r\n                        this.props.history.push(\"/Message\");\r\n                    }\r\n                  }\r\n            }\r\n            else {\r\n                if(url==\"author-groups\"||url==\"Author-Groups\"){\r\n                  this.getAuthorGroupByName();\r\n                }\r\n                let cluster = {};\r\n                cluster.name = this.props.match.params.name;\r\n                cluster.groupIds = [];\r\n                let result = await this.getAutherCluster(cluster);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Clusters\");\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    async componentWillReceiveProps(nextProps) {\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption && nextProps.navbar.selectedOption.category == \"Author-Clusters\") {\r\n                let cluster = {};\r\n                cluster.name = nextProps.navbar.selectedOption.value;\r\n                cluster.groupIds = nextProps.navbar.tags.map(group => group.id);\r\n                let result = await this.getAutherCluster(cluster);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Clusters\");\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption && nextProps.navbar.selectedOption.category == \"Author-Groups\") {\r\n                let cluster = {};\r\n                cluster.name = nextProps.navbar.selectedOption.value;\r\n                cluster.groupIds = nextProps.navbar.tags.map(group => group.id);\r\n                let result = await this.getAutherCluster(cluster);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Groups\");\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        if (this.state.selectedOption != nextProps.navbar.selectedOption) {\r\n            this.setState({\r\n                selectedOption: nextProps.navbar.selectedOption,\r\n                //authorClustersWithDetails: nextProps.autherCluster.authorClustersWithDetails,\r\n                apiLoading: nextProps.autherCluster.apiLoading,\r\n                apiServerError: nextProps.autherCluster.apiServerError,\r\n                apiNetworkError: nextProps.autherCluster.apiNetworkError,\r\n                // authorClusterConceptsDiscrete: nextProps.autherCluster.authorClusterConceptsDiscrete,\r\n                //Normalized states\r\n                sortedConceptsNames: nextProps.sortedConceptsNames,\r\n                dynamicSortedAuthorCluster: nextProps.dynamicSortedAuthorCluster,\r\n                sortedAuthorClusterDetail: nextProps.sortedAuthorClusterDetail,\r\n                perspectives:nextProps.autherCluster.authorCluster,\r\n                //End of normalized staes\r\n            })\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Author-Clusters\") {\r\n                this.props.getAuthorCluster(nextProps.navbar.selectedOption.id, \"Author Clusters\")\r\n            }\r\n\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Author-Groups\") {\r\n                this.props.getAuthorCluster(nextProps.navbar.selectedOption.id, \"Author Groups\")\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                //authorClustersWithDetails: nextProps.autherCluster.authorClustersWithDetails,\r\n                apiLoading: nextProps.autherCluster.apiLoading,\r\n                apiServerError: nextProps.autherCluster.apiServerError,\r\n                apiNetworkError: nextProps.autherCluster.apiNetworkError,\r\n                //authorClusterConceptsDiscrete: nextProps.autherCluster.authorClusterConceptsDiscrete,\r\n                //Normalized states\r\n                sortedConceptsNames: nextProps.sortedConceptsNames,\r\n                dynamicSortedAuthorCluster: nextProps.dynamicSortedAuthorCluster,\r\n                sortedAuthorClusterDetail: nextProps.sortedAuthorClusterDetail,\r\n                perspectives:nextProps.autherCluster.authorCluster\r\n                //End of normalized staes\r\n            })\r\n        }\r\n        // console.log(\"author clusters State\", this.state);\r\n    }\r\n    onAuthorClick(author) {\r\n        let label = author.author_first + \" \" + author.author_last;\r\n        let value = label;\r\n        let id = author.auth_id;\r\n        let born = author.born;\r\n        let died = author.died;\r\n        let category = \"Authors\"\r\n        this.props.flushAuthorClusterState()\r\n        this.props.setSelectedItem({ label, value, id, born, died, category });\r\n    }\r\n    onLikeClick(id) {\r\n        if (this.state.perspectives[id].isLike) {\r\n            this.props.decreasePerspectiveLike(id);\r\n        }\r\n        else {\r\n            this.props.increasePerspectiveLike(id);\r\n        }\r\n    }\r\n    // getSortedAuthorClusterWithDetailsByAuthorLast(AuthorClusterWithDetails) {\r\n    //     let copyAuthorClusterWithDetails = [...AuthorClusterWithDetails];\r\n    //     copyAuthorClusterWithDetails.sort(function (a, b) {\r\n    //         var textA = a.authorLastName.toUpperCase();\r\n    //         var textB = b.authorLastName.toUpperCase();\r\n    //         return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n    //     });\r\n    //     return copyAuthorClusterWithDetails;\r\n    // }\r\n    // getDynamicSortedAuthorClusterWithDetails(AuthorClusterWithDetails) {\r\n    //     let copyAuthorClusterWithDetails = [...AuthorClusterWithDetails];\r\n    //     if (this.state.authorClicked) {\r\n    //         copyAuthorClusterWithDetails.sort(function (a, b) {\r\n    //             var textA = a.authorLastName.toUpperCase();\r\n    //             var textB = b.authorLastName.toUpperCase();\r\n    //             return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n    //         });\r\n    //     }\r\n    //     else if (this.state.conceptClicked) {\r\n    //         copyAuthorClusterWithDetails.sort(function (a, b) {\r\n    //             var authorA = a.authorLastName.toUpperCase();\r\n    //             var authorB = b.authorLastName.toUpperCase();\r\n    //             var textA = a.conceptName.toUpperCase();\r\n    //             var textB = b.conceptName.toUpperCase();\r\n    //             if (textA === textB) {\r\n    //                 return (authorA < authorB) ? -1 : (authorA > authorB) ? 1 : 0;\r\n    //             }\r\n    //             else {\r\n    //                 if (textA === \"CULTURE\") {\r\n    //                     console.log(\"not author sorting\");\r\n    //                 }\r\n    //                 return (textA < textB) ? -1 : 1;\r\n    //             }\r\n    //             // return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n    //         });\r\n    //     }\r\n    //     return copyAuthorClusterWithDetails;\r\n    // }\r\n    render() {\r\n        let arr = [];\r\n        return (\r\n            <div className=\"overflowhidden\" style={{ overflow: \"hidden\" }}>\r\n                {this.state.selectedOption.id && (this.state.selectedOption.category == \"Author-Clusters\" || this.state.selectedOption.category == \"Author-Groups\") && <div className=\"container-fluid\">\r\n                    {this.state.apiLoading && <div style={{ width: \"100px\", margin: \"auto\", marginTop: \"30vh\" }}>\r\n                        <ReactLoading type={\"balls\"} color={\"red\"} />\r\n                    </div>}\r\n                    {!this.state.apiLoading && !this.state.apiNetworkError && !this.state.apiServerError && <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", overflow: \"auto\", textAlign: \"\" }}>\r\n                            <div class=\"mb-2 bg-white text-center p-2\">\r\n                                <b><h4>{ this.state.selectedOption.label}</h4></b>\r\n                            </div>\r\n                            <div class=\"bg-white\">\r\n                            {this.state.sortedConceptsNames && (this.state.sortedConceptsNames.length > 0 && <div style={{ width: \"150px\", margin: \"auto\" }}>\r\n                                {this.state.sortedConceptsNames.map(concept => {\r\n                                    if (concept.name != undefined) {\r\n                                        return <a onClick={() => {\r\n                                            this.props.setClickedState(\r\n                                                {\r\n                                                    authorClicked: false,\r\n                                                    conceptClicked: true,\r\n                                                }\r\n                                            )\r\n\r\n                                        }} href={\"#\" + concept.id} style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }} ><b>{concept.name}</b></a>\r\n                                    }\r\n                                })}\r\n                            </div>)}</div>\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                            <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                <div id=\"img\" style={{ width: \"398px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                    <h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                </div>\r\n                                <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"398px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Positive\r\n                                    </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Critical\r\n                                    </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Funny\r\n                                    </label>\r\n                                </div>\r\n                                {\r\n                                    this.state.dynamicSortedAuthorCluster && this.state.dynamicSortedAuthorCluster.length > 0 && this.state.dynamicSortedAuthorCluster.map(data => {\r\n                                        return (<div id={data.concept_id}><div id={data.authorLastName} className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\" }} >\r\n                                            <b style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => {\r\n                                                this.props.flushAuthorClusterState();\r\n                                                this.props.setSelectedItem({ label: data.conceptName, value: data.conceptName, id: data.conceptId, category: \"Concepts\" })\r\n                                            }}>{data.pronoun}{\" \"} {data.conceptName}</b>{\" is \"}{data.description}\r\n                                            <div onClick={() => this.onAuthorClick({ auth_id: data.authorId, author_first: data.authorFirstName, author_last: data.authorLastName, born: \"1885\", died: \"1960\" })} style={{ color: \"red\", cursor: \"pointer\" }}>{data.authorFirstName}{\" \"}{data.authorLastName}</div>\r\n                                            <div className=\"pull-right\">\r\n                                                <i style={{ color:data.isLike?\"red\":\"grey\",fontSize:20}} className=\"fa fa-thumbs-up\" onClick={()=>{this.onLikeClick(data.id)}}></i>&nbsp;[{data.loves ? data.loves : 0}]&nbsp;&nbsp; <span className=\"contextbutton fa fa-ellipsis-h\" id=\"AutherCluster\" onClick={() => {\r\n                                                    this.setState({\r\n                                                        visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                                                        id: data.id,\r\n                                                    })\r\n                                                }} style={{ cursor: \"pointer\" }}></span>\r\n                                            </div>\r\n                                            <div id={data.id} style={{ marginTop: \"20px\", display: [data.id == this.state.id ? this.state.visibility : \"none\"] }} >{data.long_description}<div style={{ backgroundColor: \"#DCDCDC\" }}>{data.citation}</div></div>\r\n                                        </div></div>);\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-2\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", borderRight: \"1px solid black\", borderLeft: \"2px solid black\", textAlign: \"\" }}>\r\n                            {this.state.sortedAuthorClusterDetail && this.state.sortedAuthorClusterDetail.length > 0 && this.state.sortedAuthorClusterDetail.map(data => {\r\n                                if (!(arr.includes(data.authorId))) {\r\n                                    arr.push(data.authorId);\r\n                                    return (\r\n                                        <div style={{ padding: \" 0px 10px\", width: \"160px\", margin: \"auto\" }}><a onClick={() => {\r\n                                            this.props.setClickedState(\r\n                                                {\r\n                                                    authorClicked: true,\r\n                                                    conceptClicked: false\r\n                                                }\r\n                                            )\r\n\r\n                                        }} style={{ color: \"black\", textDecoration: \"none\", cursor: \"pointer\" }} href={\"#\" + data.authorLastName}><b>{(data.authorLastName && data.authorFirstName) ? (data.authorLastName + \", \" + data.authorFirstName) : (data.authorLastName ? data.authorFirstName : (data.authorFirstName ? data.authorFirstName : \"\"))}</b></a></div>\r\n                                    );\r\n                                }\r\n                            })}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", borderLeft: \"0px\", borderRight: \"3px  solid pink\", borderTop: \"3px  solid pink\", borderBottom: \"3px  solid pink\", textAlign: \"center\" }}>\r\n                            <div className=\"text-center\">\r\n                                This place is for adds\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// const getUniqueSortedConceptNameFromClusterDetails = (clustersWithDetails) => {\r\n//     let uniqueConceptNames = [];\r\n//     let uniqueConcepts = [];\r\n//     clustersWithDetails.map(clusterWithDetails => {\r\n//         if (!uniqueConceptNames.includes(clusterWithDetails.conceptName)) {\r\n//             uniqueConceptNames.push(clusterWithDetails.conceptName);\r\n//             uniqueConcepts.push({ name: clusterWithDetails.conceptName, id: clusterWithDetails.conceptId });\r\n//         }\r\n//     })\r\n//     return uniqueConcepts.sort(conceptsSorter);\r\n// }\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //getAutherClusterDetails: bindActionCreators(getAutherClusterDetails, dispatch),\r\n        //getAutherClusterDetailsViaSupra: bindActionCreators(getAutherClusterDetailsViaSupra, dispatch),\r\n        flushAuthorClusterState: bindActionCreators(flushAuthorClusterState, dispatch),\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        getAuthorCluster: bindActionCreators(getAuthorCluster, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        setClickedState: bindActionCreators(setClickedState, dispatch),\r\n        increasePerspectiveLike:bindActionCreators(increasePerspectiveLike,dispatch),\r\n        decreasePerspectiveLike:bindActionCreators(decreasePerspectiveLike,dispatch)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    // console.log(\"state in mapStateToProps\", state);\r\n    return {\r\n        navbar: state.navbar,\r\n        autherCluster: state.autherCluster,\r\n        sortedConceptsNames: getUniqueSortedConceptNameFromAuthorCluster(state),\r\n        dynamicSortedAuthorCluster: getDynamicSortedAuthorClusterWithDetails(state),\r\n        sortedAuthorClusterDetail: getSortedAuthorClusterWithDetailsByAuthorLast(state)\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AutherCluster));","import {schema} from 'normalizr';\r\nconst authorBioHeading=new schema.Entity('AuthorBioHeadings')\r\nconst authorGroup= new schema.Entity('AuthorGroups',{\r\n    AuthorBioHeading:authorBioHeading\r\n});\r\nconst book=new schema.Entity(\"books\")\r\nconst concept=new schema.Entity('concepts');\r\nconst perspective=new schema.Entity('perspectives',{\r\n    Concept:concept\r\n})\r\nexport const authorSchema=new schema.Entity(\"authors\",{\r\n    Perspectives:[perspective],\r\n    AuthorGroups:[authorGroup],\r\n    Books:[book]\r\n});","import { bindActionCreators } from \"redux\";\r\nimport {normalize} from 'normalizr';\r\nimport {authorSchema} from '../schema/authorSchema';\r\nimport axios from 'axios';\r\nlet request = require(\"request\");\r\nexport function flushAuthorState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_AUTHOR\",\r\n        })\r\n    }\r\n}\r\nexport function increasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"increase\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = true;\r\n                dispatch({\r\n                    type: 'AUTHOR_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function decreasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"decrease\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = false;\r\n                dispatch({\r\n                    type: 'AUTHOR_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function getAuthorInfluencedByAuthors(id) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"GET_AUTHOR_AUTHORS_PENDING\"\r\n        })\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authors/${id}?relationships=true&withSelfAssociationsOnly=true`).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n               // getPictureLinks(data.data.data);\r\n                const author_authors_details =data.data.data;\r\n                dispatch({\r\n                    type: \"GET_AUTHOR_AUTHORS_SUCCESS\",\r\n                    payload: author_authors_details,\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"GET_AUTHOR_AUTHORS_SERVER_ERROR\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"GET_AUTHOR_AUTHORS_NETWORK_ERROR\"\r\n            })\r\n            console.log('Error While fetching author_author details from api', error);\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction getPictureLinks(data){\r\n    let author_lastName=(((data.lastName).split(\" \")).join(\"+\")).toLowerCase();\r\n    let author_firstName=(((data.firstName).split(\" \")).join(\"+\")).toLowerCase();\r\n    author_firstName=((author_firstName).split(\".\")).join(\"\");\r\n    let author_image=author_lastName.concat(\"+\"+author_firstName+\".jpg\");\r\n    data.pictureLink=`https://conceptionary-images.s3.amazonaws.com/${author_image}`;\r\n    return data;\r\n}\r\n\r\nexport function getAuthorDetails(id) {\r\n    \r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REQUEST_STARTED\"\r\n        })\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authors/${id}?relationships=true`).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n                const authorDetailsFromApi =getPictureLinks( data.data.data);\r\n                const normalizedData =normalize(authorDetailsFromApi,authorSchema)\r\n                console.log(normalizedData)\r\n                dispatch({\r\n                    type: \"GET_AUTHOR_DETAILS\",\r\n                    payload: authorDetailsFromApi,\r\n                })\r\n                dispatch({\r\n                    type:'AUTHOR_DETAILS',\r\n                    payload:normalizedData.entities\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"SERVER_ERROR\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"NETWORK_ERROR\"\r\n            })\r\n            console.log('Error While fetching author details from api', error);\r\n        })\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport \"./AuthorPage.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { setSelectedCategory, setSelectedItem, flushState, addTag } from \"../../actions/navbaractions\";\r\nimport { flushAuthorClusterState } from '../../actions/autherCluster';\r\nimport { getAuthorGroups } from \"../../utilities\";\r\nimport { getUniqueConcept, getSortedPerspectivesByConceptName, getAuthorBioData, getUniqueAuthorBooks } from '../../selectors';\r\nimport queryString from \"query-string\";\r\nimport Axios from 'axios';\r\nimport ReactLoading from \"react-loading\";\r\nimport { getAuthorDetails, getAuthorInfluencedByAuthors,flushAuthorState,increasePerspectiveLike,decreasePerspectiveLike } from \"../../actions/authorActions\";\r\nclass AuthorPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: \"\",\r\n            selectedOption: this.props.navbar.selectedOption,\r\n            // apiLoading: this.props.author.apiLoading,\r\n            // apiServerError: this.props.author.apiServerError,\r\n            // apiNetworkError: this.props.author.apiNetworkError,\r\n            //authorsWithDetails: this.props.author.authorsWithDetails,\r\n            // author_authors_apiLoading: this.props.author.author_authors_apiLoading,\r\n            // author_authors_apiServerError: this.props.author.author_authors_apiServerError,\r\n            // author_authors_apiNetworkError: this.props.author.author_authors_apiNetworkError,\r\n            author_authors: this.props.author.author_authors,\r\n            authorInfluencedByAuthors: this.props.author.authorInfluencedByAuthors,\r\n            authorInfluencedOnAuthors: this.props.author.author_authors.AuthorInfluenceAuthors,\r\n            authorConvoWithAuthors: this.props.author.author_authors.AuthorConvoAuthors,\r\n            id: \"\",\r\n            visibility: \"none\",\r\n            showBooks: false,\r\n            sortedAuthorInfluencedByAuthors: setInitialsortedAuthorInfluencedByAuthors(this.props.author.authorInfluencedByAuthors),\r\n            sortedAuthorInfluencedOnAuthors: setInitialsortedAuthorInfluencedOnAuthors(this.props.author.author_authors.AuthorInfluenceAuthors),\r\n            sortedAuthorConvoWithAuthors: setInitialsortedAuthorConvoWithAuthors(this.props.author.author_authors.AuthorConvoAuthors),\r\n            index: 0,\r\n            index1: 0,\r\n            index2: 0,\r\n            loading: this.props.author.loading,\r\n            //normalized states\r\n            //authorBioHeadings: this.props.author.authorBioHeadings,\r\n            //authorGroups: this.props.author.authorGroups,\r\n            authorPerspectives: this.props.author.authorPerspectives,\r\n            author: this.props.author.author,\r\n            concepts: this.props.author.concepts,\r\n            UniqueConcepts: this.props.uniqueconcepts,\r\n            sortedPerspectives: this.props.sortedperpectives,\r\n            authorBio: this.props.authorBio,\r\n            authorBooksById: this.props.authorBooksById,\r\n            authorBooks: this.props.author.authorBooks\r\n            //authorOnConcepts:this.props.author.concept\r\n            //end normalized states\r\n        }\r\n        this.getSortedAuthorInfluencedByAuthors = this.getSortedAuthorInfluencedByAuthors.bind(this);\r\n        //this.getSortedAuthorInfluencedOnAuthors = this.getSortedAuthorInfluencedOnAuthors.bind(this);\r\n        //this.getSortedAuthorConvoWithAuthors = this.getSortedAuthorConvoWithAuthors.bind(this);\r\n        this.reverse = this.reverse.bind(this);\r\n        this.forward = this.forward.bind(this);\r\n        this.reverse1 = this.reverse1.bind(this);\r\n        this.forward1 = this.forward1.bind(this);\r\n        this.reverse2 = this.reverse2.bind(this);\r\n        this.forward2 = this.forward2.bind(this);\r\n        this.onAuthorClick = this.onAuthorClick.bind(this);\r\n        this.onConceptClick = this.onConceptClick.bind(this);\r\n        this.onBioClick = this.onBioClick.bind(this);\r\n        this.onLikeClick=this.onLikeClick.bind(this);\r\n        if (this.props.navbar.selectedOption) {\r\n            if (this.props.navbar.selectedOption.id) {\r\n                if (this.props.navbar.selectedOption.category == \"Authors\") {\r\n                    this.props.getAuthorDetails(this.props.navbar.selectedOption.id);\r\n                    this.props.getAuthorInfluencedByAuthors(this.props.navbar.selectedOption.id);\r\n                    //  this.props.getAuthorInfluencedOnAuthors(this.props.navbar.selectedOption.id);\r\n                    //  this.props.getAuthorConvoWithAuthors(this.props.navbar.selectedOption.id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getAuthor = (author) => {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/author`, { author }).then(data => {\r\n                if (data.data.obj) {\r\n                    let result = data.data.obj.selectedOption;\r\n                    resolve(result);\r\n                }\r\n                resolve(null);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n    async componentWillMount() {\r\n        if (this.props.match.params.name) {\r\n            if (this.props.match.params.name && queryString.parse(this.props.location.search).filters) {\r\n                let filters = [];\r\n                let queryFilters = queryString.parse(this.props.location.search).filters;\r\n                if (typeof queryFilters === \"string\") {\r\n                    filters.push(queryFilters);\r\n                } else {\r\n                    filters = queryFilters;\r\n                }\r\n                let author_group = await getAuthorGroups(filters);\r\n                let author = {};\r\n                author.name = this.props.match.params.name;\r\n                author.groupIds = author_group.map(group => group.id);\r\n                let result = await this.getAuthor(author);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.addTag(author_group);\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n            } else {\r\n                let author = {};\r\n                author.name = this.props.match.params.name;\r\n                author.groupIds = [];\r\n                let result = await this.getAuthor(author);\r\n                this.props.setSelectedItem(result);\r\n                this.setState({\r\n                    selectedOption: result\r\n                });\r\n                this.props.getAuthorDetails(this.state.selectedOption.id);\r\n                this.props.getAuthorInfluencedByAuthors(this.state.selectedOption.id);\r\n\r\n            }\r\n        }\r\n    }\r\n    async componentWillReceiveProps(nextProps) {\r\n\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption != undefined) {\r\n                let author = {};\r\n                author.name = nextProps.navbar.selectedOption.value;\r\n                author.groupIds = nextProps.navbar.tags.map(x => x.id);\r\n                let result = await this.getAuthor(author);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getAuthorDetails(this.state.selectedOption.id);\r\n                    this.props.getAuthorInfluencedByAuthors(this.state.selectedOption.id);\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n        if (this.state.selectedOption != nextProps.navbar.selectedOption) {\r\n            this.props.flushAuthorState();\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Authors\") {\r\n                this.props.getAuthorDetails(nextProps.navbar.selectedOption.id);\r\n                //this.props.getAuthorBio(nextProps.navbar.selectedOption.id);\r\n                //this.props.getAuthorBooks(nextProps.navbar.selectedOption.id);\r\n                this.props.getAuthorInfluencedByAuthors(nextProps.navbar.selectedOption.id);\r\n                //  this.props.getAuthorInfluencedOnAuthors(nextProps.navbar.selectedOption.id);\r\n                //  this.props.getAuthorConvoWithAuthors(nextProps.navbar.selectedOption.id);\r\n            }\r\n            this.setState({\r\n                selectedOption: nextProps.navbar.selectedOption,\r\n                apiLoading: nextProps.author.apiLoading,\r\n                apiServerError: nextProps.author.apiServerError,\r\n                apiNetworkError: nextProps.author.apiNetworkError,\r\n                //authorsWithDetails: nextProps.author.authorsWithDetails,\r\n                author_authors_apiLoading: nextProps.author.author_authors_apiLoading,\r\n                author_authors_apiServerError: nextProps.author.author_authors_apiServerError,\r\n                author_authors_apiNetworkError: nextProps.author.author_authors_apiNetworkError,\r\n                author_authors: nextProps.author.author_authors,\r\n                authorInfluencedByAuthors: nextProps.author.authorInfluencedByAuthors,\r\n                authorInfluencedOnAuthors: nextProps.author.author_authors.AuthorInfluenceAuthors,\r\n                authorConvoWithAuthors: nextProps.author.author_authors.AuthorConvoAuthors,\r\n                sortedAuthorInfluencedByAuthors: setInitialsortedAuthorInfluencedByAuthors(nextProps.author.authorInfluencedByAuthors),\r\n                sortedAuthorInfluencedOnAuthors: setInitialsortedAuthorInfluencedOnAuthors(nextProps.author.author_authors.AuthorInfluenceAuthors),\r\n                sortedAuthorConvoWithAuthors: setInitialsortedAuthorConvoWithAuthors(nextProps.author.author_authors.AuthorConvoAuthors),\r\n                //normalized states\r\n                //authorBioHeadings: nextProps.author.authorBioHeadings,\r\n                //authorGroups: nextProps.author.authorGroups,\r\n                authorPerspectives: nextProps.author.authorPerspectives,\r\n                author: nextProps.author.author,\r\n                concepts: nextProps.author.concepts,\r\n                //authorOnConcepts:nextProps.author.concept\r\n                UniqueConcepts: nextProps.uniqueconcepts,\r\n                sortedPerspectives: nextProps.sortedperpectives,\r\n                authorBio: nextProps.authorBio,\r\n                authorBooksById: nextProps.authorBooksById,\r\n                authorBooks: nextProps.author.authorBooks\r\n                //end normalized states\r\n\r\n            })\r\n            // console.log(\"Here i m\")\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                //authorsWithDetails: nextProps.author.authorsWithDetails,\r\n                apiLoading: nextProps.author.apiLoading,\r\n                apiServerError: nextProps.author.apiServerError,\r\n                apiNetworkError: nextProps.author.apiNetworkError,\r\n                author_authors_apiLoading: nextProps.author.author_authors_apiLoading,\r\n                author_authors_apiServerError: nextProps.author.author_authors_apiServerError,\r\n                author_authors_apiNetworkError: nextProps.author.author_authors_apiNetworkError,\r\n                author_authors: nextProps.author.author_authors,\r\n                authorInfluencedByAuthors: nextProps.author.authorInfluencedByAuthors,\r\n                authorInfluencedOnAuthors: nextProps.author.author_authors.AuthorInfluenceAuthors,\r\n                authorConvoWithAuthors: nextProps.author.author_authors.AuthorConvoAuthors,\r\n                //sortedAuthorInfluencedByAuthors: setInitialsortedAuthorInfluencedByAuthors(nextProps.author.authorInfluencedByAuthors),\r\n                sortedAuthorInfluencedOnAuthors: setInitialsortedAuthorInfluencedOnAuthors(nextProps.author.author_authors.AuthorInfluenceAuthors),\r\n                sortedAuthorConvoWithAuthors: setInitialsortedAuthorConvoWithAuthors(nextProps.author.author_authors.AuthorConvoAuthors),\r\n                //normalized states\r\n                //authorBioHeadings: nextProps.author.authorBioHeadings,\r\n                //authorGroups: nextProps.author.authorGroups,\r\n                authorPerspectives: nextProps.author.authorPerspectives,\r\n                author: nextProps.author.author,\r\n                concepts: nextProps.author.concepts,\r\n                UniqueConcepts: nextProps.uniqueconcepts,\r\n                sortedPerspectives: nextProps.sortedperpectives,\r\n                authorBio: nextProps.authorBio,\r\n                authorBooksById: nextProps.authorBooksById,\r\n                authorBooks: nextProps.author.authorBooks\r\n                //authorOnConcepts:nextProps.author.concept\r\n                //end normalized states\r\n\r\n            })\r\n        }\r\n        // console.log(\"Author State\", this.state);\r\n\r\n    }\r\n    onLikeClick(data) {\r\n        if (this.state.authorPerspectives[data.id].isLike) {\r\n            this.props.decreasePerspectiveLike(data.id);\r\n        }\r\n        else {\r\n            this.props.increasePerspectiveLike(data.id);\r\n        }\r\n    }\r\n    onAuthorClick(author) {\r\n        let label = author.firstName + \" \" + author.lastName;\r\n        let value = label;\r\n        let id = author.id;\r\n        let born = author.dob;\r\n        let died = author.dod;\r\n        let category = \"Authors\";\r\n        this.props.flushAuthorState();\r\n        console.log(category);\r\n        this.props.setSelectedItem({ label, value, id, born, died, category });\r\n\r\n    }\r\n    onBioClick(bio) {\r\n        let label = bio.distinct_grouping;\r\n        let value = label;\r\n        let id = bio.distinct_grouping_id;\r\n        let category = \"Author-Groups\"\r\n        this.props.flushAuthorState();\r\n        this.props.flushAuthorClusterState();\r\n        this.props.setSelectedItem({ label, value, id, category, via: \"group\" });\r\n    }\r\n    onConceptClick(concept) {\r\n\r\n        let label = this.state.concepts[concept.Concept].name;\r\n        let value = label;\r\n        let id = concept.ConceptId;\r\n        let category = \"Concepts\"\r\n        this.props.flushAuthorState();\r\n        this.props.setSelectedItem({ label, value, id, category });\r\n    }\r\n    // getSortedAuthorConvoWithAuthors(index) {\r\n    //     let rtnArray = [];\r\n    //     rtnArray = this.state.authorConvoWithAuthors.slice(index, index + 3);\r\n    //     // console.log(\"Slice params\", index, index + 3);\r\n    //     // console.log(\"Rtn array i\", rtnArray);\r\n    //     this.setState({\r\n    //         sortedAuthorConvoWithAuthors: rtnArray,\r\n    //     })\r\n    // }\r\n    getSortedAuthorInfluencedByAuthors(index) {\r\n        let rtnArray = [];\r\n        rtnArray = this.state.authorInfluencedByAuthors.slice(index, index + 3);\r\n        // console.log(\"Slice params\", index, index + 3);\r\n        // console.log(\"Rtn array i\", rtnArray);\r\n        this.setState({\r\n            sortedAuthorInfluencedByAuthors: rtnArray,\r\n        })\r\n    }\r\n    // getSortedAuthorInfluencedOnAuthors(index) {\r\n    //     let rtnArray = [];\r\n    //     rtnArray = this.state.authorInfluencedOnAuthors.slice(index, index + 3);\r\n    //     // console.log(\"Slice params\", index, index + 3);\r\n    //     // console.log(\"Rtn array i\", rtnArray);\r\n    //     this.setState({\r\n    //         sortedAuthorInfluencedOnAuthors: rtnArray,\r\n    //     })\r\n    // }\r\n    reverse() {\r\n        let index = this.state.index;\r\n        // console.log(\"Index reverse\", index);\r\n        if (index >= 3) {\r\n            this.setState({ index: (index - 3) })\r\n            this.getSortedAuthorInfluencedByAuthors(index - 3);\r\n        }\r\n\r\n    }\r\n    reverse1() {\r\n        let index = this.state.index1;\r\n        // console.log(\"Index reverse\", index);\r\n        if (index >= 3) {\r\n            this.setState({ index1: (index - 3) })\r\n            this.getSortedAuthorInfluencedOnAuthors(index - 3);\r\n        }\r\n\r\n    }\r\n    reverse2() {\r\n        let index = this.state.index2;\r\n        // console.log(\"Index reverse\", index);\r\n        if (index >= 3) {\r\n            this.setState({ index2: (index - 3) })\r\n            this.getSortedAuthorConvoWithAuthors(index - 3);\r\n        }\r\n\r\n    }\r\n    forward() {\r\n        let totalLength = this.state.authorInfluencedByAuthors.length;\r\n        let index = this.state.index;\r\n        // console.log(\"Index forward\", index);\r\n        if (index + 3 < totalLength) {\r\n            this.setState({ index: (index + 3) })\r\n            this.getSortedAuthorInfluencedByAuthors(index + 3);\r\n        }\r\n\r\n    }\r\n    forward1() {\r\n        let totalLength = this.state.authorInfluencedOnAuthors.length;\r\n        let index = this.state.index1;\r\n        // console.log(\"Index forward\", index);\r\n        if (index + 3 < totalLength) {\r\n            this.setState({ index1: (index + 3) })\r\n            this.getSortedAuthorInfluencedOnAuthors(index + 3);\r\n        }\r\n\r\n    }\r\n    forward2() {\r\n        let totalLength = this.state.authorConvoWithAuthors.length;\r\n        let index = this.state.index2;\r\n        // console.log(\"Index forward\", index);\r\n        if (index + 3 < totalLength) {\r\n            this.setState({ index2: (index + 3) })\r\n            this.getSortedAuthorConvoWithAuthors(index + 3);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"overflowhidden \" style={{ overflow: \"hidden\" }}>\r\n                {this.state.selectedOption.id && this.state.selectedOption.category == \"Authors\" && <div className=\"container-fluid\">\r\n                    {this.state.apiLoading && <div style={{ width: \"100px\", margin: \"auto\", marginTop: \"30vh\" }}>\r\n                        <ReactLoading type={\"balls\"} color={\"red\"} />\r\n                    </div>}\r\n                    {!this.state.apiLoading && <div>\r\n                        {!this.state.showBooks && <div className=\"row\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px  solid white\", textAlign: \"\" }}>\r\n                                <div style={{ width: \"50px\", margin: \"auto\" }}><button className=\"btn btn-link\" style={{ cursor: \"pointer\" }} onClick={() => this.setState({ showBooks: true })} ><h3>Books</h3></button></div>\r\n                                {\r\n                                    <div style={{ width: \"150px\", margin: \"auto\" }}>\r\n                                        {this.state.UniqueConcepts && this.state.UniqueConcepts.length > 0 && this.state.UniqueConcepts.map(concept => {\r\n                                            if (concept.discrete_author_name != undefined) {\r\n                                                return <b><a href={\"#\" + concept.discrete_author_name_id} style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }} onClick={() => {\r\n                                                }}>{concept.discrete_author_name}</a></b>\r\n                                            }\r\n\r\n                                        })}\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                                <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                    <div id=\"img\" style={{ width: \"398px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                        {/*<h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                        <h5 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\", display: \"inline-block\" }} className=\"float-right\">{(this.state.selectedOption.born && this.state.selectedOption.died) ? this.state.selectedOption.born + \" - \" + this.state.selectedOption.died : \"HUL\"}</h5>\r\n                                        */}\r\n                                        <img src={this.state.author.pictureLink} alt={this.state.selectedOption.label} style={{ width: \"100%\", objectFit: \"cover\" }} ></img>\r\n                                    </div>\r\n                                    {/* <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"398px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Positive\r\n                                        </label>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Critical\r\n                                        </label>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Funny\r\n                                        </label>\r\n                                    </div> */}\r\n                                    {\r\n                                        this.state.sortedPerspectives && this.state.sortedPerspectives.length > 0 && this.state.sortedPerspectives.map(data => {\r\n                                            return (<div id={data.ConceptId}><div className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\" }} >\r\n                                                <b style={{ color: \"blue\", cursor: \"pointer\",textTransform:'capitalize' }} onClick={() => this.onConceptClick(data)}>{data.pronoun}{\" \"} {this.state.concepts[data.Concept].name}</b>{\" is \"}{data.description}\r\n                                                {/* <div style={{ color: \"red\" }}>{this.state.author.firstName}{\" \"}{this.state.author.lastName}</div> */}\r\n                                                <div className=\"text-right\">\r\n                                                    <i style={{ color:data.isLike?\"red\":\"grey\",fontSize:'20px' }} className=\"fa fa-thumbs-up \" onClick={() => { this.onLikeClick(data) }}></i>&nbsp;[{data.loves ? data.loves : \"0\"}]&nbsp;&nbsp; <span className=\"contextbutton fa fa-ellipsis-h\" id=\"AuthorEllipseCircle\" onClick={() => {\r\n                                                        this.setState({\r\n                                                            visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                                                            id: data.id,\r\n                                                        })\r\n                                                    }} style={{ cursor: \"pointer\" }}></span>\r\n                                                </div>\r\n                                                <div id={data.id} style={{ marginTop: \"20px\", display: [data.id == this.state.id ? this.state.visibility : \"none\"],textAlign:'justify' }} >{data.longDescription}<div style={{ backgroundColor: \"#DCDCDC\" }}>{data.citation}</div></div>\r\n                                            </div></div>);\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-3 \" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", borderLeft: \"1px solid black\" , borderRight: \"1px solid black\" }}>\r\n                                <h3><b>{this.state.author.firstName} {this.state.author.lastName}</b></h3>\r\n                                <h5>{this.state.author.dob}-{this.state.author.dod}</h5>\r\n                                <i className=\"fas fa-book-open\"></i> (10)\r\n                                <br /><br /><br />\r\n                                {this.state.authorBio && this.state.authorBio.length > 0 && this.state.authorBio.map(item => {\r\n                                    return (<div className=\"\" style={{ width: \"340px\",}}><h6><b>{item.heading.charAt(0).toUpperCase() + item.heading.slice(1)}:</b></h6>\r\n                                        {item.values.map(v => {\r\n\r\n                                            return <span className=\"mb-1\" style={{ display: \"inline-block\" }}><Link style={{ cursor: \"pointer\",color:'black' }} to=\"author-clusters\" onClick={() => this.onBioClick({ distinct_grouping: v.name, distinct_grouping_id: v.id })}>{v.name}</Link>&nbsp;&nbsp;</span>\r\n                                        })}\r\n\r\n                                    </div>);\r\n                                })\r\n                                }\r\n                                <div id=\"authorInfluencedByAuthors\" style={{ width: \"340px\", margin: \"auto\" }}>\r\n                                    {/*this.state.sortedAuthorInfluencedByAuthors && this.state.sortedAuthorInfluencedByAuthors.length > 0 && <div>\r\n                                        <h6 style={{ color: \"red\" }}>Influenced By:</h6>\r\n                                        <div className=\"dytb\" >\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.reverse()} className=\"fa fa-angle-left dytbc\" />\r\n                                            {this.state.sortedAuthorInfluencedByAuthors.map(author => {\r\n                                                return (\r\n                                                    <div onClick={() => this.onAuthorClick(author)} style={{ marginRight: \"8px\", display: \"inline-block\", marginLeft: \"8px\", width: \"85px\", maxHeight: \"180px\", border: \"1px solid white\", borderRadius: \"3px\", cursor: \"pointer\" }}>\r\n                                                        <div style={{ width: \"83px\", minHeight: \"70px\", backgroundColor: \"yellow\" }}></div>\r\n                                                        <div style={{ fontSize: \"13px\", width: \"83px\", overflow: \"hidden\", textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{author.author_first + author.author_last}</div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.forward()} className=\"fa fa-angle-right dytbc\" ></i>\r\n                                        </div>\r\n                                    </div>*/\r\n                                    }\r\n                                    {this.state.sortedAuthorInfluencedOnAuthors && this.state.sortedAuthorInfluencedOnAuthors.length > 0 && <div>\r\n                                        <h6 style={{ color: \"red\" }}>Influenced On:</h6>\r\n                                        <div className=\"dytb\">\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.reverse1()} className=\"fa fa-angle-left dytbc\" />\r\n                                            {this.state.sortedAuthorInfluencedOnAuthors.map(author => {\r\n                                                return (\r\n                                                    <div onClick={() => this.onAuthorClick(author)} style={{ marginRight: \"8px\", display: \"inline-block\", marginLeft: \"8px\", width: \"85px\", maxHeight: \"180px\", border: \"1px solid white\", borderRadius: \"3px\", cursor: \"pointer\" }}>\r\n                                                        <div style={{ width: \"83px\", minHeight: \"70px\", backgroundColor: \"yellow\" }}>\r\n                                                            <img src={`https://conceptionary-images.s3.amazonaws.com/${author.lastName}+${author.firstName}.jpg`} alt={author.firstName + \" \" + author.lastName}></img>\r\n                                                        </div>\r\n                                                        <div style={{ fontSize: \"13px\", width: \"83px\", overflow: \"hidden\", textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{author.firstName + author.lastName}</div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.forward1()} className=\"fa fa-angle-right dytbc\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    }\r\n                                    {this.state.sortedAuthorConvoWithAuthors && this.state.sortedAuthorConvoWithAuthors.length > 0 && <div>\r\n                                        <h6 style={{ color: \"red\" }}>In Conversation with:</h6>\r\n                                        <div className=\"dytb\">\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.reverse2()} className=\"fa fa-angle-left dytbc\" />\r\n                                            {this.state.sortedAuthorConvoWithAuthors.map(author => {\r\n\r\n                                                return (\r\n                                                    <div onClick={() => this.onAuthorClick(author)} style={{ marginRight: \"8px\", display: \"inline-block\", marginLeft: \"8px\", width: \"85px\", maxHeight: \"180px\", border: \"1px solid white\", borderRadius: \"3px\", cursor: \"pointer\" }}>\r\n                                                        <div style={{ width: \"83px\", minHeight: \"70px\", backgroundColor: \"yellow\" }}>\r\n                                                            <img src={`https://conceptionary-images.s3.amazonaws.com/${author.lastName}+${author.firstName}.jpg`} alt={author.firstName + \" \" + author.lastName}></img>\r\n                                                        </div>\r\n                                                        <div style={{ fontSize: \"13px\", width: \"83px\", overflow: \"hidden\", textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{author.firstName + author.lastName}</div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.forward2()} className=\"fa fa-angle-right dytbc\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-2\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", borderLeft: \"0px\", borderRight: \"3px  solid pink\", borderTop: \"3px  solid pink\", borderBottom: \"3px  solid pink\", textAlign: \"center\", cursor: \"pointer\" }}>\r\n                                <div className=\"text-center\">\r\n                                    This place is for adds\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                        {/* new row for books */}\r\n                        {this.state.showBooks && <div className=\"row\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px  solid pink\", textAlign: \"\" }}>\r\n                                <div style={{ width: \"150px\", margin: \"auto\", marginTop: \"10px\" }}>\r\n                                    <div style={{ cursor: \"pointer\" }} onClick={() => this.setState({ showBooks: false })}><i style={{ width: \"16px\" }} className=\"fa  fa-arrow-left\" />&nbsp;&nbsp;<span style={{ fontSize: \"16px\" }} >Go Back</span></div>\r\n                                    <h3>Books</h3>\r\n                                    {this.state.authorBooksById && this.state.authorBooksById.length > 0 && this.state.authorBooksById.map(book => {\r\n                                        return (\r\n                                            <a href={\"#\" + book.discrete_book_id} style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }} onClick={() => {\r\n                                            }}>{book.title}</a>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                                <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                    <div id=\"img\" style={{ width: \"398px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                        <h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                        <h5 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\", display: \"inline-block\" }} className=\"float-right\">{(this.state.selectedOption.born && this.state.selectedOption.died) ? this.state.selectedOption.born + \" - \" + this.state.selectedOption.died : \"HUL\"}</h5>\r\n                                    </div>\r\n                                    {/* <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"398px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Positive\r\n                                    </label>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Critical\r\n                                    </label>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Funny\r\n                                    </label>\r\n                                    </div> */}\r\n                                    {this.state.author && this.state.author.Books && this.state.author.Books.length > 0 && this.state.author.Books.map(book => {\r\n                                        {\r\n                                            return this.state.authorBooks[book].BookDescriptions && this.state.authorBooks[book].BookDescriptions.length > 0 && this.state.authorBooks[book].BookDescriptions.map(bookDescription => {\r\n                                                return (<div id={book} className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\" }} >\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col col-md-2\">\r\n                                                            <div style={{ width: \"60px\", minHeight: \"80px\", background: \"red\" }}></div>\r\n                                                        </div>\r\n                                                        <div className=\"col col-md-10\">\r\n                                                            <h6>{this.state.authorBooks[book].title}</h6>\r\n                                                            <div style={{ color: \"black\" }}>{bookDescription.description}</div>\r\n                                                            <div className=\"pull-right\">\r\n                                                                <a className=\"contextbutton\" onClick={() => {\r\n                                                                    this.setState({\r\n                                                                        visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                                                                        id: book.id,\r\n                                                                    })\r\n                                                                }} style={{ cursor: \"pointer\" }}>Context</a>\r\n                                                            </div>\r\n                                                            <div id={book} style={{ marginTop: \"20px\", display: [book == this.state.id ? this.state.visibility : \"none\"] }} >{bookDescription.source}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>);\r\n                                            })\r\n                                        }\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    }\r\n                </div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst setInitialsortedAuthorInfluencedByAuthors = (data) => {\r\n    if (data) {\r\n        if (data.length > 0) {\r\n            if (data.length > 3) {\r\n                return data.slice(0, 3);\r\n            }\r\n            else {\r\n                return data\r\n            }\r\n        }\r\n    }\r\n}\r\nconst setInitialsortedAuthorInfluencedOnAuthors = (data) => {\r\n    if (data) {\r\n        if (data.length > 0) {\r\n            if (data.length > 3) {\r\n                return data.slice(0, 3);\r\n            }\r\n            else {\r\n                return data\r\n            }\r\n        }\r\n    }\r\n}\r\nconst setInitialsortedAuthorConvoWithAuthors = (data) => {\r\n    // console.log('Here get me ', data);\r\n    if (data) {\r\n        if (data.length > 0) {\r\n            if (data.length > 3) {\r\n                return data.slice(0, 3);\r\n            }\r\n            else {\r\n                return data\r\n            }\r\n        }\r\n    }\r\n}\r\n// const renderAuthorBio = (authorBio) => {\r\n//     let desiredArray = [];\r\n//     let uniqueSupraIds = [];\r\n//     authorBio.forEach(element => {\r\n//         if (!(uniqueSupraIds.includes(element.supra_id))) {\r\n//             uniqueSupraIds.push(element.supra_id);\r\n//             // console.log(\"Here is element--------------------->\", element);\r\n//             desiredArray.push({ supra_id: element.supra_id, heading: element.author_supra, values: [{ distinct_grouping: element.distinct_grouping, distinct_grouping_id: element.distinct_grouping_id }] })\r\n//         }\r\n//         else {\r\n//             // console.log(\"Here in else\")\r\n//             for (let i = 0; i < desiredArray.length; i++) {\r\n//                 if (desiredArray[i].supra_id === element.supra_id) {\r\n//                     desiredArray[i].values.push({ distinct_grouping: element.distinct_grouping, distinct_grouping_id: element.distinct_grouping_id });\r\n//                 }\r\n//             }\r\n//         }\r\n//     })\r\n//     return desiredArray;\r\n// }\r\n// const getUniqueBookNamesWithIds = (authorBooks) => {\r\n//     // console.log(\"Recievce author books\", authorBooks)\r\n//     let uniqueBookNameWithId = [];\r\n//     let uniqueBookIds = [];\r\n//     authorBooks.forEach(e => {\r\n//         if (!(uniqueBookIds.indexOf(e.id) > -1)) {\r\n//             uniqueBookIds.push(e.id);\r\n//             let discrete_book_id = e.id;\r\n//             let title = e.title;\r\n//             uniqueBookNameWithId.push({ discrete_book_id, title });\r\n//         }\r\n//     })\r\n//     return uniqueBookNameWithId;\r\n// }\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        getAuthorDetails: bindActionCreators(getAuthorDetails, dispatch),\r\n        // getAuthorBio: bindActionCreators(getAuthorBio, dispatch),\r\n        //getAuthorBooks: bindActionCreators(getAuthorBooks, dispatch),\r\n        getAuthorInfluencedByAuthors: bindActionCreators(getAuthorInfluencedByAuthors, dispatch),\r\n        // getAuthorInfluencedOnAuthors: bindActionCreators(getAuthorInfluencedOnAuthors, dispatch),\r\n        //getAuthorConvoWithAuthors: bindActionCreators(getAuthorConvoWithAuthors, dispatch),\r\n        flushAuthorState: bindActionCreators(flushAuthorState, dispatch),\r\n        flushAuthorClusterState: bindActionCreators(flushAuthorClusterState, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        increasePerspectiveLike:bindActionCreators(increasePerspectiveLike,dispatch),\r\n        decreasePerspectiveLike:bindActionCreators(decreasePerspectiveLike,dispatch)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        navbar: state.navbar,\r\n        author: state.author,\r\n        uniqueconcepts: getUniqueConcept(state),\r\n        sortedperpectives: getSortedPerspectivesByConceptName(state),\r\n        authorBio: getAuthorBioData(state),\r\n        authorBooksById: getUniqueAuthorBooks(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorPage);","import axios from 'axios';\r\nexport default function setAuthorizationToken(token) {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\r\n    }\r\n    else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n}","import axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport setAuthorizationToken from \"../utils/setAuthorizationToken\";\r\nexport function setCurrentUser(user) {\r\n    return {\r\n        type: \"SET_CURRENT_USER\",\r\n        user\r\n    }\r\n}\r\nexport function logOut() {\r\n    return dispatch => {\r\n        localStorage.removeItem('jwtToken');\r\n        setAuthorizationToken(false);\r\n        dispatch({\r\n            type: \"LOG_OUT\",\r\n        })\r\n    }\r\n}\r\n\r\n// new implementation\r\n\r\nexport function userLoginRequest(userData) {\r\n\r\n    return dispatch => {\r\n        return axios.post(\"http://localhost:3002/api/rest/v1/login\", userData, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        })\r\n            .then(res => {\r\n                const token = res.data.token;\r\n                localStorage.setItem('jwtToken', token);\r\n                setAuthorizationToken(token);\r\n                dispatch(setCurrentUser(jwt.decode(token)));\r\n            });\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport validateLogin from \"../../helpers/validateLogin\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport classnames from \"classnames\";\r\nimport { userLoginRequest } from \"../../actions/loginActions\";\r\nimport \"./Login.css\";\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {},\r\n            isLoading: false,\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n    isValid(data) {\r\n        const { errors, isValid } = validateLogin(data);\r\n        if (!isValid) {\r\n            this.setState({ errors })\r\n        }\r\n        return isValid;\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isValid(this.state)) {\r\n            this.setState({ errors: {}, isLoading: true });\r\n            this.props.userLoginRequest({ username: this.state.username, password: this.state.password, call: \"signin\" }).then(\r\n                (data) => { this.props.history.push(\"/command-center\"); console.log(\"Data after succeful response login\", data) },\r\n                (data) => { this.setState({ errors: data.response.data, isLoading: false }); console.log(\"data after error login\", data); console.log(\"stategkkfhjllllllllll\", this.state); }\r\n            );\r\n        }\r\n    }\r\n    render() {\r\n        const { username, password, isLoading, errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"back\">\r\n                    <div className=\"col col-md-4 offset-md-4 div-center\" style={{ marginTop: 70 }}>\r\n                        <div className=\"loginCenter\">\r\n                            <h3>Login</h3>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                {errors.form && <div className=\"alert alert-danger\">{errors.form}</div>}\r\n                                <div className={classnames(\"form-group\", { \"has-error\": errors.username })}>\r\n                                    {errors.username && <span className=\"help-block\">{errors.username}</span>}\r\n                                    {!errors.username && <label >Username</label>}\r\n                                    <input type=\"username\" class=\"form-control\" name=\"username\" value={this.state.username} placeholder=\"username\" onChange={this.onChange} />\r\n                                </div>\r\n                                <div className={classnames(\"form-group\", { \"has-error\": errors.password })}>\r\n                                    {errors.password && <span className=\"help-block\">{errors.password}</span>}\r\n                                    {!errors.password && <label >Password</label>}\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\" onChange={this.onChange} placeholder=\"Password\" />\r\n                                </div>\r\n                                <button style={{ backgroundColor: '#009dd6' }} type=\"submit\" disabled={this.state.isLoading} class=\"btn \">Login</button>\r\n                                <hr />\r\n                                <a href=\"/signup\" class=\"btn btn-link\">Signup</a>\r\n                                <button disabled={isLoading} type=\"button\" class=\"btn btn-link\">Reset Password</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userLoginRequest: bindActionCreators(userLoginRequest, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","import validator from \"validator\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nexport default function (loginData) {\r\n    let errors = {};\r\n    if (validator.isEmpty(loginData.email)) {\r\n        errors.email = \"*Email is required!\";\r\n    }\r\n    if (validator.isEmpty(loginData.password)) {\r\n        errors.password = \"*Password is required!\"\r\n    }\r\n\r\n    return {\r\n        errors,\r\n        isValid: isEmpty(errors),\r\n    }\r\n}","import axios from \"axios\";\r\nexport function userSignupRequest(userData) {\r\n    return dispatch => {\r\n        return axios.post(\"https://8xzajgtd2e.execute-api.us-east-1.amazonaws.com/dev/signup\", userData, {\r\n            headers: {\r\n\r\n            }\r\n        });\r\n    }\r\n}","import validator from \"validator\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nexport default function (signupData) {\r\n    let errors = {};\r\n    if (validator.isEmpty(signupData.firstname)) {\r\n        errors.firstname = \"*First Name is required!\";\r\n    }\r\n    if (validator.isEmpty(signupData.lastname)) {\r\n        errors.lastname = \"*Last Name is required!\";\r\n    }\r\n    if (validator.isEmpty(signupData.email)) {\r\n        errors.email = \"*Email is required!\";\r\n    }\r\n    if (!validator.isEmail(signupData.email)) {\r\n        errors.email = \"*Email is invalid!\"\r\n    }\r\n    return {\r\n        errors,\r\n        isValid: isEmpty(errors),\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport \"./Signup.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { userSignupRequest } from \"../../actions/signupActions\";\r\nimport classnames from \"classnames\";\r\nimport { Redirect } from \"react-router\";\r\nimport validateSignup from \"../../helpers/validateSignup\";\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            errors: {},\r\n            isLoading: false,\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        // console.log(\"Errors in Signup State\", this.state.errors);\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n    isValid(data) {\r\n        const { errors, isValid } = validateSignup(data);\r\n        if (!isValid) {\r\n            this.setState({ errors })\r\n        }\r\n        return isValid;\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isValid(this.state)) {\r\n            this.setState({ errors: {}, isLoading: true });\r\n            this.props.userSignupRequest({\r\n                fname: this.state.firstname, lname: this.state.lastname, email: this.state\r\n                    .email\r\n                , call: \"signup\"\r\n            }).then(\r\n                ({ data }) => { this.props.history.push(\"/login\"); console.log(\"**********first Function*******:\", data.body); console.log(\"State in good 200 request\", this.state); },\r\n                (data) => {\r\n                    // console.log(\"**********second Function*******:\", data.response.data);\r\n                    this.setState({ errors: data.response.data, isLoading: false })\r\n                    // console.log(\"State in bad request\", this.state);\r\n                }\r\n            );\r\n        }\r\n    }\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"back\">\r\n\r\n\r\n                    <div className=\"col col-md-6 offset-md-3 div-center\" style={{ marginTop: '50px' }}>\r\n                        <div className=\"loginCenter\">\r\n                            <h3>Signup</h3>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className={classnames(\"form-group\", { \"has-error\": errors.firstname })}>\r\n                                    {errors.firstname && <span className=\"help-block\">{errors.firstname}</span>}\r\n                                    {!errors.firstname && <label >Name</label>}\r\n                                    <input type=\"text\" class=\"form-control\" value={this.state.firstname} onChange={this.onChange} name=\"firstname\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {errors.lastname && <span className=\"help-block\">{errors.lastname}</span>}\r\n                                    {!errors.lastname && <label >Last Name</label>}\r\n                                    <input type=\"text\" class=\"form-control\" value={this.state.lastname} onChange={this.onChange} name=\"lastname\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {errors.email && <span className=\"help-block\">{errors.email}</span>}\r\n                                    {!errors.email && <label>Email</label>}\r\n                                    <input type=\"email\" class=\"form-control\" value={this.state.email} onChange={this.onChange} name=\"email\" email=\"email\" />\r\n                                </div>\r\n                                <button className=\"pull-right\" disabled={this.state.isLoading} style={{ backgroundColor: '#009dd6' }} type=\"submit\" class=\"btn\">Get Verified</button>\r\n                                <a href=\"/login\" class=\"btn text-center btn-link\">Already have and account ?</a>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userSignupRequest: bindActionCreators(userSignupRequest, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Signup);\r\n","import React, { Component } from 'react';\r\nimport \"./TopNavBar.css\";\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { bindActionCreators } from 'redux';\r\nimport \"./ReactSelect.css\";\r\nimport \"react-virtualized/styles.css\";\r\nimport \"react-virtualized-select/styles.css\";\r\nimport chroma from 'chroma-js'\r\nimport AsyncSelect from 'react-select/lib/Async';\r\nimport { setSelectedCategory, setSelectedItem, login, logout, signup, flushState, getAllAsync, setAutherClusterSelectedItems, prefetchConceptsForNavbar, prefetchConceptClustersForNavbar, prefetchAuthorsForNavbar, prefetchAuthorClustersForNavbar, prefetchAuthorGroupsForNavbar, getAuthorGroups, addTag, removeTag } from \"../../actions/navbaractions\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Modal from 'react-responsive-modal';\r\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap';\r\nimport Loader from 'react-loader-spinner'\r\nimport Joi from 'joi-browser/dist/joi-browser'\r\nimport axios from 'axios';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n} from 'reactstrap';\r\n\r\nconst server = process.env.REACT_APP_SERVER;\r\nclass TopNavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTag: [],\r\n            searchCategory: this.props.navbar.searchCategory,\r\n            seletedSearch: \"\",\r\n            selectedOption: {},\r\n            authorClusterSelectedOptions: \"\",\r\n            concepts: this.props.navbar.concepts,\r\n            conceptClusters: this.props.navbar.conceptClusters,\r\n            authors: this.props.navbar.authors,\r\n            authorClusters: this.props.navbar.authorClusters,\r\n            authorGroups: this.props.navbar.authorGroups,\r\n            dropdownData: [],\r\n            tags: this.props.navbar.tags,\r\n            labelsArray: [],\r\n            loadOptionsData: [],\r\n            suggestions: [],\r\n            modalOpen: false,\r\n            modalSignupOpen: false,\r\n            account: {\r\n                Email: '',\r\n                Password: '',\r\n                Username: ''\r\n            },\r\n            errors: [],\r\n            loginRequestStatus_admin: true,\r\n            loginStatus_admin: true,\r\n            userAccount: [],\r\n            filter:false\r\n        }\r\n\r\n        // console.log(\"Top Navbar state in Constructor\", this.props)\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.loadOptions = this.loadOptions.bind(this);\r\n        this.renderRedirect = this.renderRedirect.bind(this);\r\n        this.onSelectedCatagoryChange = this.onSelectedCatagoryChange.bind(this);\r\n        //this.renderRedirectCategory = this.renderRedirectCategory.bind(this);\r\n        this.searchAllConceptionary = this.searchAllConceptionary.bind(this);\r\n    }\r\n    schema = {\r\n        Email: Joi.string()\r\n            .required()\r\n            .label(\"Email\"),\r\n        Password: Joi.string()\r\n            .label(\"Password\")\r\n            .required(),\r\n        Username: Joi.string().allow('', null)\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.loginStatus_admin) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    shuffle(a) {\r\n        // for (let i = a.length - 1; i > 0; i--) {\r\n        //     const j = Math.floor(Math.random() * (i + 1));\r\n        //     [a[i], a[j]] = [a[j], a[i]];\r\n        // }\r\n        return a;\r\n    }\r\n\r\n    toggleModalOpen = () => {\r\n        this.setState(prevState => ({ modalOpen: !(prevState.modalOpen) }));\r\n    }\r\n\r\n    toggleModalSignupOpen = () => {\r\n        this.setState(prevState => ({ modalSignupOpen: !(prevState.modalSignupOpen) }));\r\n    }\r\n\r\n\r\n\r\n\r\n    // Login Actions\r\n\r\n\r\n    validateProperty(input) {\r\n        const obj = { [input.name]: input.value };\r\n        const schema = { [input.name]: this.schema[input.name] };\r\n        const { error } = Joi.validate(obj, schema);\r\n        if (!error) return null;\r\n        return error.details[0].message;\r\n    }\r\n\r\n    /* *********************************************** HANDLE INPUT CHANGE EVENT *************************************** */\r\n\r\n    validate = () => {\r\n        const result = Joi.validate(this.state.account, this.schema, {\r\n            abortEarly: false\r\n        });\r\n        if (!result.error) return null;\r\n\r\n        const errors = [];\r\n\r\n        for (let item of result.error.details) errors[item.path[0]] = item.message;\r\n        return errors;\r\n    };\r\n\r\n    handleLoginChange = ({ currentTarget: input }) => {\r\n        const errors = [...this.state.errors];\r\n\r\n        const errorMessage = this.validateProperty(input);\r\n\r\n        if (errorMessage)\r\n            errors[input.name] = errorMessage;\r\n        else\r\n            delete errors[input.name];\r\n\r\n        const account = { ...this.state.account };\r\n\r\n        account[input.name] = input.value;\r\n        this.setState({ account, errors });\r\n\r\n    };\r\n\r\n\r\n    handleSubmit = (e, isSignup) => {\r\n        e.preventDefault();\r\n        // this.setState({loginRequestStatus_admin:false})\r\n        const errors = this.validate();\r\n\r\n        if (!errors) {\r\n            if (isSignup) this.props.signup(this.state.account)\r\n            else this.props.login(this.state.account);\r\n        }\r\n        if (this.props.loginStatus_admin) {\r\n            this.setState({ errors: errors || {} });\r\n        }\r\n    }\r\n\r\n    // end login actions\r\n\r\n\r\n    searchAllConceptionary(inputValue, callback) {\r\n\r\n        axios.get(`${server}/api/rest/v1/home/all/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                let suggestions = [...this.state.suggestions];\r\n\r\n                selectedOption.forEach(x => {\r\n                    let obj = {};\r\n                    obj.id = x.id.toString();\r\n                    obj.label = x.label;\r\n                    suggestions.push(obj);\r\n                })\r\n                this.setState({ suggestions });\r\n\r\n\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author groups for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    searchAuthors(inputValue, callback) {\r\n        axios.get(`${server}/api/rest/v1/authors/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                this.setState({ selectedOption });\r\n\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching authors for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    searchConcepts(inputValue, callback) {\r\n        axios.get(`${server}/api/rest/v1/concepts/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                this.setState({ selectedOption });\r\n\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching concepts for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    searchConceptClusters(inputValue, callback) {\r\n\r\n        axios.get(`${server}/api/rest/v1/conceptClusters/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                // this.setState({selectedOption});\r\n\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n\r\n            console.log('Error while prefetching concept clusters for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    searchAuthorClusters(inputValue, callback) {\r\n        axios.get(`${server}/api/rest/v1/authorClusters/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                this.setState({ selectedOption });\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author clusters for navbar', error);\r\n        });\r\n    }\r\n\r\n    searchAuthorGroupsNav(inputValue, callback) {\r\n        axios.get(`${server}/api/rest/v1/authorGroups/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                this.setState({ selectedOption });\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author groups for navbar', error);\r\n        });\r\n    }\r\n\r\n    searchAuthorGroups(labels, callback) {\r\n        axios.post(`${server}/api/rest/v1/authors/search`, labels).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author groups for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    onTagsChanged = (tag) => {\r\n        // this.setState({filter:false})\r\n        this.props.addTag(tag);\r\n        if (this.state.tags.length > 0) {\r\n            this.setState({\r\n                searchCategory: 'AuthorGroups'\r\n            });\r\n            this.props.setSelectedCategory(\"AuthorGroups\");\r\n        }\r\n        if (this.state.tags.length <= 0) {\r\n            this.setState({\r\n                searchCategory: this.props.navbar.searchCategory\r\n            });\r\n            this.props.setSelectedCategory(\"All\");\r\n        }\r\n\r\n\r\n        this.setState({ suggestions: [] })\r\n\r\n    };\r\n\r\n    onInputChanged = (e) => {\r\n        //console.log(`input value is now: ${e.target.value}`);\r\n    }\r\n\r\n    handleDelete = (i) => {\r\n        const tags = this.state.tags.slice(0)\r\n        tags.splice(i, 1)\r\n        this.setState({ tags }, function () {\r\n            if (this.state.tags.length > 0) {\r\n                this.props.setSelectedCategory(\"AuthorGroups\");\r\n            }\r\n            if (this.state.tags.length <= 0) {\r\n                this.props.setSelectedCategory(\"All\");\r\n            }\r\n        })\r\n        this.setState({ suggestions: [] })\r\n\r\n\r\n    }\r\n\r\n    handleAddition = (tag) => {\r\n        let tags = [...this.state.tags];\r\n        tags.push({\r\n            id: tag.id.toString(),\r\n            label: tag.label,\r\n            type: tag.type\r\n        });\r\n        this.setState({ tags }, function () {\r\n            if (this.state.tags.length > 0) {\r\n                this.props.setSelectedCategory(\"AuthorGroups\");\r\n            }\r\n            if (this.state.tags.length <= 0) {\r\n                this.props.setSelectedCategory(\"All\");\r\n            }\r\n        });\r\n        this.setState({ suggestions: [] })\r\n\r\n        //console.log(this.state.tags);\r\n    }\r\n    loadTags = (input, cb) => {\r\n        axios.post(`${server}/api/rest/v1/authorGroups/search`, input).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                let suggestions = [];\r\n                selectedOption.forEach(x => {\r\n                    let obj = {};\r\n                    obj.id = x.id.toString();\r\n                    obj.label = x.label;\r\n                    obj.value = x.label;\r\n                    obj.type = x.type;\r\n                    suggestions.push(obj);\r\n                })\r\n                this.setState({ suggestions });\r\n                cb(null, suggestions);\r\n            }\r\n            else {\r\n                console.log(\"\");\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching suggestions for navbar', error);\r\n        });\r\n    }\r\n    loadSuggestions = (label) => {\r\n        let tagsObject = {};\r\n        if (this.state.tags.length < 1) {\r\n            tagsObject = {};\r\n            tagsObject.type = \"both\";\r\n            tagsObject.labels = label;\r\n        } else {\r\n            tagsObject = {};\r\n            tagsObject.labels = label;\r\n            tagsObject.type = \"group\";\r\n            tagsObject.id = this.state.tags.map(x => x.id);\r\n\r\n        }\r\n        let query = {};\r\n        query.tagsObject = tagsObject;\r\n        return new Promise((resolve, reject) => {\r\n            this.loadTags(query, function (err, suggestions) {\r\n\r\n                resolve(suggestions);\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    handleChange = (selectedOption) => {\r\n        if (selectedOption.label !== undefined) {\r\n            this.props.setSelectedItem(selectedOption);\r\n            this.setState({\r\n                selectedOption\r\n            });\r\n        }\r\n    }\r\n\r\n    handleTagChange = (selectedTag) => {\r\n        if (selectedTag.label !== undefined) {\r\n            this.state.tags.push(selectedTag);\r\n            this.setState({ tags: this.state.tags });\r\n        }\r\n    }\r\n\r\n    onSelectedCatagoryChange(e) {\r\n        if (this.props.navbar.tags.length > 0) {\r\n            this.setState({\r\n                searchCategory: \"AuthorGroups\",\r\n                seletedSearch: e\r\n            });\r\n            this.props.flushState();\r\n            this.props.setSelectedCategory(\"AuthorGroups\");\r\n        } else {\r\n            this.setState({\r\n                seletedSearch: e\r\n            });\r\n            this.props.flushState();\r\n            this.props.setSelectedCategory(e);\r\n        }\r\n    }\r\n    loadOptions(inputValue) {\r\n        if (this.state.searchCategory === \"Concept\") {\r\n\r\n            return new Promise(resolve => {\r\n                this.searchConcepts(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n        else if (this.state.searchCategory === \"Concept Clusters\") {\r\n\r\n            return new Promise(resolve => {\r\n                this.searchConceptClusters(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n\r\n        else if (this.state.searchCategory === \"AuthorGroups\") {\r\n            let obj = {};\r\n            obj.labels = this.state.tags;\r\n            obj.category = this.state.seletedSearch;\r\n            obj.label = inputValue;\r\n\r\n            return new Promise(resolve => {\r\n                this.searchAuthorGroups(obj, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n\r\n        else if (this.state.searchCategory === \"Author\") {\r\n            return new Promise(resolve => {\r\n                this.searchAuthors(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n        else if (this.state.searchCategory === \"Author Clusters\") {\r\n            return new Promise(resolve => {\r\n                this.searchAuthorClusters(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n        else if (this.state.searchCategory === \"Author Groups\") {\r\n            return new Promise(resolve => {\r\n                this.searchAuthorGroupsNav(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n        else if (this.state.searchCategory === \"All\") {\r\n\r\n            return new Promise(resolve => {\r\n                this.searchAllConceptionary(inputValue, function (err, results) {\r\n\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n    };\r\n    renderRedirect = () => {\r\n        if (this.state.selectedOption) {\r\n            if (this.state.selectedOption.category) {\r\n                switch (this.state.selectedOption.category) {\r\n                    case \"Concepts\":\r\n                        return <Redirect to='/concepts' />\r\n                    case \"Concept-Clusters\":\r\n                        return <Redirect to='/concept-clusters' />\r\n                    case \"Authors\":\r\n                        return <Redirect to='/authors' />\r\n                    case \"Author-Clusters\":\r\n                        return <Redirect to='/author-clusters' />\r\n                    case \"Author-Groups\":\r\n                        return <Redirect to='/author-groups' />\r\n                    default:\r\n                        return null\r\n                }\r\n            }\r\n        }\r\n    }\r\n    removeTag = id => {\r\n        this.props.removeTag(id);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.selectedOption !== nextProps.navbar.selectedOption && nextProps.navbar.selectedOption) {\r\n            this.setState({ selectedOption: nextProps.navbar.selectedOption });\r\n        }\r\n\r\n        // if ( this.props.loginStatus_admin !=nextProps.loginStatus_admin  && nextProps.loginStatus_admin) {\r\n\r\n        // }\r\n        if (nextProps.navbar.SIGNUP_SUCCESS) {\r\n            let account = {\r\n                Email: '',\r\n                Password: '',\r\n                Username: ''\r\n            };\r\n            this.setState({\r\n                account\r\n\r\n            });\r\n        }\r\n        if (this.props.loginStatus_admin != nextProps.loginStatus_admin && !nextProps.invalidLogin && nextProps.loginStatus_admin) {\r\n            this.setState({ modalOpen: false })\r\n        }\r\n\r\n\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n\r\n            if (nextProps.navbar.tags.length > 0) {\r\n                this.props.setSelectedCategory(\"AuthorGroups\");\r\n            }\r\n            if (nextProps.navbar.tags.length <= 0) {\r\n                this.props.setSelectedCategory(this.state.seletedSearch ? this.state.seletedSearch : 'All');\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            searchCategory: nextProps.navbar.searchCategory,\r\n            concepts: nextProps.navbar.concepts,\r\n            conceptClusters: nextProps.navbar.conceptClusters,\r\n            authors: nextProps.navbar.authors,\r\n            authorClusters: nextProps.navbar.authorClusters,\r\n            authorGroups: nextProps.navbar.authorGroups,\r\n            selectedOption: nextProps.navbar.selectedOption,\r\n            tags: nextProps.navbar.tags\r\n\r\n        });\r\n        if (nextProps.navbar.selectedOption.label !== undefined) {\r\n            if (nextProps.navbar.tags.length > 0) {\r\n                let filters = nextProps.navbar.tags.map(x => x.label);\r\n                let name = nextProps.navbar.selectedOption.value;\r\n                let category = nextProps.navbar.selectedOption.category;\r\n                let url = `/${category}/${name}?`;\r\n                for (let i = 0; i < filters.length; i++) {\r\n                    if (i == 0) {\r\n                        url = url.concat(`filters=${filters[i]}`);\r\n                    } else {\r\n                        url = url.concat(`&filters=${filters[i]}`);\r\n                    }\r\n\r\n                }\r\n                window.history.pushState(null, null, url);\r\n            } else {\r\n                let name = nextProps.navbar.selectedOption.value;\r\n                let category = nextProps.navbar.selectedOption.category;\r\n                let url = `/${category}/${name}`;\r\n                  window.history.pushState(null, null, url);\r\n                //this.props.history.push(url);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderRedirect()}\r\n                <Navbar style={{ backgroundColor: [getBackgroudColor(this.state.selectedOption.page)] }} light expand=\"md\">\r\n                    <NavbarBrand href=\"/\">Conceptionary</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"navbar\">\r\n                            <form className=\"form-inline\">\r\n                                <span style={{ display: \"inline-block\" }}>\r\n                                    <select style={{ height:30,padding: \"5px 3px\", borderRadius: \"3px\", border: \"1px solid white\" }} onChange={(e) => this.onSelectedCatagoryChange(e.target.value)} value={this.state.seletedSearch}>\r\n                                        <option selected={this.state.searchCategory === \"All\"} value=\"All\">All</option>\r\n                                        <option selected={this.state.searchCategory === \"Concept\"} value=\"Concept\">Concepts</option>\r\n                                        <option selected={this.state.searchCategory === \"Author\"} value=\"Author\">Authors</option>\r\n                                        <option selected={this.state.searchCategory === \"Concept Clusters\"} value=\"Concept Clusters\">Concept Clusters</option>\r\n                                        <option selected={this.state.searchCategory === \"Author Groups\"} value=\"Author Groups\">Author Groups</option>\r\n                                    </select>\r\n                                </span>\r\n                                <span style={{ display: \"inline-block\" }}>\r\n                                    <AsyncSelect className=\"ml-2 width-300\"\r\n                                        value={this.state.selectedOption}\r\n                                        loadOptions={this.loadOptions}\r\n                                        onChange={this.handleChange}\r\n                                        styles={colourStyles}\r\n                                    />\r\n\r\n                                </span>\r\n                               \r\n                               \r\n                                \r\n                            </form>\r\n                            &nbsp;\r\n                            &nbsp;\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                             \r\n                                \r\n                        <span style={{ display: \"inline-block\" }}>\r\n                                    <ul>\r\n                                        {this.state.tags.map(tag => {\r\n                                            return <li style={{ display: 'inline-block', background: 'purple', color: \"#fff\", borderRadius: '8px', padding: '5px', fontSize: '13px', marginLeft: '2px' }}>{tag.label}\r\n                                                <span style={{ marginLeft: '5px' }} className=\"badge\" id=\"tag\" onClick={() => { this.removeTag(tag.id) }}>X</span>\r\n                                            </li>\r\n                                        })}\r\n                                    </ul>\r\n                                </span>\r\n                             <span className=\"ml-auto\" style={{ display:this.state.filter?\"inline-block\":\"none\" }}>\r\n                                    <AsyncSelect className=\"width-200\"\r\n                                        value={this.state.selectedTag}\r\n                                        loadOptions={this.loadSuggestions}\r\n                                        onChange={this.onTagsChanged}\r\n                                        // styles={colourStyles}\r\n                                        isDisabled={this.state.tags.length >= 2 ? true : false || this.state.searchCategory === \"Author Groups\"}\r\n                                    />\r\n\r\n                                </span>\r\n                        <span style={{ display: \"inline-block\" }}>\r\n                                        <NavItem  className=\"ml-auto\" style={{margin:0,padding:0,cursor:'pointer'}} onClick={() => {this.setState({filter:!this.state.filter})}}><i id=\"filter\" className=\"fa fa-filter filter\"></i></NavItem>\r\n                                </span>\r\n\r\n                            {\r\n                                this.props.loginStatus_admin ?\r\n                                    <React.Fragment>\r\n                                        <span style={{ padding: '0 5px' }}>\r\n                                            <NavItem style={{ cursor: 'pointer' }}>\r\n                                                {this.props.loggedInUserAccount_admin.username}\r\n\r\n                                            </NavItem>\r\n                                        </span>\r\n                                        <span style={{ padding: '0 5px' }}>\r\n                                            <NavItem style={{ cursor: 'pointer' }}>\r\n                                                <span onClick={() => { this.props.logout() }}>Logout</span>\r\n                                            </NavItem>\r\n                                        </span>\r\n                                        <span style={{ padding: '0 5px' }}>\r\n\r\n                                            <button\r\n                                                style={\r\n                                                    {\r\n                                                        border: '1px solid',\r\n                                                        marginRight: '5px',\r\n                                                        borderRadius: '50%',\r\n                                                        color: 'black',\r\n                                                        fontWeight: 'bold',\r\n                                                        background: 'white'\r\n                                                    }\r\n                                                }\r\n                                            >+</button>\r\n                                        </span>\r\n\r\n                                    </React.Fragment>\r\n                                    :\r\n\r\n                                    <span>\r\n                                    <NavItem style={{ cursor: 'pointer' }}>\r\n                                        <NavLink onClick={this.toggleModalOpen} >Log-in</NavLink>\r\n                                    </NavItem>\r\n                                    </span>\r\n                                    \r\n\r\n                            }\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n\r\n                <Modal open={this.state.modalOpen} onClose={this.toggleModalOpen} center>\r\n                    <h4 style={{ textAlign: \"center\" }}>Log in to your account</h4>\r\n\r\n                    <div style={{ padding: '50px' }}>\r\n                        <Form style={{ margin: 'auto', width: '300px', padding: '20px 30px', background: '#fff', boxShadow: '0 0 20px #ccc' }}>\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Email\">Email</Label> */}\r\n                                <Input type=\"text\" name=\"Email\" id=\"Email\" onChange={(e) => this.handleLoginChange(e)} placeholder=\"username\" />\r\n                                {this.state.errors.Email && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Email}</p>\r\n                                )}\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Password\">Password</Label> */}\r\n                                <Input type=\"Password\" name=\"Password\" id=\"Password\" onChange={(e) => this.handleLoginChange(e)} placeholder=\"Password\" />\r\n                                {this.state.errors.Password && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Password}</p>\r\n                                )}\r\n                            </FormGroup>\r\n                            {\r\n                                this.props.invalidLogin ? <p className=\"alert alert-info\">Invalid username/password</p> : null\r\n                            }\r\n\r\n                            <p style={{ color: '#641E89', textDecoration: 'underline', cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    this.toggleModalOpen();\r\n                                    this.toggleModalSignupOpen();\r\n                                }}\r\n                            >Don't have an account? signup</p>\r\n                            <Button onClick={(e) => this.handleSubmit(e)}\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    height: \"40px\",\r\n                                    backgroundColor: \"#641E89\",\r\n                                    color: \"#fff\",\r\n                                    border: \"1px solid white\"\r\n                                }} className=\"btn form-control\">{this.state.loginRequestStatus_admin ? \"Login\" :\r\n                                    <Loader\r\n                                        type=\"Puff\"\r\n                                        color=\"#FFF\"\r\n                                        height=\"30\"\r\n                                        width=\"30\"\r\n                                    />}\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.modalSignupOpen} onClose={this.toggleModalSignupOpen} center>\r\n                    <h4 style={{ textAlign: \"center\" }}>Sign up for a new account</h4>\r\n                    {\r\n                        this.props.navbar.SIGNUP_SUCCESS &&\r\n\r\n                        (\r\n                            <div class=\"alert alert-success alert-dismissible\">\r\n                                <span href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</span>\r\n                                <strong>Success!</strong> user created please login.\r\n                        </div>\r\n                        )\r\n                    }\r\n                    <div style={{ padding: '50px' }}>\r\n                        <Form style={{ margin: 'auto', width: '300px', padding: '20px 30px', background: '#fff', boxShadow: '0 0 20px #ccc' }}>\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Email\">Email</Label> */}\r\n                                <Input type=\"text\" name=\"Email\" id=\"Email\" value={this.state.account.Email} onChange={(e) => this.handleLoginChange(e)} placeholder=\"Email\" />\r\n                                {this.state.errors.Email && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Email}</p>\r\n                                )}\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Password\">Password</Label> */}\r\n                                <Input type=\"Username\" name=\"Username\" id=\"Username\" value={this.state.account.Username} onChange={(e) => this.handleLoginChange(e)} placeholder=\"Username\" />\r\n                                {this.state.errors.Username && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Username}</p>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Password\">Password</Label> */}\r\n                                <Input type=\"Password\" name=\"Password\" id=\"Password\" value={this.state.account.Password} onChange={(e) => this.handleLoginChange(e)} placeholder=\"Password\" />\r\n                                {this.state.errors.Password && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Password}</p>\r\n                                )}\r\n                            </FormGroup>\r\n\r\n                            <p style={{ color: '#641E89', textDecoration: 'underline', cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    this.toggleModalSignupOpen();\r\n                                    this.toggleModalOpen();\r\n                                }}\r\n                            >Already have an account? login</p>\r\n                            {/* <p style={{color:'#641E89',textDecoration:'underline', cursor:'pointer'}}>Forgot Password ?</p> */}\r\n                            <Button onClick={(e) => this.handleSubmit(e, true)}\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    height: \"40px\",\r\n                                    backgroundColor: \"#641E89\",\r\n                                    color: \"#fff\",\r\n                                    border: \"1px solid white\"\r\n                                }} className=\"btn form-control\">{this.state.loginRequestStatus_admin ? \"Signup\" :\r\n                                    <Loader\r\n                                        type=\"Puff\"\r\n                                        color=\"#FFF\"\r\n                                        height=\"30\"\r\n                                        width=\"30\"\r\n                                    />}\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst dot = (color = '#ccc') => ({\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n\r\n    ':before': {\r\n        backgroundColor: color,\r\n        borderRadius: 10,\r\n        content: '\" \"',\r\n        display: 'block',\r\n        marginRight: 8,\r\n        height: 10,\r\n        width: 10,\r\n    },\r\n});\r\nconst colourStyles = {\r\n    control: styles => ({ ...styles, backgroundColor: 'white' }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        const color = chroma(data.color);\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isDisabled\r\n                ? null\r\n                : isSelected ? data.color : isFocused ? color.alpha(0.1).css() : null,\r\n            color: isDisabled\r\n                ? '#ccc'\r\n                : isSelected\r\n                    ? chroma.contrast(color, 'white') > 2 ? 'white' : 'black'\r\n                    : data.color,\r\n            cursor: isDisabled ? 'not-allowed' : 'default',\r\n        };\r\n    },\r\n    input: styles => ({ ...styles, ...dot() }),\r\n    placeholder: styles => ({ ...styles, ...dot() }),\r\n    singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\r\n};\r\nconst getBackgroudColor = (page) => {\r\n    switch (page) {\r\n        case 'Concepts':\r\n            return \"#696969\";\r\n        case 'Concept Clusters':\r\n            return \"#CD5C5C\";\r\n        case 'Authors':\r\n            return \"#A52A2A\";\r\n        case 'Author Clusters':\r\n            return \"#800080\";\r\n        default:\r\n            return \"#a4b2b7\";\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        flushState: bindActionCreators(flushState, dispatch),\r\n        setAutherClusterSelectedItems: bindActionCreators(setAutherClusterSelectedItems, dispatch),\r\n        getAuthorGroups: bindActionCreators(getAuthorGroups, dispatch),\r\n        login: bindActionCreators(login, dispatch),\r\n        signup: bindActionCreators(signup, dispatch),\r\n        logout: bindActionCreators(logout, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        removeTag: bindActionCreators(removeTag, dispatch)\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        navbar: state.navbar,\r\n        userExist_admin: state.navbar.userExist_admin,\r\n        loginRequestStatus_admin: state.navbar.loginRequestStatus_admin,\r\n        loginStatus_admin: state.navbar.loginStatus_admin,\r\n        invalidLogin: state.navbar.invalidLogin,\r\n        loggedInUserAccount_admin: state.navbar.loggedInUserAccount_admin\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TopNavBar));","import React, { Component } from 'react';\r\nimport conceptionary_svg from \"../../images/conceptionary.svg\";\r\nimport \"./HomePage.css\";\r\nimport{getAuthorGroups} from \"../../utilities\";\r\nimport queryString from \"query-string\";\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    async componentWillMount(){\r\n    //     if (queryString.parse(this.props.location.search).filters) {\r\n    //         let filters = [];\r\n    //         let queryFilters = queryString.parse(this.props.location.search).filters;\r\n    //         if (typeof queryFilters === \"string\") {\r\n    //             filters.push(queryFilters);\r\n    //         } else {\r\n    //             filters = queryFilters;\r\n    //         }\r\n    //         let author_group = await getAuthorGroups(filters);\r\n    //         this.props.addTag(author_group);\r\n    // }\r\n}\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: \"5%\" }} className=\"text-center\">\r\n                <img src={conceptionary_svg} width=\"80%\" alt=\"\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport './style.css';\r\nimport Axios from 'axios';\r\nclass FileUpload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null,\r\n            msg: \"\",\r\n            skip: [],\r\n            wait:false\r\n        }\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n    }\r\n\r\n    onChangeHandler(event) {\r\n        this.setState({\r\n            selectedFile: event.target.files[0],\r\n        });\r\n    }\r\n    async onClickHandler() {\r\n        this.setState({\r\n            wait:true\r\n        })\r\n        const data = new FormData();\r\n        data.append('file', this.state.selectedFile);\r\n        let response = await Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspectives/upload`, data);\r\n        if (response.data.msg) {\r\n            this.setState({\r\n                msg: response.data.msg,\r\n                wait:false\r\n            })\r\n        }\r\n        if (response.data.skip.length > 0) {\r\n            this.setState({\r\n                skip: response.data.skip\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"container\" style={{ marginTop: \"5px\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"offset-md-3 col-md-6\">\r\n                        <div class=\"form-group files\">\r\n                            <label><b>Upload Your File </b></label>\r\n                            <input type=\"file\" name=\"file\" class=\"form-control\" multiple onChange={this.onChangeHandler} /><br></br>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            {/*<ToastContainer />\r\n                <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>*/}\r\n\r\n                        </div>\r\n                        <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler} disabled={(this.state.selectedFile?false:true)||(this.state.wait?true:false)}>Upload</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style={{ display: this.state.msg ? 'block' : 'none' }}>\r\n                    <div class=\"offset-md-3 col-md-6\" style={{ marginTop: '50px' }}>\r\n                        <div class=\"alert alert-info alert-dismissible fade show\" role=\"alert\">\r\n                            <strong>{this.state.msg}</strong>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style={{ marginTop: '50px' }}>\r\n                    <div class=\"class=offset-md-3 col-md-6\">\r\n                        {\r\n                            this.state.wait&&(\r\n                                <h2>please wait......</h2>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style={{ marginTop: '50px' }}>\r\n                    <div class=\"class=offset-md-2 col-md-6\">\r\n                        <ul style={{listStyleType:'none'}}>\r\n                           {\r\n                               this.state.skip.length>0&&(\r\n                                   this.state.skip.map(i=>{\r\n                                       return <li>row:{i} not saved from file</li>\r\n                                   })\r\n                               )\r\n                           }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUpload\r\n\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { Helmet } from \"react-helmet\";\r\nclass PerspectiveDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Perspective: null,\r\n            Concept: null,\r\n            Author: null,\r\n            imgURL: null,\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        let data = await axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/detail/${id}`)\r\n        if (data.data.responseType == \"success\") {\r\n            console.log(data);\r\n            this.setState({\r\n                Perspective: data.data.data,\r\n                Concept: data.data.data.Concept,\r\n                Author: data.data.data.Author,\r\n                imgURL: data.data.img\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\" style={{ marginTop: '50px' }}>\r\n                {this.state.Perspective && this.state.Concept && this.state.Author &&\r\n                    <React.Fragment>\r\n                        <Helmet>\r\n                            <meta property=\"og:url\" content={`http://conceptionary-frontend.s3-website.us-east-2.amazonaws.com/perspective/${this.state.Perspective.id}`} />\r\n                            <meta property=\"og:type\" content=\"website\" />\r\n                            <meta property=\"fb:app_id\" content=\"930857800581355\" />\r\n                            <meta property=\"og:title\" content={this.state.Concept.name.charAt(0).toUpperCase() + this.state.Concept.name.slice(1)} />\r\n                            <meta property=\"og:description\" content={this.state.Perspective.description} />\r\n                            <meta property=\"og:image\" content={this.state.imgURL} />\r\n                        </Helmet>\r\n                        <div>\r\n                            <img src={this.state.imgURL} style={{ width: '200px', height: '200px' }} alt={this.state.Author.lastName}></img>\r\n                            <h3>{this.state.Concept.name}</h3>\r\n                            <hr></hr>\r\n                            <p><b>{this.state.Concept.name}</b> {this.state.Perspective.description}</p>\r\n                            <h5>{this.state.Author.firstName + \" \" + this.state.Author.lastName}</h5>\r\n                        </div>\r\n                    </React.Fragment>\r\n                }\r\n                {/* <Helmet>\r\n                    <meta property=\"og:url\" content={`http://conceptionary-frontend.s3-website.us-east-2.amazonaws.com/perspective/${this.state.Perspective.id}`} />\r\n                    <meta property=\"og:type\" content=\"website\" />\r\n                    <meta property=\"fb:app_id\" content=\"930857800581355\" />\r\n                    <meta property=\"og:title\" content={this.state.Concept.name} />\r\n                    <meta property=\"og:description\" content={this.state.Perspective.description} />\r\n                    <meta property=\"og:image\" content=\"https://www.recordedbooks.com/RBDigital/media/site/new%20stuff/Authors%20600%20X%20600/Authors_Stephen-King_600x600_1.jpg?ext=.jpg\" />\r\n                </Helmet>\r\n                <div>\r\n                    <img alt=\"\" src=\"https://www.recordedbooks.com/RBDigital/media/site/new%20stuff/Authors%20600%20X%20600/Authors_Stephen-King_600x600_1.jpg?ext=.jpg\" style={{ width: '200px', height: '200px' }}></img>\r\n                    <h3>{this.state.Concept.name}</h3>\r\n                    <hr></hr>\r\n                    <p><b>{this.state.Concept.name}</b> {this.state.Perspective.description}</p>\r\n                    <h5>{this.state.Author.firstName + \" \" + this.state.Author.lastName}</h5>\r\n                    <p>conceptionary site</p>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PerspectiveDetail","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Router, Route, Link, Switch, Redirect } from 'react-router-dom';\r\nimport ConceptsPage from \"./components/ConceptsPage/ConceptsPage\";\r\nimport ConceptClustersPage from \"./components/ConceptClustersPage/ConceptClustersPage\";\r\nimport Message from \"./components/Messages/Message\";\r\nimport AuthorCluster from \"./components/AutherCluster/AutherCluster\";\r\nimport AuthorPage from \"./components/AuthorPage/AutherPage\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Signup from \"./components/Signup/Signup\";\r\nimport TopNavBar from \"./components/TopNavBar/TopNavBar\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport FileUpload from './components/FileUpload/FileUpload';\r\nimport PerspectiveDetail from './components/perspectiveDetail/perspective';\r\nimport { connect } from 'react-redux';\r\nimport { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory()\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuthenticated: false,\r\n      user: this.props.auth.user,\r\n    }\r\n  }\r\n  render() {\r\n    const { isAuthenticated } = this.props.auth;\r\n    // const { id, username, email } = this.props.auth.user;\r\n    const PrivateRoute = ({ component: Component, ...rest }) => {\r\n      // console.log(\"...Rest\", rest);\r\n      return <Route {...rest} render={(props) => {\r\n        // console.log(\"Props in Private Route\", props);\r\n        return isAuthenticated === true ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }} />\r\n    };\r\n    return (\r\n       <Router history={history}>\r\n        <div>\r\n          <TopNavBar />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/signup\" exact component={Signup} />\r\n            <Route path=\"/concepts\" exact component={ConceptsPage} />\r\n            <Route path=\"/concepts/:name\" exact component={ConceptsPage} />\r\n            <Route path=\"/concept-clusters\" exact component={ConceptClustersPage} />\r\n            <Route path=\"/concept-clusters/:name\" exact component={ConceptClustersPage} />\r\n            <Route path=\"/authors\" exact component={AuthorPage} />\r\n            <Route path=\"/authors/:name\" exact component={AuthorPage} />\r\n            <Route path=\"/author-clusters\" exact component={AuthorCluster} />\r\n            <Route path=\"/author-groups\" exact component={AuthorCluster} />\r\n            <Route path=\"/author-groups/:name\" exact component={AuthorCluster} />\r\n            <Route path=\"/author-clusters/:name\" exact component={AuthorCluster} />\r\n            <Route path=\"/Message\" exact component={Message} />\r\n            <Route path=\"/Fileupload\" exact component={FileUpload}/>\r\n            <Route path=\"/perspective/:id\" exact component={PerspectiveDetail}/>\r\n          </Switch>\r\n        </div>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\nfunction mapStatToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  }\r\n}\r\nexport default connect(mapStatToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS } from \"constants\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case \"SET_CURRENT_USER\":\r\n            return {\r\n                isAuthenticated: !isEmpty(action.user),\r\n                user: action.user,\r\n            }\r\n        case \"LOG_OUT\":\r\n            return {\r\n                isAuthenticated: false,\r\n                user: {}\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nconst initialState = {\r\n    // searchSuggestions: [],\r\n    tags: [],\r\n    selectedOption: \"\",\r\n    authorClusterSelectedOptions: \"\",\r\n    searchCategory: \"All\",\r\n    concepts: [],\r\n    authors: [],\r\n    conceptClusters: [],\r\n    authorClusters: [],\r\n    authorGroups: [],\r\n    loading: true,\r\n    userExist_admin: false,\r\n    loginStatus_admin: false,\r\n    loggedInUserAccount_admin: {},\r\n    loginRequestStatus_admin: true,\r\n    invalidLogin: false,\r\n    SIGNUP_SUCCESS: false,\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case \"GET_CONCEPTS_NAMES_NAVBAR\":\r\n            // console.log(\"GET_CONCEPTS_NAMES_NAVBAR\");\r\n            return {\r\n                ...state,\r\n                searchSuggestions: action.payload,\r\n            }\r\n        case \"SET_SEARCH_CATEGORY\":\r\n            // console.log(\"SET_SEARCH_CATEGORY \");\r\n            return {\r\n                ...state,\r\n                searchCategory: action.payload,\r\n            }\r\n        case \"SET_SELECTED_OPTION\":\r\n            // console.log(\"SET_SELECTED_OPTION\");\r\n            return {\r\n                ...state,\r\n                selectedOption: action.payload\r\n            }\r\n        case \"FLUSH_NAV_BAR\":\r\n            return {\r\n                ...state,\r\n                selectedOption: \"\",\r\n            }\r\n        case \"SET_AUTHOR_CLUSTER_SELECTED_OPTIONS\":\r\n            return {\r\n                ...state,\r\n                authorClusterSelectedOptions: action.payload,\r\n            }\r\n        case \"CONCEPTS_TRIMMED_FOR_NAVBAR\":\r\n            // console.log(action.payload);\r\n            // console.log(\"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\")\r\n            return {\r\n                ...state,\r\n                concepts: action.payload,\r\n            }\r\n        case \"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\":\r\n            // console.log(\"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\")\r\n            return {\r\n                ...state,\r\n                conceptClusters: action.payload,\r\n            }\r\n        case \"AUTHORS_TRIMMED_FOR_NAVBAR\":\r\n            // console.log(\"AUTHORS_TRIMMED_FOR_NAVBAR\")\r\n            return {\r\n                ...state,\r\n                authors: action.payload,\r\n            }\r\n        case \"AUTHOR_CLUSTERS_TRIMMED_FOR_NAVBAR\":\r\n            // console.log(\"AUTHOR_CLUSTERS_TRIMMED_FOR_NAVBAR\")\r\n            return {\r\n                ...state,\r\n                authorClusters: action.payload,\r\n            }\r\n\r\n        case \"AUTHOR_GROUPS_TRIMMED_FOR_NAVBAR\":\r\n            return {\r\n                ...state,\r\n                authorGroups: action.payload,\r\n            }\r\n\r\n        case \"LOGIN_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loginRequestStatus_admin: false,\r\n                invalidLogin: false,\r\n                loginStatus_admin: false\r\n\r\n            }\r\n\r\n        case \"LOGIN_SUCCESS\":\r\n            // return state;\r\n            return {\r\n                ...state,\r\n                userExist_admin: true,\r\n                loggedInUserAccount_admin: action.userInfo,\r\n                loginRequestStatus_admin: true,\r\n                loginStatus_admin: true,\r\n                invalidLogin: false\r\n\r\n            }\r\n\r\n        case \"LOGIN_FAILURE\":\r\n            return {\r\n                ...state,\r\n                loginRequestStatus_admin: true,\r\n                loginStatus_admin: false,\r\n                invalidLogin: true\r\n            }\r\n\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                loginStatus_admin: false,\r\n                loggedInUserAccount_admin: {},\r\n                loginRequestStatus_admin: false,\r\n                userExist_admin: false,\r\n            }\r\n        case \"SIGNUP_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                SIGNUP_SUCCESS: true\r\n            }\r\n        case \"ADD_TAG\": {\r\n            let tags = [...state.tags]\r\n            if(Array.isArray(action.payload)){\r\n                tags.push(...action.payload)\r\n            }else{\r\n                tags.push(action.payload)\r\n            }\r\n            return {\r\n                ...state,\r\n                tags: tags\r\n            }\r\n        }\r\n        case \"REMOVE_TAG\":\r\n            let tags = [...state.tags];\r\n            for (let i = 0; i < tags.length; i++) {\r\n                if (tags[i].id == action.payload) {\r\n                    tags.splice(i, 1);\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                tags: tags\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    listRelatedData: [],\r\n    loading: true,\r\n    apiLoading: false,\r\n    apiServerError: false,\r\n    apiNetworkError: false,\r\n    conceptWithDetails: {},\r\n    perspectiveIds: [],\r\n    perspectivesRelations: {},\r\n    perspectivesDetail: {},\r\n    authors: {},\r\n    concept: {},\r\n    keywordIds: [],\r\n    keywords: {},\r\n    isLike: false,\r\n    page_no: 0\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case 'SERVER_ERROR':\r\n            return {\r\n                apiServerError: true,\r\n            }\r\n        case 'NETWORK_ERROR':\r\n            return {\r\n                apiNetworkError: true,\r\n            }\r\n        case 'REQUEST_STARTED':\r\n            return {\r\n                apiLoading: true,\r\n            }\r\n        case 'REQUEST_SUCCESSFUL':\r\n            return {\r\n                ...state,\r\n                conceptWithDetails: action.payload,\r\n                apiLoading: false,\r\n                apiServerError: false,\r\n                apiNetworkError: false,\r\n            }\r\n        case 'SET_CONCEPT_DETAILS': {\r\n            return {\r\n                ...state,\r\n                perspectivesRelations: action.payload.perspectivesRelations,\r\n                authors: action.payload.authors,\r\n                concept: action.payload.concepts,\r\n                keywords: action.payload.keywords,\r\n                perspectivesDetail: action.payload.perspectivesDetail\r\n            }\r\n        }\r\n        case 'SET_DETAILED_PERSPECTIVE': {\r\n            let perspectives = [...state.perspectivesDetail, ...action.payload];\r\n            return {\r\n                ...state,\r\n                perspectivesDetail: perspectives\r\n            }\r\n        }\r\n        case 'SET_PAGE_NO': {\r\n            return {\r\n                ...state,\r\n                page_no: action.payload\r\n            }\r\n        }\r\n        case 'setPerspectiveIds': {\r\n            return {\r\n                ...state,\r\n                perspectiveIds: action.payload\r\n            }\r\n        }\r\n        case 'sortByAuthorLast': {\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload\r\n            }\r\n        }\r\n        case 'sortByKeyword': {\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload.sortBy,\r\n                sortByKeywordId: action.payload.sortByKeywordId,\r\n                all: action.payload.all\r\n\r\n            }\r\n        }\r\n        case 'SHOW_ALL_PERSPECTIVE': {\r\n            return {\r\n                ...state,\r\n                all: action.payload\r\n            }\r\n        }\r\n        case 'SET_PERSPECTIVE_LIKE': {\r\n            let perspectives = state.perspectives;\r\n            perspectives[action.payload.id].loves = action.payload.loves;\r\n            perspectives[action.payload.id].isLike = action.payload.isLike;\r\n            return {\r\n                ...state,\r\n                perspectives: perspectives\r\n            }\r\n        }\r\n        case 'SET_IS_LIKE': {\r\n            return {\r\n                ...state,\r\n                isLike: action.payload\r\n            }\r\n        }\r\n\r\n        // case \"GET_CONCEPT_DETAILS\":\r\n        //     // console.log(\"Dispatch Called!\");\r\n        //     return {\r\n        //         ...state,\r\n        //         conceptsWithDetails: [...action.payload]\r\n        //     }\r\n        // case \"GET_CONCEPT_KEYWORDS\":\r\n        //     return {\r\n        //         ...state,\r\n        //         keywords: [...action.payload],\r\n        //     }\r\n        // case \"GET_CONCEPT_PERSPECTIVEIDS\":\r\n        //     return {\r\n        //         ...state,\r\n        //         perspectiveids: [...action.payload]\r\n        //     }\r\n        // case \"REFRESH_CONCEPT_PAGE\":\r\n        //     return {\r\n        //         ...state,\r\n\r\n        //     }\r\n        // case 'FLUSH_CONCEPT':\r\n        //     return {\r\n        //         loading: true\r\n        //     }\r\n        case 'GET_LIST_RELATED':\r\n            return {\r\n                ...state,\r\n                listRelatedData: action.payload,\r\n            }\r\n        // case 'LOADING_FALSE':\r\n        //     console.log(\"Loading False\")\r\n        //     return {\r\n        //         ...state,\r\n        //         loading: false\r\n        //     }\r\n        // case 'LOADING_TRUE':\r\n        //     console.log(\"Loaing True\")\r\n        //     return {\r\n        //         loading: true,\r\n        //     }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    conceptClustersWithDetails: [],\r\n    conceptClusterConceptsDiscrete: [],\r\n    authors:{},\r\n    concepts:{},\r\n    perspective:{},\r\n    keywords:{},\r\n    conceptCluster:{},\r\n    authorClicked: false,\r\n    conceptClicked: true,\r\n    loading: true,\r\n    apiLoading: false,\r\n    apiServerError: false,\r\n    apiNetworkError: false,\r\n    conceptClusterWithDetails: {}\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case 'CONCEPT_CLUSTER_DETAIL':{\r\n            let conceptCluster=action.payload.conceptCluster[Object.keys(action.payload.conceptCluster)[0]]\r\n            return{\r\n                ...state,\r\n                authors:action.payload.authors,\r\n                concepts:action.payload.concepts,\r\n                perspective:action.payload.perspectives,\r\n                conceptCluster:conceptCluster,\r\n                keywords:action.payload.keywords\r\n            }\r\n        }\r\n        case 'CLICKED_STATE':{\r\n            return{\r\n                ...state,\r\n                authorClicked:action.payload.authorClicked,\r\n                conceptClicked:action.payload.conceptClicked\r\n            }\r\n        }\r\n        case 'CONCEPT_CLUSTER_PERSPECTIVE_LIKE':{\r\n            let perspectives = state.perspective;\r\n            perspectives[action.payload.id].loves = action.payload.loves;\r\n            perspectives[action.payload.id].isLike = action.payload.isLike;\r\n            return{\r\n                ...state,\r\n                perspective: perspectives\r\n            }\r\n        }\r\n        case 'SERVER_ERROR':\r\n            return {\r\n                apiServerError: true,\r\n            }\r\n        case 'NETWORK_ERROR':\r\n            return {\r\n                apiNetworkError: true,\r\n            }\r\n        case 'REQUEST_STARTED':\r\n            return {\r\n                apiLoading: true,\r\n            }\r\n        case 'REQUEST_SUCCESSFUL':\r\n            return {\r\n                ...state,\r\n                conceptClusterWithDetails: action.payload,\r\n                apiLoading: false,\r\n                apiServerError: false,\r\n                apiNetworkError: false,\r\n            }\r\n        case \"GET_CONCEPT_CLUSTER_DETAILS\":\r\n            // console.log(\"Dispatch Called!\");\r\n            return {\r\n                ...state,\r\n                conceptClustersWithDetails: [...action.payload]\r\n            }\r\n        case \"GET_CONCEPT_CLUSTER_CONCEPTS_DISCRETE\":\r\n            return {\r\n                ...state,\r\n                conceptClusterConceptsDiscrete: [...action.payload],\r\n            }\r\n        case 'FLUSH_CONCEPT_CLUSTER':\r\n            return {\r\n                loading: true,\r\n            }\r\n        // case \"GET_CONCEPT_PERSPECTIVEIDS\":\r\n        //     return {\r\n        //         ...state,\r\n        //         perspectiveids: [...action.payload]\r\n        //     }\r\n        case \"LOADING_FALSE\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { stat } from \"fs\";\r\n\r\nconst initialState = {\r\n    authorsWithDetails: {},\r\n    authorBioHeadings: {},\r\n    authorBooks: {},\r\n    authorPerspectives:{},\r\n    authorGroups:{},\r\n    concepts:{},\r\n    author:{},\r\n    apiLoading: false,\r\n    apiServerError: false,\r\n    apiNetworkError: false,\r\n    author_authors_apiLoading: false,\r\n    author_authors_apiServerError: false,\r\n    author_authors_apiNetworkError: false,\r\n    author_authors: {\r\n    AuthorInfluenceAuthors: [],\r\n    AuthorConvoAuthors: [],\r\n    }\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case 'AUTHOR_DETAILS':{\r\n            let author=action.payload.authors[Object.keys(action.payload.authors)[0]]\r\n            return{\r\n                ...state,\r\n                authorPerspectives:action.payload.perspectives,\r\n                authorBioHeadings:action.payload.AuthorBioHeadings,\r\n                authorGroups:action.payload.AuthorGroups,\r\n                author:author,\r\n                concepts:action.payload.concepts,\r\n                authorBooks:action.payload.books\r\n            }\r\n        }\r\n        case 'AUTHOR_PERSPECTIVE_LIKE':{\r\n            let perspectives = state.authorPerspectives;\r\n            perspectives[action.payload.id].loves = action.payload.loves;\r\n            perspectives[action.payload.id].isLike = action.payload.isLike;\r\n            return{\r\n                ...state,\r\n                authorPerspectives: perspectives\r\n            }\r\n        }\r\n        case 'SERVER_ERROR':\r\n            return {\r\n                ...state,\r\n                apiServerError: true,\r\n            }\r\n        case 'NETWORK_ERROR':\r\n            return {\r\n                ...state,\r\n                apiNetworkError: true,\r\n            }\r\n        case 'REQUEST_STARTED':\r\n            return {\r\n                ...state,\r\n                apiLoading: true,\r\n            }\r\n        case \"GET_AUTHOR_DETAILS\":\r\n            return {\r\n                ...state,\r\n                authorsWithDetails: action.payload,\r\n                apiLoading: false,\r\n                apiServerError: false,\r\n                apiNetworkError: false,\r\n            }\r\n        case \"GET_AUTHOR_AUTHORS_PENDING\":\r\n            return {\r\n                ...state,\r\n                author_authors_apiLoading: true,\r\n            }\r\n        case 'GET_AUTHOR_AUTHORS_SUCCESS':\r\n            // console.log('reducer get author success')\r\n            return {\r\n                ...state,\r\n                author_authors_apiLoading: false,\r\n                author_authors_apiServerError: false,\r\n                author_authors_apiNetworkError: false,\r\n                author_authors: action.payload\r\n            }\r\n        case 'GET_AUTHOR_AUTHORS_SERVER_ERROR':\r\n            return {\r\n                ...state,\r\n                author_authors_apiServerError: true,\r\n                author_authors_apiLoading: false,\r\n            }\r\n        case 'GET_AUTHOR_AUTHORS_NETWORK_ERROR':\r\n            return {\r\n                ...state,\r\n                author_authors_apiNetworkrError: true,\r\n                author_authors_apiLoading: false,\r\n            }\r\n        case \"GET_AUTHOR_BIO\":\r\n            // console.log(\"Get AuthorBio dispatch called in reducer catching\");\r\n            return {\r\n                ...state,\r\n                authorBioData: [...action.payload]\r\n            }\r\n        case \"GET_AUTHOR_BOOKS\":\r\n            // console.log(\"Get AuthorBooks dispatch called in reducer catching\");\r\n            return {\r\n                ...state,\r\n                authorBooks: [...action.payload]\r\n            }\r\n        case 'GET_AUTHOR_INFLUENCED_BY_AUTHORS':\r\n            return {\r\n                ...state,\r\n                authorInfluencedByAuthors: [...action.payload]\r\n            }\r\n        case 'GET_AUTHOR_INFLUENCED_ON_AUTHORS':\r\n            return {\r\n                ...state,\r\n                authorInfluencedOnAuthors: [...action.payload]\r\n            }\r\n        case 'GET_AUTHOR_CONVO_WITH_AUTHORS':\r\n            return {\r\n                ...state,\r\n                authorConvoWithAuthors: [...action.payload]\r\n            }\r\n        case 'FLUSH_AUTHOR':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case 'LOADING_FALSE':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    keywordsForPerspectiveId: [],\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case \"GET_SINGLE_CONCEPT_KEYWORDS\":\r\n            return {\r\n                ...state,\r\n                keywordsForPerspectiveId: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    authorClustersWithDetails: [],\r\n    authorClusterConceptsDiscrete: [],\r\n    authorCluster: {},\r\n    perspectives: [],\r\n    authorClicked: false,\r\n    conceptClicked: true,\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case 'CLICKED_STATE': {\r\n            return {\r\n                ...state,\r\n                authorClicked: action.payload.authorClicked,\r\n                conceptClicked: action.payload.conceptClicked\r\n            }\r\n        }\r\n        case 'AUTHOR_CLUSTER_PERSPECTIVE_LIKE': {\r\n            let perspectives = state.authorCluster;\r\n            perspectives[action.payload.id].loves = action.payload.loves;\r\n            perspectives[action.payload.id].isLike = action.payload.isLike;\r\n            return {\r\n                ...state,\r\n                authorCluster: perspectives\r\n            }\r\n        }\r\n        case \"GET_AUTHOR_CLUSTER_DETAILS\":\r\n            return {\r\n                ...state,\r\n                authorClustersWithDetails: [...action.payload.data],\r\n                authorCluster: action.payload.entities.authorCluster,\r\n                perspectives: [...action.payload.result]\r\n            }\r\n        case \"GET_AUTHOR_CLUSTER_CONCEPTS_DISCRETE\":\r\n            return {\r\n                ...state,\r\n                authorClusterConceptsDiscrete: [...action.payload],\r\n            }\r\n\r\n        case 'FLUSH_AUTHOR_CLUSTER':\r\n            return {\r\n\r\n            }\r\n        case \"GET_CONCEPT_PERSPECTIVEIDS\":\r\n            return {\r\n                ...state,\r\n                perspectiveids: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from \"./auth\";\r\nimport navbar from \"./navbar\";\r\nimport concepts from \"./concepts\";\r\nimport conceptClusters from \"./conceptClusters\";\r\nimport author from \"./author\";\r\nimport keyword from './keyword';\r\nimport autherCluster from \"./autherCluster\";\r\nexport default combineReducers({\r\n    auth,\r\n    concepts,\r\n    navbar,\r\n    keyword,\r\n    author,\r\n    conceptClusters,\r\n    autherCluster,\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport setAuthorizationToken from \"./utils/setAuthorizationToken\";\r\nimport combineReducers from \"./reducers\";\r\nimport { setCurrentUser } from './actions/loginActions';\r\nimport jwt from \"jsonwebtoken\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n//import { PersistGate } from 'redux-persist/integration/react';\r\n//import configureStore from './store/configureStore';\r\n//const {store,persistor}=configureStore();\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(combineReducers, composeEnhancers(applyMiddleware(thunk)));\r\nif (localStorage.jwtToken) {\r\n    setAuthorizationToken(localStorage.jwtToken);\r\n    store.dispatch(setCurrentUser(jwt.decode(localStorage.jwtToken)));\r\n}\r\n\r\n\r\n\r\nReactDOM.render(<Provider store={store}>\r\n    <Router>\r\n    {/*<PersistGate loading={null} persistor={persistor}>*/}\r\n        <App />\r\n   {/* </PersistGate>*/}\r\n    </Router>\r\n</Provider>, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}