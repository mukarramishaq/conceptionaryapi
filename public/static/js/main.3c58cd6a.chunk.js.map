{"version":3,"sources":["images/conceptionary.svg","components/AdComponent/AdComponent.js","schema/conceptSchema.js","actions/conceptsActions.js","actions/navbaractions.js","utilities/index.js","components/SocialShareButtons/ShareButtons.js","components/SocialShareButtons/TwitterSharedButton.js","components/ConceptsPage/Context/Context.js","utils/keywordsSorterFunction.js","utils/conceptsSorterFunction.js","selectors/index.js","components/ConceptsPage/ConceptsPage.js","schema/conceptClusterSchema.js","actions/conceptClustersActions.js","components/ConceptClustersPage/Context.js","components/ConceptClustersPage/ConceptClustersPage.js","components/Messages/Message.js","schema/authorClusterSchema.js","actions/autherCluster.js","components/AutherCluster/AutherCluster.js","schema/authorSchema.js","actions/authorActions.js","components/AuthorPage/AutherPage.js","utils/setAuthorizationToken.js","actions/loginActions.js","components/Login/Login.js","helpers/validateLogin.js","actions/signupActions.js","helpers/validateSignup.js","components/Signup/Signup.js","components/TopNavBar/TopNavBar.js","components/HomePage/HomePage.js","components/FileUpload/FileUpload.js","components/perspectiveDetail/perspective.js","App.js","serviceWorker.js","reducers/auth.js","reducers/navbar.js","reducers/concepts.js","reducers/conceptClusters.js","reducers/author.js","reducers/keyword.js","reducers/autherCluster.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","AdsComponent","react_default","a","createElement","class","style","display","textAlign","data-ad-format","data-ad-layout","data-ad-client","data-ad-slot","React","Component","author","schema","Entity","keyword","perspective","Author","Keywords","conceptSchema","Perspectives","axios","require","flushConceptState","dispatch","type","getAllPerspectivesByConcept","conceptId","get","concat","process","then","data","responseType","payload","perspectives","getConceptPerspectivesByKeywords","keywordId","getConceptPerspectivesByAuthor","author_lastName","catch","err","console","log","increasePerspectiveLike","id","like","post","res","isLike","decreasePerspectiveLike","sortByAuthorLast","sortBy","showAllPerspective","value","sortByKeyword","getConceptFromApi","concept","obj","Conceptobj","conceptDetailsFromApi","perspectivesRelations","normalizedData","normalize","entities","perspectivesDetail","concepts","result","error","getListRelatedByConceptId","listRelatedData","ConceptClusters","flushState","setAutherClusterSelectedItems","selectedItems","setSelectedItem","selectedItem","setSelectedCategory","selectedCategory","addTag","tag","removeTag","getAuthorGroups","name","callback","length","results","i","label","toLowerCase","startsWith","push","login","account","username","Email","password","Password","headers","Content-Type","accept","response","JSON","parse","stringify","success","userInfo","user","e","logout","signup","Username","email","temp","filters","filterobj","Promise","resolve","reject","Axios","ShareButtons","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","link","react_facebook_lib","appId","href","_ref","handleClick","onClick","Context","_this","state","visibility","_this2","_this$props","authors","keywords","lastName","className","marginTop","backgroundColor","padding","border","borderRadius","fontSize","pronoun","selectedOption","description","onAuthorClick","author_first","firstName","author_last","born","dob","died","dod","auth_id","color","cursor","aria-hidden","onLikeClick","loves","setState","longDescription","citation","map","k","SocialShareButtons_ShareButtons","keywordsSorter","b","conceptsSorter","getUniqueKeywords","perspectivesRelaions","perspectiveIds","uniqueKeysWords","uniqueKeywordNamesOnly","forEach","count","includes","sort","keywordSorterFunction","getUniqueSortedAuthors","perspectiveids","uniqueAuthorWithDetails","uniqueAuthorNames","indexOf","authorALastName","toUpperCase","authorBLastName","getUniqueConcept","authorPerspectives","uniqueConcecptObjects","helperUniqueIds","element","ConceptId","object","discrete_author_name_id","discrete_author_name","textA","textB","getSortedPerspectivesByConceptName","tempPerspectives","conceptNameA","Concept","conceptNameB","getUniqueAuthorBooks","books","authorBooks","Books","bookids","uniqueBookNameWithId","uniqueBookIds","bookid","discrete_book_id","title","getAuthorBioData","authorGroups","authorBioHeadings","AuthorGroups","uniqueBioHeadings","AuthorBioHeading","heading","values","getUniqueSortedConceptsFromConceptCluster","conceptCluster","conceptClusters","Concepts","uniqueConceptNames","sortedUniqueConcepts","getPerspectivesFromConceptCluster","authorClicked","conceptClicked","apply","toConsumableArray","perspectiveId","ConceptName","authorA","authorB","getUniqueAuthorsFromConceptCluster","conceptids","uniqueAuthors","perspecid","AuthorId","getUniqueSortedConceptNameFromAuthorCluster","autherCluster","authorCluster","uniqueConcepts","conceptid","conceptName","getDynamicSortedAuthorClusterWithDetails","copyAuthorClusterWithDetails","authorLastName","getSortedAuthorClusterWithDetailsByAuthorLast","clustersWithDetails","authorClustersWithDetails","ConceptsPage","getConcept","concept_name","query","apiLoading","apiServerError","apiNetworkError","conceptWithDetails","listRelatedLoading","listRelatedServerError","listRelatedNetworkError","navbar","filteredPerspectives","getFilteredPerspectives","UniqueKeywords","uniqueKeyWords","UniqueAuthors","authorId","all","sortByAuthor","filterConceptDefinations","bind","assertThisInitialized","onListClick","onListRelatedClick","onRelatedClick","toggleListRelated","category","concept_id","tags","listRelated","relationary_supra","relationary_thing_supra_id","match","params","queryString","location","search","queryFilters","author_group","history","nextProps","conceptsWithDetails","orignalConceptsWithDetails","loading","listRelatedRole","keyword_id","rtn","keywords_id","nonFilteredPerspectives","sortByKeywordId","_this3","overflow","width","margin","react_loading_default","textTransform","height","background","marginBottom","paddingLeft","marginLeft","marginRight","returnOnlyListData","returnOnlyRelationData","textDecoration","fontWeight","borderBottom","zIndex","paddingTop","ConceptsPage_Context_Context","borderLeft","borderRight","borderTop","AdComponent","listData","withRouter","connect","bindActionCreators","conceptClusterSchema","flushConceptClusterState","setClickedState","getConceptClusterFromApi","ConceptClustersPage","sortedConcepts","sortedPerspectives","cluster","groupIds","group","getConceptCluster","Redirect","to","undefined","ConceptClustersPage_Context","Message","authorClusterSchema","flushAuthorClusterState","getAuthorCluster","via","asyncToGenerator","regenerator_default","mark","_callee","rej","result1","wrap","_context","prev","next","sent","t0","stop","_x","_x2","arguments","getAuthorClusterHelper","AutherCluster","sortedConceptsNames","dynamicSortedAuthorCluster","sortedAuthorClusterDetail","authorGroup","url","pathname","split","getAuthorGroupByName","getAutherCluster","arr","authorFirstName","long_description","authorBioHeading","book","authorSchema","flushAuthorState","getAuthorInfluencedByAuthors","author_authors_details","getAuthorDetails","authorDetailsFromApi","join","author_firstName","author_image","pictureLink","getPictureLinks","AuthorPage","getAuthor","author_authors","authorInfluencedByAuthors","authorInfluencedOnAuthors","AuthorInfluenceAuthors","authorConvoWithAuthors","AuthorConvoAuthors","showBooks","sortedAuthorInfluencedByAuthors","setInitialsortedAuthorInfluencedByAuthors","sortedAuthorInfluencedOnAuthors","setInitialsortedAuthorInfluencedOnAuthors","sortedAuthorConvoWithAuthors","setInitialsortedAuthorConvoWithAuthors","index","index1","index2","UniqueConcepts","uniqueconcepts","sortedperpectives","authorBio","authorBooksById","getSortedAuthorInfluencedByAuthors","reverse","forward","reverse1","forward1","reverse2","forward2","onConceptClick","onBioClick","x","author_authors_apiLoading","author_authors_apiServerError","author_authors_apiNetworkError","bio","distinct_grouping","distinct_grouping_id","rtnArray","slice","getSortedAuthorInfluencedOnAuthors","getSortedAuthorConvoWithAuthors","totalLength","src","alt","objectFit","item","charAt","v","Link","maxHeight","minHeight","textOverflow","whiteSpace","BookDescriptions","bookDescription","source","setAuthorizationToken","token","defaults","common","setCurrentUser","userLoginRequest","userData","Access-Control-Allow-Origin","localStorage","setItem","jwt","decode","Login","errors","isLoading","onChange","onSubmit","defineProperty","target","_validateLogin","loginData","validator","isEmpty","isValid","validateLogin","preventDefault","_this$state","form","classnames","has-error","placeholder","disabled","userSignupRequest","Signup","firstname","lastname","_validateSignup","signupData","isEmail","validateSignup","fname","lname","body","server","TopNavBar","Joi","string","required","allow","toggleModalOpen","prevState","modalOpen","toggleModalSignupOpen","modalSignupOpen","validate","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","details","Symbol","iterator","done","path","message","return","handleLoginChange","input","currentTarget","errorMessage","validateProperty","objectSpread","handleSubmit","isSignup","loginStatus_admin","onTagsChanged","searchCategory","suggestions","onInputChanged","handleDelete","splice","handleAddition","toString","loadTags","cb","loadSuggestions","tagsObject","labels","handleChange","handleTagChange","selectedTag","renderRedirect","seletedSearch","authorClusterSelectedOptions","authorClusters","dropdownData","labelsArray","loadOptionsData","loginRequestStatus_admin","userAccount","loadOptions","onSelectedCatagoryChange","searchAllConceptionary","inputValue","shuffle","alert","_this4","_this5","_this6","_this7","_this8","_this9","searchConcepts","searchConceptClusters","searchAuthorGroups","searchAuthors","searchAuthorClusters","searchAuthorGroupsNav","SIGNUP_SUCCESS","invalidLogin","window","pushState","_this10","reactstrap_es","getBackgroudColor","page","light","expand","toggle","isOpen","selected","Async_default","styles","colourStyles","isDisabled","Fragment","loggedInUserAccount_admin","index_es","open","onClose","center","boxShadow","react_loader_spinner_default","data-dismiss","aria-label","dot","alignItems",":before","content","control","option","_ref2","isFocused","isSelected","chroma","alpha","css","contrast","singleValue","_ref3","userExist_admin","HomePage","conceptionary_svg","FileUpload","selectedFile","msg","skip","wait","onChangeHandler","onClickHandler","event","files","FormData","append","multiple","role","listStyleType","PerspectiveDetail","Perspective","Helmet","property","createBrowserHistory","App","isAuthenticated","auth","Router","components_TopNavBar_TopNavBar","Switch","Route","exact","component","AuthorCluster","Boolean","hostname","initialState","keywordIds","conceptClustersWithDetails","conceptClusterConceptsDiscrete","conceptClusterWithDetails","authorsWithDetails","keywordsForPerspectiveId","authorClusterConceptsDiscrete","combineReducers","action","searchSuggestions","Array","isArray","keys","AuthorBioHeadings","author_authors_apiNetworkrError","authorBioData","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","jwtToken","ReactDOM","render","es","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uvBCgBzBC,mLAZP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,cAEXC,MAAO,CAACC,QAAQ,QAASC,UAAU,UACnCC,iBAAe,QACfC,iBAAe,aACfC,iBAAe,0BACfC,eAAa,sBATEC,IAAMC,mBCD3BC,EAAO,IAAIC,IAAOC,OAAO,WACzBC,EAAQ,IAAIF,IAAOC,OAAO,YAC1BE,EAAY,IAAIH,IAAOC,OAAO,uBAAuB,CACvDG,OAAOL,EACPM,SAAS,CAACH,KAEDI,EAAc,IAAIN,IAAOC,OAAO,WAAW,CACpDM,aAAa,CAACJ,KCNZK,EAAQC,EAAQ,GACf,SAASC,IACZ,OAAO,SAAAC,GACHA,EAAS,CACLC,KAAM,mBAIX,SAASC,EAA4BC,GACxC,OAAO,SAAAH,GACHH,EAAMO,IAAN,GAAAC,OAAaC,yBAAb,sCAAAD,OAA8EF,IACxEI,KAAK,SAAAC,GAEU,WADIA,EAAKA,KAAnBC,cAEHT,EAAS,CACLC,KAAK,2BACLS,QAAQF,EAAKA,KAAKG,kBAM/B,SAASC,EAAiCC,GAC7C,OAAO,SAAAb,GACHH,EAAMO,IAAN,GAAAC,OAAaC,yBAAb,sCAAAD,OAA8EQ,IAC7EN,KAAK,SAAAC,GAEe,WADIA,EAAKA,KAAnBC,cAEHT,EAAS,CACLC,KAAK,2BACLS,QAAQF,EAAKA,KAAKA,KAAKZ,kBAOpC,SAASkB,EAA+BC,GAC3C,OAAO,SAAAf,GACHH,EAAMO,IAAN,GAAAC,OAAaC,yBAAb,qCAAAD,OAA6EU,IAC5ER,KAAK,SAAAC,GAEe,WADIA,EAAKA,KAAnBC,cAEHT,EAAS,CACLC,KAAK,2BACLS,QAAQF,EAAKA,KAAKG,iBAK7BK,MAAM,SAAAC,GACHC,QAAQC,IAAIF,MAIjB,SAASG,EAAwBC,GACpC,IAAIC,EAAO,CACXA,KAAY,YAEZ,OADAA,EAAKD,GAAKA,EACH,SAAArB,GACHH,EAAM0B,KAAN,GAAAlB,OAAcC,yBAAd,iCAA2E,CAAEgB,SACxEf,KAAK,SAAAiB,GACFA,EAAIhB,KAAKhB,YAAYiC,QAAS,EAC9BzB,EAAS,CACLC,KAAM,uBACNS,QAASc,EAAIhB,KAAKhB,iBAK/B,SAASkC,EAAwBL,GACpC,IAAIC,EAAO,CACXA,KAAY,YAEZ,OADAA,EAAKD,GAAKA,EACH,SAAArB,GACHH,EAAM0B,KAAN,GAAAlB,OAAcC,yBAAd,iCAA2E,CAAEgB,SACxEf,KAAK,SAAAiB,GACFA,EAAIhB,KAAKhB,YAAYiC,QAAS,EAC9BzB,EAAS,CACLC,KAAM,uBACNS,QAASc,EAAIhB,KAAKhB,iBAK/B,SAASmC,EAAiBC,GAC7B,OAAO,SAAA5B,GACHA,EAAS,CACLC,KAAM,mBACNS,QAASkB,KAId,SAASC,EAAmBC,GAC/B,OAAO,SAAA9B,GACHA,EAAS,CACLC,KAAM,uBACNS,QAASoB,KAId,SAASC,EAAcxC,GAC1B,OAAO,SAAAS,GACHA,EAAS,CACLC,KAAM,gBACNS,QAASnB,KAId,SAASyC,EAAkBC,GAC9B,IAAIC,EAAM,GAEV,OADAA,EAAIC,WAAaF,EACV,SAAAjC,GACHA,EAAS,CACLC,KAAM,oBAEVJ,EAAM0B,KAAN,GAAAlB,OAAcC,yBAAd,mDAA6F4B,GAAK3B,KAAK,SAAAC,GAEnG,GAAoB,WADKA,EAAKA,KAAtBC,aACuB,CAC3B,IAAM2B,EAAwB5B,EAAKA,KAAKZ,aAAayC,sBAC/CC,EAAiBC,YAAUH,EAAuBzC,GACxD2C,EAAeE,SAASC,mBAAqBjC,EAAKA,KAAKZ,aAAa6C,mBACpEzC,EAAS,CACLC,KAAM,qBACNS,QAAS0B,IAEbpC,EAAS,CACLC,KAAM,oBACNS,QAAS4B,EAAeE,SAASE,SAASJ,EAAeK,QAAQ/C,eAErEI,EAAS,CACLC,KAAM,sBACNS,QAAS4B,EAAeE,gBAI5BxC,EAAS,CACLC,KAAM,mBAGfe,MAAM,SAAA4B,GACL5C,EAAS,CACLC,KAAM,kBAEViB,QAAQC,IAAI,gDAAiDyB,MAIlE,SAASC,EAA0BZ,GACtC,IAAIC,EAAM,GAEV,OADAA,EAAIC,WAAaF,EACV,SAAAjC,GACHA,EAAS,CACLC,KAAM,yBAEVJ,EAAM0B,KAAN,GAAAlB,OAAcC,yBAAd,oJAA8L4B,GACzL3B,KAAK,SAAAC,GAEF,GAAoB,WADKA,EAAKA,KAAtBC,aACuB,CAC3B,IAAIqC,EAAkBtC,EAAKA,KAAKA,KAChCsC,EAAkBA,EAAgBC,gBAClC/C,EAAS,CACLC,KAAM,mBACNS,QAASoC,SAIb9C,EAAS,CACLC,KAAM,gCAGfe,MAAM,SAAA4B,GACL5C,EAAS,CACLC,KAAM,+BAEViB,QAAQC,IAAI,wCAAyCyB,MCjLrE,IAAM/C,EAAQC,EAAQ,GACRA,EAAQ,KAQf,SAASkD,IACZ,OAAO,SAAAhD,GACHA,EAAS,CACLC,KAAM,mBAIX,SAASgD,EAA8BC,GAC1C,OAAO,SAAAlD,GACHA,EAAS,CACLC,KAAM,sCACNS,QAASwC,KAId,SAASC,EAAgBC,GAE5B,OAAO,SAAApD,GACHA,EAAS,CACLC,KAAM,sBACNS,QAAS0C,KAId,SAASC,EAAoBC,GAEhC,OAAO,SAAAtD,GACHA,EAAS,CACLC,KAAM,sBACNS,QAAS4C,KAId,SAASC,EAAOC,GACnB,OAAO,SAAAxD,GACHA,EAAS,CACLC,KAAM,UACNS,QAAS8C,KAId,SAASC,EAAUpC,GACtB,OAAO,SAAArB,GACHA,EAAS,CACLC,KAAM,aACNS,QAASW,KAuWd,SAASqC,EAAgBC,EAAMnD,EAAMoD,GAIxC,GAFA1C,QAAQC,IAAIX,GAERmD,EAEA,GAAInD,EAAKqD,OAAS,EAAG,CAEjB,IADA,IAAIC,EAAU,GACLC,EAAI,EAAGA,EAAIvD,EAAKqD,OAAQE,IAC7B,GAAIvD,EAAKuD,GAAGC,MAAMC,cAAcC,WAAWP,EAAKM,eAAgB,CAC5D,KAAIH,EAAQD,OAAS,GAIjB,MAHAC,EAAQK,KAAK3D,EAAKuD,IAO9BH,EAAS,KAAME,QAGfF,EAAS,KAAM,IAQpB,SAASQ,EAAMC,GAClB,OAAO,SAACrE,GACJ,IAAIkC,EAAM,GASV,OAPAA,EAAIoC,SAAWD,EAAQE,MACvBrC,EAAIsC,SAAWH,EAAQI,SAEvBzE,EA4BG,CACHC,KAAM,kBAzBCJ,EAAM0B,KAAN,GAAAlB,OAAcC,yBAAd,sBAAgE4B,EAAK,CACxEwC,QAAS,CACLC,eAAgB,iCAChBC,OAAU,sBAEfrE,KAAK,SAACsE,GACL,IAAIrD,EAAMsD,KAAKC,MAAMD,KAAKE,UAAUH,IACpC3D,QAAQC,IAAIK,GACZN,QAAQC,IAAIK,EAAIhB,KAAKyE,SACjBzD,EAAIhB,KAAKyE,QACTjF,EAoBL,CACHC,KAAM,gBACNiF,SAtB8B1D,EAAIhB,KAAK2E,OAG/BnF,EAwBL,CACHC,KAAM,oBAvBHe,MAAM,SAAAoE,GACLpF,EAqBD,CACHC,KAAM,qBAOP,SAASoF,IACZ,MAAO,CACHpF,KAAM,UAMP,SAASqF,EAAOjB,GACnB,OAAO,SAACrE,GACJ,IAAIkC,EAAM,GAEVA,EAAIoC,SAAWD,EAAQkB,SACvBrD,EAAIsD,MAAQnB,EAAQE,MACpBrC,EAAIsC,SAAWH,EAAQI,SAEvB,IAAIgB,EAAO,GASX,OARAA,EAAI,KAAWvD,EAIflC,EA2BG,CACHC,KAAM,mBAxBCJ,EAAM0B,KAAN,GAAAlB,OAAcC,yBAAd,sBAAgEmF,EAAM,CACzEf,QAAS,CACLC,eAAgB,iCAChBC,OAAU,sBAEfrE,KAAK,SAACsE,GACL,IAAIrD,EAAMsD,KAAKC,MAAMD,KAAKE,UAAUH,IACpC3D,QAAQC,IAAIK,GAEkB,YAA1BA,EAAIhB,KAAKC,aACTT,EAoBL,CACHC,KAAM,iBACNiF,SAtB+B1D,EAAIhB,KAAKA,OAEhCR,EAyBL,CACHC,KAAM,qBAxBHe,MAAM,SAAAoE,GACLpF,EAsBD,CACHC,KAAM,6CChjBP,SAASyD,GAAgBgC,GAC5B,IAAIC,EAAY,GAEhB,OADAA,EAAUD,QAAUA,EACb,IAAIE,QAAQ,SAACC,EAASC,GACzBC,KAAMxE,KAAN,GAAAlB,OAAcC,yBAAd,6BAAuEqF,GAClEpF,KAAK,SAAAC,GACFqF,EAAQrF,EAAKA,QAEhBQ,MAAM,SAAAC,GACHC,QAAQC,IAAIF,qECoBb+E,ICrBmB7G,wBDA9B,SAAA6G,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACVH,0EAGD,IACG5E,EAAO+E,KAAKH,MAAZ5E,GACFmF,EAAI,gFAAAnG,OAAmFgB,GAC7F,OACE9C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACgI,GAAA,iBAAD,CAAkBC,MAAM,mBACtBnI,EAAAC,EAAAC,cAACgI,GAAA,MAAD,CAAOE,KAAMH,GACV,SAAAI,GAAA,IAAGC,EAAHD,EAAGC,YAAH,OACCtI,EAAAC,EAAAC,cAAA,UAAQwB,KAAK,SAAS6G,QAASD,GAA/B,oBAbW1H,cEqCZ4H,eAxCX,SAAAA,EAAYd,GAAO,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAAW,IACfC,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAa,GAAAR,KAAAH,KAAMH,KACDgB,MAAQ,CACTC,WAAY,QAHDF,wEAMV,IAAAG,EAAAf,KAAAgB,EAC+BhB,KAAKH,MAAjCzF,EADH4G,EACG5G,KAAM6G,EADTD,EACSC,QAASC,EADlBF,EACkBE,SACvB,OACI/I,EAAAC,EAAAC,cAAA,OAAK4C,GAAIgG,EAAQ7G,EAAKf,QAAQ8H,SAAUC,UAAU,WAAW7I,MAAO,CAAE8I,UAAW,OAAQC,gBAAiB,QAASC,QAAS,OAAQC,OAAQ,kBAAmBC,aAAc,MAAOhJ,UAAU,YAC1LN,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAACmJ,SAAS,SAAUtH,EAAKuH,QAAS,IAA5C,IAAkD3B,KAAKH,MAAM+B,eAAehE,OAAW,OAAQxD,EAAKyH,YACpG1J,EAAAC,EAAAC,cAAA,OAAKqI,QAAS,kBAAMK,EAAKlB,MAAMiC,cAAc,CAAEC,aAAcd,EAAQ7G,EAAKf,QAAQ2I,UAAWC,YAAahB,EAAQ7G,EAAKf,QAAQ8H,SAAUe,KAAMjB,EAAQ7G,EAAKf,QAAQ8I,IAAKC,KAAMnB,EAAQ7G,EAAKf,QAAQgJ,IAAKC,QAASlI,EAAKf,UAAWd,MAAO,CAAEgK,MAAO,MAAOC,OAAQ,YAAcvB,EAAQ7G,EAAKf,QAAQ2I,UAAW,IAAKf,EAAQ7G,EAAKf,QAAQ8H,UACzUhJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,cACXjJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgK,MAAOnI,EAAKiB,OAAS,MAAQ,OAAOqG,SAAS,QAAUN,UAAU,qBAAqBqB,cAAY,OAAO/B,QAAS,kBAAMK,EAAKlB,MAAM6C,YAAYtI,EAAKa,OADpK,QACqLb,EAAKuI,MAAQ3C,KAAKH,MAAMzF,KAAKuI,MAAQ,IAD1N,aAC4OxK,EAAAC,EAAAC,cAAA,QAAM+I,UAAU,gBAAgBV,QAAS,WAC7QK,EAAK6B,SAAS,CACV9B,WAAqC,QAAzBC,EAAKF,MAAMC,WAAuB,QAAU,UAG7DvI,MAAO,CAAEiK,OAAQ,YAAarK,EAAAC,EAAAC,cAAA,KAAG+I,UAAU,mBAAmB7I,MAAO,CAACmJ,SAAS,YAEtFvJ,EAAAC,EAAAC,cAAA,OAAK4C,GAAIb,EAAKa,GAAI1C,MAAO,CAAE8I,UAAW,OAAQ7I,QAAS,CAACwH,KAAKa,MAAMC,cAAiBd,KAAKH,MAAMzF,KAAKyI,gBAAgB1K,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE+I,gBAAiB,YAActB,KAAKH,MAAMzF,KAAK0I,WACjL3K,EAAAC,EAAAC,cAAA,wBAEQ+B,EAAKd,UAAYc,EAAKd,SAASmE,OAAS,GAAKrD,EAAKd,SAASyJ,IAAI,SAAAC,GAC3D,OAAO7K,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEgK,MAAO,QAAUnI,EAAKd,SAASmE,OAAS,GAAMyD,EAAS8B,GAAGzF,KAAO,MAAQnD,EAAKd,SAASmE,OAAS,GAAMyD,EAAS8B,GAAGzF,KAAO,QAI3JpF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4K,GAAD,CAAchI,GAAIb,EAAKa,cA9BrBlC,sBCKPmK,GATQ,SAAC9K,EAAG+K,GACvB,OAAI/K,EAAEmF,KAAKM,cAAgBsF,EAAE5F,KAAKM,eACtB,EAERzF,EAAEmF,KAAKM,cAAgBsF,EAAE5F,KAAKM,cACvB,EAEJ,GCEIuF,GATQ,SAAChL,EAAG+K,GACvB,OAAI/K,EAAEmF,KAAKM,cAAgBsF,EAAE5F,KAAKM,eACtB,EAERzF,EAAEmF,KAAKM,cAAgBsF,EAAE5F,KAAKM,cACvB,EAEJ,GCkDJ,SAASwF,GAAkBxC,GAC9B,IAAI5E,EAAwB4E,EAAMvE,SAASgH,qBACvCC,EAAiB1C,EAAMvE,SAASiH,eAChCrC,EAAWL,EAAMvE,SAAS4E,SAC9B,GAAIjF,GAAyBsH,GAAkBA,EAAe9F,OAAS,GAAKyD,EAAU,CAClF,IAAMsC,EAAkB,GAClBC,EAAyB,GAiB/B,OAhBAF,EAAeG,QAAQ,SAAAzI,GACnBgB,EAAsBhB,GAAI3B,SAASoK,QAAQ,SAAAvK,GAEvC,GADA+H,EAAS/H,GAASwK,MAAQ,EACrBF,EAAuBG,SAAS1C,EAAS/H,GAASoE,MAKnD,IAAK,IAAII,EAAI,EAAGA,EAAI6F,EAAgB/F,OAAQE,IACpC6F,EAAgB7F,GAAG1C,KAAOiG,EAAS/H,GAAS8B,KAC5CuI,EAAgB7F,GAAGgG,MAAQH,EAAgB7F,GAAGgG,MAAQ,QAN9DF,EAAuB1F,KAAKmD,EAAS/H,GAASoE,MAC9CiG,EAAgBzF,KAAKmD,EAAS/H,QAWnCqK,EAAgBK,KAAKC,IAE5B,MAAO,GAIR,SAASC,GAAuBlD,GACnC,IAAImD,EAAiBnD,EAAMvE,SAASiH,eAChCtH,EAAwB4E,EAAMvE,SAASgH,qBACvCrC,EAAUJ,EAAMvE,SAAS2E,QAC7B,GAAI+C,GAAgBA,EAAevG,OAAO,GAAKwD,GAAWhF,EAAuB,CAC7E,IAAIgI,EAA0B,GAC1BC,EAAoB,GAOxB,OANAF,EAAeN,QAAQ,SAAAzI,GACbiJ,EAAkBC,QAASlD,EAAQhF,EAAsBhB,GAAI5B,QAAQ2I,UAAYf,EAAQhF,EAAsBhB,GAAI5B,QAAQ8H,WAAc,IAC3I+C,EAAkBnG,KAAMkD,EAAQhF,EAAsBhB,GAAI5B,QAAQ2I,UAAYf,EAAQhF,EAAsBhB,GAAI5B,QAAQ8H,UACxH8C,EAAwBlG,KAAKkD,EAAQhF,EAAsBhB,GAAI5B,YAGhE4K,EAAwBJ,KAAK,SAAUzL,EAAG+K,GAC7C,IAAIiB,EAAkBhM,EAAE+I,SAASkD,cAC7BC,EAAkBnB,EAAEhC,SAASkD,cACjC,OAAQD,EAAkBE,GAAoB,EAAKF,EAAkBE,EAAmB,EAAI,KAKjG,SAASC,GAAiB1D,GAC7B,IAAI7H,EAAS6H,EAAM7H,OAAOA,OACtBuB,EAAesG,EAAM7H,OAAOwL,mBAC5BlI,EAAWuE,EAAM7H,OAAOsD,SAC5B,GAAItD,EAAOQ,cAAgBR,EAAOQ,aAAaiE,OAAS,GAAKlD,EAAc,CACvE,IAAIkK,EAAwB,GACxBC,EAAkB,GAuBtB,OAtBA1L,EAAOQ,aAAakK,QAAQ,SAAAiB,GACxB,IAAIhB,EAAQ,EACZ,GAAMe,EAAgBd,SAASrJ,EAAaoK,GAASC,WAQjDH,EAAsBf,QAAQ,SAAAmB,GACtBA,EAAOC,yBAA2BvK,EAAaoK,GAASC,YACxDC,EAAOlB,OAAS,SAVsC,CAC9DA,GAAS,EACT,IAAImB,EAA0BvK,EAAaoK,GAASC,UAChDG,EAAuBzI,EAAS/B,EAAaoK,GAASC,WAAWrH,KACrEmH,EAAgB3G,KAAKxD,EAAaoK,GAASC,WAC3CH,EAAsB1G,KAAK,CAAE+G,0BAAyBC,uBAAsBpB,aAUpFc,EAAsBZ,KAAK,SAAUzL,EAAG+K,GACpC,IAAI6B,EAAQ5M,EAAE2M,qBAAqBV,cAC/BY,EAAQ9B,EAAE4B,qBAAqBV,cACnC,OAAQW,EAAQC,GAAU,EAAKD,EAAQC,EAAS,EAAI,IAEjDR,GAIR,SAASS,GAAmCrE,GAC/C,IAAI7H,EAAS6H,EAAM7H,OAAOA,OACtBuB,EAAesG,EAAM7H,OAAOwL,mBAC5BlI,EAAWuE,EAAM7H,OAAOsD,SAC5B,GAAItD,EAAOQ,cAAgBR,EAAOQ,aAAaiE,OAAS,GAAKlD,EAAc,CACvE,IAAI4K,EAAmB,GAIvB,OAHAnM,EAAOQ,aAAakK,QAAQ,SAAAzI,GACxBkK,EAAiBpH,KAAKxD,EAAaU,MAEhCkK,EAAiBtB,KAAK,SAACzL,EAAG+K,GAC7B,IAAIiC,EAAe9I,EAASlE,EAAEiN,SAAS9H,KAAKM,cACxCyH,EAAehJ,EAAS6G,EAAEkC,SAAS9H,KAAKM,cAC5C,OAAOuH,EAAeE,GAAgB,EAAKF,EAAeE,EAAgB,EAAI,KAInF,SAASC,GAAqB1E,GACjC,IAAI7H,EAAS6H,EAAM7H,OAAOA,OACtBwM,EAAQ3E,EAAM7H,OAAOyM,YACzB,GAAIzM,GAAUA,EAAO0M,OAAS1M,EAAO0M,MAAMjI,OAAS,GAAK+H,EAAO,CAC5D,IAAIG,EAAU3M,EAAO0M,MACjBE,EAAuB,GACvBC,EAAgB,GASpB,OARAF,EAAQjC,QAAQ,SAAAoC,GACZ,KAAMD,EAAc1B,QAAQqB,EAAMM,GAAQ7K,KAAO,GAAI,CACjD4K,EAAc9H,KAAKyH,EAAMM,GAAQ7K,IACjC,IAAI8K,EAAmBP,EAAMM,GAAQ7K,GACjC+K,EAAQR,EAAMM,GAAQE,MAC1BJ,EAAqB7H,KAAK,CAAEgI,mBAAkBC,aAG/CJ,GAGR,SAASK,GAAiBpF,GAC7B,IAAIqF,EAAerF,EAAM7H,OAAOkN,aAC5BC,EAAoBtF,EAAM7H,OAAOmN,kBACjCnN,EAAS6H,EAAM7H,OAAOA,OAC1B,GAAIA,GAAUA,EAAOoN,cAAgBpN,EAAOoN,aAAa3I,OAAS,EAAG,CACjE,IAAIrD,EAAO,GACPiM,EAAoB,GAgBxB,OAfArN,EAAOoN,aAAarD,IAAI,SAAA9H,GAChBiL,EAAajL,GAAIqL,mBACZD,EAAkBzC,SAASuC,EAAkBD,EAAajL,GAAIqL,kBAAkB/I,MAKjFnD,EAAKsJ,QAAQ,SAAAiB,GACLA,EAAQ4B,UAAYJ,EAAkBD,EAAajL,GAAIqL,kBAAkB/I,MACzEoH,EAAQ6B,OAAOzI,KAAK,CAAER,KAAM2I,EAAajL,GAAIsC,KAAMtC,GAAIiL,EAAajL,GAAIA,QANhFoL,EAAkBtI,KAAKoI,EAAkBD,EAAajL,GAAIqL,kBAAkB/I,MAC5EnD,EAAK2D,KAAK,CAAEwI,QAASJ,EAAkBD,EAAajL,GAAIqL,kBAAkB/I,KAAMiJ,OAAQ,CAAC,CAAEjJ,KAAM2I,EAAajL,GAAIsC,KAAMtC,GAAIiL,EAAajL,GAAIA,WAWlJb,GAKR,SAASqM,GAA0C5F,GACtD,IAAI6F,EAAiB7F,EAAM8F,gBAAgBD,eACvCpK,EAAWuE,EAAM8F,gBAAgBrK,SACrC,GAAIoK,GAAkBA,EAAeE,UAAYF,EAAeE,SAASnJ,OAAS,GAAKnB,EAAU,CAC7F,IAAIuK,EAAqB,GACrBC,EAAuB,GAO3B,OANAJ,EAAeE,SAAS7D,IAAI,SAAA9H,GACnB4L,EAAmBjD,SAAStH,EAASrB,GAAIsC,QAC1CsJ,EAAmB9I,KAAKzB,EAASrB,GAAIsC,MACrCuJ,EAAqB/I,KAAKzB,EAASrB,OAGpC6L,EAAqBjD,KAAK,SAACzL,EAAG+K,GACjC,IAAIiC,EAAehN,EAAEmF,KAAKM,cACtByH,EAAenC,EAAE5F,KAAKM,cAC1B,OAAOuH,EAAeE,GAAgB,EAAKF,EAAeE,EAAgB,EAAI,KAKnF,SAASyB,GAAkClG,GAC9C,IAAI6F,EAAiB7F,EAAM8F,gBAAgBD,eACvCpK,EAAWuE,EAAM8F,gBAAgBrK,SACjClD,EAAcyH,EAAM8F,gBAAgBvN,YACpC4N,EAAgBnG,EAAM8F,gBAAgBK,cACtCC,EAAiBpG,EAAM8F,gBAAgBM,eACvChG,EAAUJ,EAAM8F,gBAAgB1F,QACpC,GAAIyF,GAAkBA,EAAeE,UAAYF,EAAeE,SAASnJ,OAAS,GAAKnB,GAAYlD,EAAa,CAC5G,IAAMmB,EAAe,GA8BrB,OA7BiBmM,EAAeE,SACrBlD,QAAQ,SAAAzI,GACfV,EAAawD,KAAbmJ,MAAA3M,EAAYuF,OAAAqH,GAAA,EAAArH,CAASxD,EAASrB,GAAIzB,aAAauJ,IAAI,SAAAqE,GAE/C,OADAhO,EAAYgO,GAAeC,YAAc/K,EAASrB,GAAIsC,KAC/CnE,EAAYgO,SAGvBJ,EACAzM,EAAasJ,KAAK,SAAUzL,EAAG+K,GAC3B,IAAI6B,EAAQ/D,EAAQ7I,EAAEiB,QAAQ8H,SAASkD,cACnCY,EAAQhE,EAAQkC,EAAE9J,QAAQ8H,SAASkD,cACvC,OAAQW,EAAQC,GAAU,EAAKD,EAAQC,EAAS,EAAI,IAGnDgC,GACL1M,EAAasJ,KAAK,SAAUzL,EAAG+K,GAC3B,IAAImE,EAAUrG,EAAQ7I,EAAEiB,QAAQ8H,SAASkD,cACrCkD,EAAUtG,EAAQkC,EAAE9J,QAAQ8H,SAASkD,cACrCW,EAAQ5M,EAAEiP,YAAYhD,cACtBY,EAAQ9B,EAAEkE,YAAYhD,cAC1B,OAAIW,IAAUC,EACFqC,EAAUC,GAAY,EAAKD,EAAUC,EAAW,EAAI,EAGpDvC,EAAQC,GAAU,EAAI,IAKnC1K,GAIR,SAASiN,GAAmC3G,GAC/C,IAAIvE,EAAWuE,EAAM8F,gBAAgBrK,SACjC2E,EAAUJ,EAAM8F,gBAAgB1F,QAChC7H,EAAcyH,EAAM8F,gBAAgBvN,YACpCsN,EAAiB7F,EAAM8F,gBAAgBD,eAC3C,GAAIA,GAAkBA,EAAeE,UAAYtK,GAAYlD,GAAe6H,EAAS,CACjF,IAAMwG,EAAaf,EAAeE,SAC5Bc,EAAgB,GAChBxD,EAAoB,GAkB1B,OAjBAuD,EAAW/D,QAAQ,SAAAzI,GACfqB,EAASrB,GAAIzB,aAAakK,QAAQ,SAAAiE,GACzBzD,EAAkBN,SAASxK,EAAYuO,GAAWC,YACnD1D,EAAkBnG,KAAK3E,EAAYuO,GAAWC,UAC9CF,EAAc3J,KAAK,CACf9C,GAAI7B,EAAYuO,GAAWC,SAC3B5F,UAAWf,EAAQ7H,EAAYuO,GAAWtO,QAAQ2I,UAClDb,SAAUF,EAAQ7H,EAAYuO,GAAWtO,QAAQ8H,gBAKjEuG,EAAc7D,KAAK,SAAUzL,EAAG+K,GAC5B,IAAIiB,EAAkBhM,EAAE+I,SAASkD,cAC7BC,EAAkBnB,EAAEhC,SAASkD,cACjC,OAAQD,EAAkBE,GAAoB,EAAKF,EAAkBE,EAAmB,EAAI,IAEzFoD,GAIR,SAASG,GAA4ChH,GACxD,IAAItG,EAAesG,EAAMiH,cAAcvN,aACnCwN,EAAgBlH,EAAMiH,cAAcC,cACxC,GAAIxN,GAAgBA,EAAakD,OAAS,GAAKsK,EAAe,CAC1D,IAAIlB,EAAqB,GACrBmB,EAAiB,GAOrB,OANAzN,EAAawI,IAAI,SAAAkF,GACRpB,EAAmBjD,SAASmE,EAAcE,GAAWC,eACtDrB,EAAmB9I,KAAKgK,EAAcE,GAAWC,aACjDF,EAAejK,KAAK,CAAER,KAAMwK,EAAcE,GAAWC,YAAajN,GAAI8M,EAAcE,GAAWlO,eAGhGiO,EAAenE,KAAKT,KAI5B,SAAS+E,GAAyCtH,GACrD,IAAItG,EAAesG,EAAMiH,cAAcvN,aACnCwN,EAAgBlH,EAAMiH,cAAcC,cACpCf,EAAgBe,EAAcf,cAC9BC,EAAiBc,EAAcd,eACnC,GAAI1M,GAAgBA,EAAakD,OAAS,GAAKsK,EAAe,CAC1D,IAAIK,EAA+B,GAkCnC,OAjCA7N,EAAamJ,QAAQ,SAAAzI,GACjBmN,EAA6BrK,KAAKgK,EAAc9M,MAEhD+L,EACAoB,EAA6BvE,KAAK,SAAUzL,EAAG+K,GAC3C,IAAI6B,EAAQ5M,EAAEiQ,eAAehE,cACzBY,EAAQ9B,EAAEkF,eAAehE,cAC7B,OAAQW,EAAQC,GAAU,EAAKD,EAAQC,EAAS,EAAI,IAGnDgC,GACLmB,EAA6BvE,KAAK,SAAUzL,EAAG+K,GAC3C,IAAImE,EAAUlP,EAAEiQ,eAAehE,cAC3BkD,EAAUpE,EAAEkF,eAAehE,cAC3BW,EAAQ5M,EAAE8P,YAAY7D,cACtBY,EAAQ9B,EAAE+E,YAAY7D,cAC1B,OAAIW,IAAUC,EACFqC,EAAUC,GAAY,EAAKD,EAAUC,EAAW,EAAI,EAG9C,YAAVvC,GAIc,YAAVA,GACAlK,QAAQC,IAAI,sBAERiK,EAAQC,GAAU,EAAI,QAN9BnK,QAAQC,IAAI,wBAYrBqN,GAIR,SAASE,GAA8CzH,GAC1D,IAAI0H,EAAsB1H,EAAMiH,cAAcU,0BAC9C,GAAID,GAAuBA,EAAoB9K,OAAS,EAAG,CACvD,IAAI2K,EAA4BtI,OAAAqH,GAAA,EAAArH,CAAOyI,GAMvC,OALAH,EAA6BvE,KAAK,SAAUzL,EAAG+K,GAC3C,IAAI6B,EAAQ5M,EAAEiQ,eAAehE,cACzBY,EAAQ9B,EAAEkF,eAAehE,cAC7B,OAAQW,EAAQC,GAAU,EAAKD,EAAQC,EAAS,EAAI,IAEjDmD,2BChVTK,eACF,SAAAA,EAAY5I,GAAO,IAAAe,EA4Cf,GA5Ced,OAAAC,EAAA,EAAAD,CAAAE,KAAAyI,IACf7H,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2I,GAAAtI,KAAAH,KAAMH,KAmEV6I,WAAa,SAACC,GACV,OAAO,IAAInJ,QAAQ,SAACC,EAASC,GACzBC,KAAM3F,IAAN,GAAAC,OAAaC,yBAAb,+BAAAD,OAAuE0O,IAAgBxO,KAAK,SAAAC,GACxF,GAAIA,EAAKA,KAAK0B,IAAK,CACf,IAAIS,EAASnC,EAAKA,KAAK0B,IAAI8F,eAC3BnC,EAAQlD,GAEZkD,EAAQ,QACT7E,MAAM,SAAAC,GACLC,QAAQC,IAAIF,QA3EpB+F,EAAKC,MAAQ,CACT+H,MAAO,GACPtJ,SAAS,EACTuJ,WAAYjI,EAAKf,MAAMvD,SAASuM,WAChCC,eAAgBlI,EAAKf,MAAMvD,SAASwM,eACpCC,gBAAiBnI,EAAKf,MAAMvD,SAASyM,gBACrCC,mBAAoBpI,EAAKf,MAAMvD,SAAS0M,mBACxCtM,gBAAiBkE,EAAKf,MAAMvD,SAASI,gBACrCuM,mBAAoBrI,EAAKf,MAAMvD,SAAS2M,mBACxCC,uBAAwBtI,EAAKf,MAAMvD,SAAS4M,uBAC5CC,wBAAyBvI,EAAKf,MAAMvD,SAAS6M,wBAC7CvH,eAAgBhB,EAAKf,MAAMuJ,OAAOxH,eAClCrH,aAAcqG,EAAKf,MAAMvD,SAAS/B,aAClC2G,SAAUN,EAAKf,MAAMvD,SAAS4E,SAC9BrF,QAAS+E,EAAKf,MAAMvD,SAAST,QAC7BoF,QAASL,EAAKf,MAAMvD,SAAS2E,QAC7BhF,sBAAuB2E,EAAKf,MAAMvD,SAASgH,qBAC3CjH,mBAAoBuE,EAAKf,MAAMvD,SAASD,mBACxCgN,qBAAqBzI,EAAK0I,wBAC1B1I,EAAKf,MAAMvD,SAASD,mBACpBuE,EAAKf,MAAMvD,SAASgH,qBACpB1C,EAAKf,MAAMvD,SAAS2E,QACpBL,EAAKf,MAAMvD,SAAS4E,UAEpBqI,eAAgB3I,EAAKf,MAAM2J,eAC3BC,cAAe7I,EAAKf,MAAM6H,cAC1B5G,WAAY,SACZrG,UAAW,KACXiP,SAAU,KACVzO,GAAI,GACJ0O,KAAK,EACLC,aAAc,KACdvO,OAAQuF,EAAKf,MAAMvD,SAASjB,QAEhCuF,EAAKiJ,yBAA2BjJ,EAAKiJ,yBAAyBC,KAA9BhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAChCA,EAAKkB,cAAgBlB,EAAKkB,cAAcgI,KAAnBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACrBA,EAAKoJ,YAAcpJ,EAAKoJ,YAAYF,KAAjBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACnBA,EAAKqJ,mBAAqBrJ,EAAKqJ,mBAAmBH,KAAxBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAC1BA,EAAKsJ,eAAiBtJ,EAAKsJ,eAAeJ,KAApBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACtBA,EAAKuJ,kBAAoBvJ,EAAKuJ,kBAAkBL,KAAvBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACzBA,EAAK8B,YAAc9B,EAAK8B,YAAYoH,KAAjBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACnBA,EAAK0I,wBAA0B1I,EAAK0I,wBAAwBQ,KAA7BhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAC3BA,EAAKf,MAAMuJ,OAAOxH,gBACdhB,EAAKf,MAAMuJ,OAAOxH,eAAe3G,IACgB,YAA7C2F,EAAKf,MAAMuJ,OAAOxH,eAAewI,SAAwB,CACzD,IAAIvO,EAAU,CACVwO,WAAczJ,EAAKf,MAAMuJ,OAAOxH,eAAe3G,GAC/CqE,QAAWsB,EAAKf,MAAMuJ,OAAOkB,KAAKvH,IAAI,SAAA3F,GAAG,OAAIA,EAAInC,MAErD2F,EAAKf,MAAMjE,kBAAkBC,GAC7B+E,EAAKf,MAAMpD,0BAA0BZ,GApDlC,OAwDZ+E,EAAKf,MAAMvD,SAASL,uBAAuB2E,EAAKf,MAAMvD,SAASD,oBAAoBuE,EAAKf,MAAMvD,SAAStD,QACtG4H,EAAK0I,wBAAwB1I,EAAKf,MAAM5D,sBAAsB2E,EAAKf,MAAMxD,oBAzD9DuE,kFA4DA2J,GACf,IAAI3M,EAAQ2M,EAAYC,kBACpB9O,EAAQkC,EACR3C,EAAKsP,EAAYE,2BAErBzK,KAAKH,MAAMlG,oBACXqG,KAAKH,MAAM9C,gBAAgB,CAAEa,QAAOlC,QAAOT,KAAImP,SAFhC,gMAkBXpK,KAAKH,MAAM6K,MAAMC,OAAOpN,0BACpByC,KAAKH,MAAM6K,MAAMC,OAAOpN,OAAQqN,KAAYjM,MAAMqB,KAAKH,MAAMgL,SAASC,QAAQxL,gCAC1EA,EAAU,GACVyL,EAAeH,KAAYjM,MAAMqB,KAAKH,MAAMgL,SAASC,QAAQxL,QAC7DqJ,EAAe3I,KAAKH,MAAM6K,MAAMC,OAAOpN,KACf,kBAAjBwN,EACPzL,EAAQvB,KAAKgN,GAEbzL,EAAUyL,EAEd/K,KAAK4C,SAAS,CACVgG,MAAOD,EACPrJ,SAAS,aAEMU,KAAK0I,WAAWC,iBAA/BpM,mBACqBe,GAAgBgC,WAArC0L,SACAzO,GACAyD,KAAKH,MAAM1C,OAAO6N,GAClBhL,KAAKH,MAAM9C,gBAAgBR,GAC3ByD,KAAK4C,SAAS,CACVhB,eAAgBrF,KAGpByD,KAAKH,MAAMoL,QAAQlN,KAAK,2CAIxB4K,EAAe3I,KAAKH,MAAM6K,MAAMC,OAAOpN,KAC3CyC,KAAK4C,SAAS,CACVgG,MAAOD,cAEQ3I,KAAK0I,WAAWC,YAA/BpM,WAEAyD,KAAKH,MAAM9C,gBAAgBR,GAC3ByD,KAAK4C,SAAS,CACVhB,eAAgBrF,KAGpByD,KAAKH,MAAMoL,QAAQlN,KAAK,iKAMdmN,GACtB,GAAIlL,KAAKa,MAAMe,gBAAkBsJ,EAAU9B,OAAOxH,gBAwB9C,GAvBA5B,KAAKH,MAAMlG,oBACXqG,KAAK4C,SAAS,CACViG,WAAYqC,EAAU5O,SAASuM,WAC/BC,eAAgBoC,EAAU5O,SAASwM,eACnCC,gBAAiBmC,EAAU5O,SAASyM,gBACpCC,mBAAoBkC,EAAU5O,SAAS0M,mBACvCmC,oBAAqBD,EAAU5O,SAAS6O,oBACxCC,2BAA4BF,EAAU5O,SAAS6O,oBAE/ClP,sBAAuBiP,EAAU5O,SAASgH,qBAC1CjH,mBAAoB6O,EAAU5O,SAASD,mBACvCR,QAASqP,EAAU5O,SAAST,QAE5BoF,QAASiK,EAAU5O,SAAS2E,QAC5BC,SAAUgK,EAAU5O,SAAS4E,SAC7BqI,eAAgB2B,EAAU1B,eAC1BC,cAAeyB,EAAUxD,cACzBhL,gBAAiBwO,EAAU5O,SAASI,gBACpCuM,mBAAoBiC,EAAU5O,SAAS2M,mBACvCE,wBAAyB+B,EAAU5O,SAAS6M,wBAC5CD,uBAAwBgC,EAAU5O,SAAS4M,uBAC3CmC,QAASH,EAAU5O,SAAS+O,UAE5BH,EAAU9B,OAAOxH,eAAe3G,IAAkD,YAA5CiQ,EAAU9B,OAAOxH,eAAewI,SAAwB,CAC9FpK,KAAK4C,SAAS,CACVhB,eAAgBsJ,EAAU9B,OAAOxH,iBAGrC,IAAI/F,EAAU,CACVwO,WAAca,EAAU9B,OAAOxH,eAAe3G,GAC9CqE,QAAW4L,EAAU9B,OAAOkB,KAAKvH,IAAI,SAAA3F,GAAG,OAAIA,EAAInC,MAEpD+E,KAAKH,MAAMjE,kBAAkBC,GAC7BmE,KAAKH,MAAMpD,0BAA0BZ,SAIzCmE,KAAK4C,SAAS,CACViG,WAAYqC,EAAU5O,SAASuM,WAC/BC,eAAgBoC,EAAU5O,SAASwM,eACnCC,gBAAiBmC,EAAU5O,SAASyM,gBACpCC,mBAAoBkC,EAAU5O,SAAS0M,mBACvCmC,oBAAqBD,EAAU5O,SAAS6O,oBACxCC,2BAA4BF,EAAU5O,SAAS6O,oBAC/CnH,eAAgBkH,EAAU5O,SAAS0H,eACnC9C,SAAUgK,EAAU5O,SAAS4E,SAC7BxE,gBAAiBwO,EAAU5O,SAASI,gBACpCuM,mBAAoBiC,EAAU5O,SAAS2M,mBACvCE,wBAAyB+B,EAAU5O,SAAS6M,wBAC5CD,uBAAwBgC,EAAU5O,SAAS4M,uBAC3CmC,QAASH,EAAU5O,SAAS+O,QAC5BpP,sBAAuBiP,EAAU5O,SAASgH,qBAC1CjH,mBAAoB6O,EAAU5O,SAASD,mBACvCR,QAASqP,EAAU5O,SAAST,QAC5B0N,eAAgB2B,EAAU1B,eAC1BC,cAAeyB,EAAUxD,cACzBzG,QAASiK,EAAU5O,SAAS2E,QAC5B5F,OAAQ6P,EAAU5O,SAASjB,SAKnC,GAAI2E,KAAKH,MAAMuJ,OAAOkB,KAAK7M,SAAWyN,EAAU9B,OAAOkB,KAAK7M,QACR,YAA5CyN,EAAU9B,OAAOxH,eAAewI,SAAwB,CACxD,IAAIvO,EAAU,CACVwO,WAAcrK,KAAKa,MAAMe,eAAe3G,GACxCqE,QAAW4L,EAAU9B,OAAOkB,KAAKvH,IAAI,SAAA3F,GAAG,OAAIA,EAAInC,MAEpD+E,KAAKH,MAAMjE,kBAAkBC,GAC7BmE,KAAKH,MAAMpD,0BAA0BZ,GAK1CqP,EAAU5O,SAASD,qBAAqB2D,KAAKa,MAAMxE,oBAClD2D,KAAK4C,SAAS,CACVyG,qBAAqBrJ,KAAKsJ,wBACtB4B,EAAU5O,SAASD,mBACnB6O,EAAU5O,SAASgH,qBACnB4H,EAAU5O,SAAS2E,QACnBiK,EAAU5O,SAAS4E,wDAO/BlB,KAAK4C,SAAS,CACV2H,aAAcvK,KAAKa,MAAM0J,oDAI7BvK,KAAK4C,SAAS,CACV0I,gBAAiB,SAErBtL,KAAKmK,6DAGLnK,KAAK4C,SAAS,CACV0I,gBAAiB,YAErBtL,KAAKmK,wDAEGlP,GACJ+E,KAAKa,MAAMtG,aAAaU,GAAII,OAC5B2E,KAAKH,MAAMvE,wBAAwBL,GAGnC+E,KAAKH,MAAM7E,wBAAwBC,yCAG7BjC,GACV,IAAI4E,EAAQ5E,EAAO+I,aAAe,IAAM/I,EAAOiJ,YAC3CvG,EAAQkC,EACR3C,EAAKjC,EAAOsJ,QACZJ,EAAOlJ,EAAOkJ,KACdE,EAAOpJ,EAAOoJ,KAElBpC,KAAKH,MAAMlG,oBACXqG,KAAKH,MAAM9C,gBAAgB,CAAEa,QAAOlC,QAAOT,KAAIiH,OAAME,OAAMgI,SAF5C,6DAIMmB,GACrB,IAAIC,EAAM,GACVxL,KAAKa,MAAMuK,2BAA2B1H,QAAQ,SAAAiB,GACtCA,EAAQ8G,aAAeF,GACvBC,EAAIzN,KAAK4G,KAGjB3E,KAAK4C,SAAS,CACVuI,oBAAqBK,oDAGLvP,EAAsBI,EAAmB4E,GAAS,IAAAF,EAAAf,KAClEzD,EAAS,GACb,GAAyB,WAArByD,KAAKa,MAAMrF,OAAqB,CAChC,IAAI6N,EAAuB,GACvBqC,EAA0B,GAiB9B,OAhBArP,EAAmBqH,QAAQ,SAAAtK,GACvB,IAAIwK,GAAW,EACf3H,EAAsB7C,EAAY6B,IAAI3B,SAASoK,QAAQ,SAAAV,GAC/CA,GAAKjC,EAAKF,MAAM8K,kBAChBvS,EAAYC,OAAS4C,EAAsB7C,EAAY6B,IAAI5B,OAC3DD,EAAYE,SAAW2C,EAAsB7C,EAAY6B,IAAI3B,SAC7DsK,GAAW,MAGN,IAAbA,EAAoByF,EAAqBtL,KAAK3E,GAAesS,EAAwB3N,KAAK3E,MAE9FmD,EAAS8M,EAAqBxF,KAAK,SAAUzL,EAAG+K,GAC5C,IAAIiB,EAAkBnD,EAAQ7I,EAAEiB,QAAQ8H,SAASkD,cAC7CC,EAAkBrD,EAAQkC,EAAE9J,QAAQ8H,SAASkD,cACjD,OAAQD,EAAkBE,GAAoB,EAAKF,EAAkBE,EAAmB,EAAI,KAErF7G,OAAS,EACTlB,GAEXyD,KAAKH,MAAMrF,iCAAiCwF,KAAKa,MAAM8K,iBAChDpP,GAGN,OAAGyD,KAAKa,MAAM8I,KACf3J,KAAKH,MAAM/F,4BAA4BkG,KAAKa,MAAMe,eAAe3G,IACjE+E,KAAK4C,SAAS,CACV+G,KAAI,IAEDpN,GAGHyD,KAAKa,MAAM+I,cACXvN,EAAmBqH,QAAQ,SAAAtK,GACnB6C,EAAsB7C,EAAY6B,KAAOgG,EAAQhF,EAAsB7C,EAAY6B,IAAI5B,QAAQ8H,WAAaJ,EAAKF,MAAM+I,eACvHxQ,EAAYC,OAAS4C,EAAsB7C,EAAY6B,IAAI5B,OAC3DD,EAAYE,SAAW2C,EAAsB7C,EAAY6B,IAAI3B,SAC7DiD,EAAOwB,KAAK3E,MAGhBmD,EAAOkB,OAAS,EACTlB,GAEXyD,KAAKH,MAAMnF,+BAA+BsF,KAAKa,MAAM+I,cAC9CrN,KAEPF,EAAmBqH,QAAQ,SAAAtK,GACpB6C,EAAsB7C,EAAY6B,MACrC7B,EAAYC,OAAS4C,EAAsB7C,EAAY6B,IAAI5B,OAC3DD,EAAYE,SAAW2C,EAAsB7C,EAAY6B,IAAI3B,SAC7DiD,EAAOwB,KAAK3E,MAGhBmD,EAASA,EAAOsH,KAAK,SAAUzL,EAAG+K,GAC9B,IAAIiB,EAAkBnD,EAAQ7I,EAAEiB,QAAQ8H,SAASkD,cAC7CC,EAAkBrD,EAAQkC,EAAE9J,QAAQ8H,SAASkD,cACjD,OAAQD,EAAkBE,GAAoB,EAAKF,EAAkBE,EAAmB,EAAI,sCAMnG,IAAAsH,EAAA5L,KACL,OACI7H,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,iBAAiB7I,MAAO,CAAEsT,SAAU,YAC7C7L,KAAKa,MAAMe,eAAe3G,IAA4C,YAAtC+E,KAAKa,MAAMe,eAAewI,UAA0BpK,KAAKa,MAAM+H,QAAUzQ,EAAAC,EAAAC,cAAA,OAAM+I,UAAU,mBACtHpB,KAAKa,MAAMgI,YAAc1Q,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,QAASC,OAAQ,OAAQ1K,UAAW,SAC/ElJ,EAAAC,EAAAC,cAAC2T,EAAA5T,EAAD,CAAcyB,KAAM,QAAS0I,MAAO,UAEtCvC,KAAKa,MAAMgI,aAAe7I,KAAKa,MAAMkI,kBAAoB/I,KAAKa,MAAMiI,gBAAkB3Q,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,OACnGjJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,iCAAiC7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,UAAW2K,cAAe,aAAcC,OAAQ,OAAQL,SAAU,OAAQpT,UAAW,KAChLN,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,GAAG7I,MAAO,CAAEuT,MAAO,OAAQC,OAAQ,OAAQI,WAAY,UAAW1T,UAAW,GAAIgJ,aAAc,SACzGzB,KAAKa,MAAMoI,oBAAsB9Q,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,QAASC,OAAQ,SACpE5T,EAAAC,EAAAC,cAAC2T,EAAA5T,EAAD,CAAcyB,KAAK,QAAQ0I,MAAM,UAGnCvC,KAAKa,MAAMoI,oBAAsB9Q,EAAAC,EAAAC,cAAA,WAC/BF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE+I,gBAAiB,QAAS7I,UAAW,SAAU4I,UAAW,OAAQE,QAAS,QAASpJ,EAAAC,EAAAC,cAAA,UAAK2H,KAAKa,MAAMe,eAAehE,SAErIzF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE+I,gBAAiB,QAAS8K,aAAc,SAChDpM,KAAKa,MAAMoI,oBAAsB9Q,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE8T,YAAa,OAAQhL,UAAW,MAAO8K,WAAY,UAChGhU,EAAAC,EAAAC,cAAA,SAAOE,MAAO,CAAE+I,gBAAiB,GAAIG,aAAc,OAAQD,OAAQ,kBAAmBD,QAAS,WAAYF,UAAW,OAAQiL,WAAY,GAAIC,YAAa,MAAO/J,OAAQ,WACtK9B,QAASV,KAAKgK,aADlB,SAEA7R,EAAAC,EAAAC,cAAA,SAAOE,MAAO,CAAEiK,OAAQ,UAAWlB,gBAAiB,GAAIG,aAAc,OAAQD,OAAQ,kBAAmBD,QAAS,WAAYF,UAAW,OAAQiL,WAAY,OACzJ5L,QAASV,KAAKkK,gBADlB,YAGJ/R,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,QAAStK,OAAQ,kBAAmBhJ,QAAS,CAACwH,KAAKa,MAAM0J,YAAc,QAAU,QAAS9R,UAAW,WACvF,QAA9BuH,KAAKa,MAAMyK,iBAA6BtL,KAAKa,MAAMnE,iBAAmBsD,KAAKa,MAAMnE,gBAAgBe,OAAS,GAAK+O,GAAmBxM,KAAKa,MAAMnE,iBAAiBqG,IAAI,SAAA3I,GAC/J,OAAOjC,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEgK,MAAO,OAAQC,OAAQ,WAAa9B,QAAS,kBAAMkL,EAAK3B,mBAAmB,CAAEO,kBAAmBpQ,EAAKmD,KAAMkN,2BAA4BrQ,EAAKa,OAAQb,EAAKmD,QAEnJ,WAA9ByC,KAAKa,MAAMyK,iBAAgCtL,KAAKa,MAAMnE,iBAAmBsD,KAAKa,MAAMnE,gBAAgBe,OAAS,GAAKgP,GAAuBzM,KAAKa,MAAMnE,iBAAiBqG,IAAI,SAAA3I,GACtK,OAAOjC,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEgK,MAAO,OAAQC,OAAQ,WAAa9B,QAAS,kBAAMkL,EAAK3B,mBAAmB,CAAEO,kBAAmBpQ,EAAKmD,KAAMkN,2BAA4BrQ,EAAKa,OAASb,EAAKmD,UAM1LyC,KAAKa,MAAM0I,gBAAmBvJ,KAAKa,MAAM0I,eAAe9L,OAAS,GAAKtF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,OAAQC,OAAQ,SACxG5T,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE+I,gBAAiB,QAASwK,MAAO,SAC3C3T,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,OACXjJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,8BACXjJ,EAAAC,EAAAC,cAAA,OAAKqI,QAAS,kBAAMkL,EAAKhJ,SAAS,CAAE+G,KAAK,EAAKnO,OAAO,GAAGoO,aAAa,MAAMxI,UAAU,mCAAoCjJ,EAAAC,EAAAC,cAAA,uBAE7HF,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,6BAA6B7I,MAAO,CAAE+I,gBAAiB,UACjEtB,KAAKa,MAAM0I,eAAexG,IAAI,SAAA5J,GAC3B,OAAOhB,EAAAC,EAAAC,cAAA,KAAGkI,KAAK,OAAOhI,MAAO,CAAEiK,OAAQ,UAAWkK,eAAgB,OAAQnK,MAAO,QAAS/J,QAAS,SAAWkI,QAAS,WACnHkL,EAAKhJ,SAAS,CACVpH,OAAQ,UACRmQ,gBAAiBxS,EAAQ8B,GACzB0O,KAAK,MAEVxR,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgK,MAAO,QAASoK,WAAY,QAASjL,SAAU,SAAWvI,EAAQoE,MAASpF,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEgK,MAAO,SAAW,KAAOpJ,EAAQwK,MAAQ,cAY9KxL,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,UAAW4K,OAAQ,OAAQU,aAAc,iBAAkBf,SAAU,SAC9J1T,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,eAAe1C,MAAO,CAAE+I,gBAAiB,YAC7CnJ,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,MAAM1C,MAAO,CAAEuT,MAAO,QAASI,OAAQ,QAAS5K,gBAAiB,QACrEnJ,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsU,OAAQ,IAAKtL,QAAS,OAAQgB,MAAO,SAAWnB,UAAU,cAAcpB,KAAKa,MAAMe,eAAiB5B,KAAKa,MAAMe,eAAehE,MAAQ,KAEvJzF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE8I,UAAW,OAAQG,OAAQ,kBAAmBsL,WAAY,MAAOrL,aAAc,MAAOqK,MAAO,QAASrT,UAAW,SAAU6I,gBAAiB,UACtJnJ,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,YAGAvD,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,YAGAvD,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,UAKAvD,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,QAGR+E,KAAKa,MAAMe,gBAAkB5B,KAAKa,MAAMxE,oBAAsB2D,KAAKa,MAAMxE,mBAAmBoB,OAAS,GAAKuC,KAAKsJ,0BAA0BvG,IAAI,SAAA3I,GACzI,OACIjC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0U,GAAD,CAAS3S,KAAMA,EAAM6G,QAAS2K,EAAK/K,MAAMI,QAASW,eAAgBgK,EAAK/K,MAAMe,eAAgBV,SAAU0K,EAAK/K,MAAMK,SAAUY,cAAe8J,EAAK9J,cAAeY,YAAakJ,EAAKlJ,YAAarH,OAAQuQ,EAAK/K,MAAMxF,cAOzOlD,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,QAAS4K,OAAQ,OAAQL,SAAU,OAAQrK,OAAQ,oBAAqBwL,WAAY,oBAC5KhN,KAAKa,MAAM4I,eAAiBzJ,KAAKa,MAAM4I,cAAchM,OAAS,GAAKuC,KAAKa,MAAM4I,cAAc1G,IAAI,SAAA3I,GAC7F,OACIjC,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,QAASC,OAAQ,SAAU5T,EAAAC,EAAAC,cAAA,KAAGqI,QAAS,WACxDkL,EAAKhJ,SAAS,CACVgH,aAAcxP,EAAK+G,SACnB3F,OAAQ,GACRmO,KAAI,KAETpR,MAAO,CAAEgK,MAAO,QAASmK,eAAgB,OAAQlK,OAAQ,WAAajC,KAAI,IAAAtG,OAAMG,EAAK+G,WAAYhJ,EAAAC,EAAAC,cAAA,SAAK+B,EAAK+G,UAAY/G,EAAK4H,UAAc5H,EAAK+G,SAAW,KAAO/G,EAAK4H,UAAc5H,EAAK+G,SAAW/G,EAAK+G,SAAY/G,EAAK4H,UAAY5H,EAAK4H,UAAY,SAItQ7J,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,QAAS4K,OAAQ,OAAQL,SAAU,OAAQmB,WAAY,MAAOC,YAAa,kBAAmBC,UAAW,kBAAmBN,aAAc,kBAAmBnU,UAAW,WACjQN,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,eACXjJ,EAAAC,EAAAC,cAAC8U,EAAD,kBAjbLpU,aA8drByT,GAAqB,SAAC9P,GACxB,IAAI0Q,EAAW,GAMf,OALA1Q,EAAgBgH,QAAQ,SAAAiB,GACA,WAAhBA,EAAQ9K,MACRuT,EAASrP,KAAK4G,KAGfyI,GAELX,GAAyB,SAAC/P,GAC5B,IAAI0Q,EAAW,GAMf,OALA1Q,EAAgBgH,QAAQ,SAAAiB,GACA,iBAAhBA,EAAQ9K,MACRuT,EAASrP,KAAK4G,KAGfyI,GAEIC,eAAWC,YAjCF,SAACzM,GACrB,MAAO,CACHuI,OAAQvI,EAAMuI,OACd9M,SAAUuE,EAAMvE,SAChBkN,eAAgBnG,GAAkBxC,GAClC6G,cAAe3D,GAAuBlD,KAzBnB,SAACjH,GACxB,MAAO,CAEHqD,oBAAqBsQ,YAAmBtQ,EAAqBrD,GAC7DmD,gBAAiBwQ,YAAmBxQ,EAAiBnD,GACrDD,kBAAmB4T,YAAmB5T,EAAmBC,GACzD6C,0BAA2B8Q,YAAmB9Q,EAA2B7C,GACzEgC,kBAAmB2R,YAAmB3R,EAAmBhC,GACzDuD,OAAQoQ,YAAmBpQ,EAAQvD,GACnCoB,wBAAyBuS,YAAmBvS,EAAyBpB,GACrE0B,wBAAyBiS,YAAmBjS,EAAyB1B,GACrE2B,iBAAkBgS,YAAmBhS,EAAkB3B,GACvD+B,cAAe4R,YAAmB5R,EAAe/B,GACjD6B,mBAAoB8R,YAAmB9R,EAAoB7B,GAC3Dc,+BAAgC6S,YAAmB7S,EAAgCd,GACnFY,iCAAkC+S,YAAmB/S,EAAkCZ,GACvFE,4BAA6ByT,YAAmBzT,EAA6BF,KAqC3D0T,CAA6C7E,KCzgBjEzP,WAAO,IAAIC,IAAOC,OAAO,YACzBC,GAAQ,IAAIF,IAAOC,OAAO,YAC1BE,GAAY,IAAIH,IAAOC,OAAO,eAAe,CAC/CG,OAAOL,GACPM,SAAS,CAACH,MAER0C,GAAQ,IAAI5C,IAAQC,OAAO,WAAW,CACxCM,aAAa,CAACJ,MAELoU,GAAqB,IAAIvU,IAAOC,OAAO,iBAAiB,CACjE0N,SAAS,CAAC/K,MCRRpC,GAAQC,EAAQ,GACf,SAAS+T,KACZ,OAAO,SAAA7T,GACHA,EAAS,CACLC,KAAM,2BAIX,SAASmB,GAAwBC,GACpC,IAAIC,EAAO,CACXA,KAAY,YAEZ,OADAA,EAAKD,GAAKA,EACH,SAAArB,GACHH,GAAM0B,KAAN,GAAAlB,OAAcC,yBAAd,iCAA2E,CAAEgB,SACxEf,KAAK,SAAAiB,GACFA,EAAIhB,KAAKhB,YAAYiC,QAAS,EAC9BzB,EAAS,CACLC,KAAM,mCACNS,QAASc,EAAIhB,KAAKhB,iBAK/B,SAASkC,GAAwBL,GACpC,IAAIC,EAAO,CACXA,KAAY,YAEZ,OADAA,EAAKD,GAAKA,EACH,SAAArB,GACHH,GAAM0B,KAAN,GAAAlB,OAAcC,yBAAd,iCAA2E,CAAEgB,SACxEf,KAAK,SAAAiB,GACFA,EAAIhB,KAAKhB,YAAYiC,QAAS,EAC9BzB,EAAS,CACLC,KAAM,mCACNS,QAASc,EAAIhB,KAAKhB,iBAK/B,SAASsU,GAAgB5R,GAC5B,OAAO,SAAAlC,GACHA,EAAS,CACLC,KAAK,gBACLS,QAAQwB,KAIb,SAAS6R,GAAyB1S,GACrC,OAAO,SAAArB,GACHA,EAAS,CACLC,KAAM,oBAEVJ,GAAMO,IAAN,GAAAC,OAAaC,yBAAb,iCAAAD,OAAyEgB,EAAzE,wBAAkGd,KAAK,SAAAC,GAEnG,GAAoB,WADKA,EAAKA,KAAtBC,aACuB,CAC3B,IAAM2B,EAAwB5B,EAAKA,KAAKA,KAClC8B,EAAeC,YAAUH,EAAsBwR,IACrD5T,EAAS,CACLC,KAAM,qBACNS,QAAS0B,IAEbpC,EAAS,CACLC,KAAK,yBACLS,QAAQ4B,EAAeE,gBAI3BxC,EAAS,CACLC,KAAM,mBAGfe,MAAM,SAAA4B,GACL5C,EAAS,CACLC,KAAM,kBAEViB,QAAQC,IAAI,gDAAiDyB,UCtC1DmE,eApCX,SAAAA,EAAYd,GAAO,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAAW,IACfC,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAa,GAAAR,KAAAH,KAAMH,KACDgB,MAAQ,CACTC,WAAY,QAHDF,wEAOV,IAAAG,EAAAf,KAAAgB,EACchB,KAAKH,MAAnBoB,EADAD,EACAC,QAAQ7G,EADR4G,EACQ5G,KACb,OACIjC,EAAAC,EAAAC,cAAA,OAAK4C,GAAIb,EAAKwK,WACVzM,EAAAC,EAAAC,cAAA,OAAK4C,GAAIgG,EAAQ7G,EAAKf,QAAQ8H,SAAUC,UAAU,WAAW7I,MAAO,CAAE8I,UAAW,OAAQC,gBAAiB,QAASC,QAAS,OAAQC,OAAQ,kBAAmBC,aAAc,QACzKtJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgK,MAAO,OAAQC,OAAQ,WAC/B9B,QAAS,WACLK,EAAKlB,MAAM4N,2BACX1M,EAAKlB,MAAM9C,gBAAgB,CAAEa,MAAOxD,EAAKiN,YAAa3L,MAAOtB,EAAKiN,YAAapM,GAAIb,EAAKwK,UAAWwF,SAAU,eAC7GhQ,EAAKuH,QAAS,IAJtB,IAI4BvH,EAAKiN,aAAiB,OAAQjN,EAAKyH,YAC/D1J,EAAAC,EAAAC,cAAA,OAAKqI,QAAS,kBAAMK,EAAKlB,MAAMiC,cAAc,CAAEQ,QAASlI,EAAKwN,SAAU7F,aAAcd,EAAQ7G,EAAKf,QAAQ2I,UAAWC,YAAahB,EAAQ7G,EAAKf,QAAQ8H,SAAUe,KAAMjB,EAAQ7G,EAAKf,QAAQ8I,IAAKC,KAAMnB,EAAQ7G,EAAKf,QAAQgJ,OAAQ9J,MAAO,CAAEgK,MAAO,MAAOC,OAAQ,YAAcvB,EAAQ7G,EAAKf,QAAQ2I,UAAW,IAAKf,EAAQ7G,EAAKf,QAAQ8H,UAC3UhJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,cACXjJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgK,MAAOnI,EAAKiB,OAAO,MAAM,QAAS+F,UAAU,eAAeV,QAAS,WAAKK,EAAKlB,MAAM6C,YAAYtI,EAAKa,OADrH,QACuIb,EAAKuI,MAAMvI,EAAKuI,MAAM,EAD7J,aAC6KxK,EAAAC,EAAAC,cAAA,QAAM+I,UAAU,gBAAgBV,QAAS,WAC9MK,EAAK6B,SAAS,CACV9B,WAAqC,QAAzBC,EAAKF,MAAMC,WAAuB,QAAU,UAE7DvI,MAAO,CAAEiK,OAAQ,YAJqJ,YAM7KrK,EAAAC,EAAAC,cAAA,OAAK4C,GAAIb,EAAKa,GAAI1C,MAAO,CAAE8I,UAAW,OAAQ7I,QAAS,CAACwH,KAAKa,MAAMC,cAAiB1G,EAAKyI,gBAAgB1K,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE+I,gBAAiB,YAAclH,EAAK0I,oBA1BzJ/J,aCqBhB6U,eACF,SAAAA,EAAY/N,GAAO,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAA4N,IACfhN,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8N,GAAAzN,KAAAH,KAAMH,KACDgB,MAAQ,CACTe,eAAgBhB,EAAKf,MAAMuJ,OAAOxH,eAClCiH,WAAYjI,EAAKf,MAAM8G,gBAAgBkC,WACvCC,eAAgBlI,EAAKf,MAAM8G,gBAAgBmC,eAC3CC,gBAAiBnI,EAAKf,MAAM8G,gBAAgBoC,gBAI5C9H,QAAQL,EAAKf,MAAM8G,gBAAgB1F,QACnCC,SAASN,EAAKf,MAAM8G,gBAAgBzF,SACpC2M,eAAejN,EAAKf,MAAMgO,eAC1BC,mBAAmBlN,EAAKf,MAAMiO,mBAC9BpG,cAAc9G,EAAKf,MAAM6H,cACzBnN,aAAaqG,EAAKf,MAAM8G,gBAAgBvN,aAK5CwH,EAAKkB,cAAgBlB,EAAKkB,cAAcgI,KAAnBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACrBA,EAAK8B,YAAY9B,EAAK8B,YAAYoH,KAAjBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACbA,EAAKf,MAAMuJ,OAAOxH,gBACdhB,EAAKf,MAAMuJ,OAAOxH,eAAe3G,IACgB,oBAA7C2F,EAAKf,MAAMuJ,OAAOxH,eAAewI,UACjCxJ,EAAKf,MAAM8N,yBAAyB/M,EAAKf,MAAMuJ,OAAOxH,eAAe3G,IAzBlE2F,iFA8BDmN,GACd,OAAO,IAAIvO,QAAQ,SAACC,EAASC,GACzBC,KAAMxE,KAAN,GAAAlB,OAAcC,yBAAd,+BAAyE,CAAE6T,YAAW5T,KAAK,SAAAC,GACvF,GAAGA,EAAKA,KAAK0B,IAAI,CACb,IAAIS,EAASnC,EAAKA,KAAK0B,IAAI8F,eAC3BnC,EAAQlD,GAEZkD,EAAQ,QACT7E,MAAM,SAAAC,GACLC,QAAQC,IAAIF,kLAKhBmF,KAAKH,MAAM6K,MAAMC,OAAOpN,0BACpByC,KAAKH,MAAM6K,MAAMC,OAAOpN,OAAQqN,KAAYjM,MAAMqB,KAAKH,MAAMgL,SAASC,QAAQxL,gCAC1EA,EAAU,GAEc,kBADxByL,EAAeH,KAAYjM,MAAMqB,KAAKH,MAAMgL,SAASC,QAAQxL,SAE7DA,EAAQvB,KAAKgN,GAEbzL,EAAUyL,WAEWzN,GAAgBgC,iBAArC0L,UACA+C,EAAU,IACNxQ,KAAOyC,KAAKH,MAAM6K,MAAMC,OAAOpN,KACvCwQ,EAAQC,SAAWhD,EAAajI,IAAI,SAAAkL,GAAK,OAAIA,EAAMhT,eAChC+E,KAAKkO,kBAAkBH,gBAAtCxR,2BAEAyD,KAAK4C,SAAS,CACVhB,eAAgBrF,IAEpByD,KAAKH,MAAM1C,OAAO6N,GAClBhL,KAAKH,MAAM9C,gBAAgBR,oDAEpBpE,EAAAC,EAAAC,cAAC8V,EAAA,EAAD,CAAUC,GAAG,qDAGpBL,EAAU,IACNxQ,KAAOyC,KAAKH,MAAM6K,MAAMC,OAAOpN,KACvCwQ,EAAQC,SAAW,aACAhO,KAAKkO,kBAAkBH,WAAtCxR,SACJyD,KAAKH,MAAM9C,gBAAgBR,GAC3ByD,KAAK4C,SAAS,CACVhB,eAAgBrF,IAEpByD,KAAKH,MAAM8N,yBAAyB3N,KAAKa,MAAMe,eAAe3G,iMAI1CiQ,8EACxBlL,KAAKa,MAAMe,gBAAkBsJ,EAAU9B,OAAOxH,gBAC9C5B,KAAKH,MAAM4N,2BACXzN,KAAK4C,SAAS,CACVhB,eAAgBsJ,EAAU9B,OAAOxH,eACjCiH,WAAYqC,EAAUvE,gBAAgBkC,WACtCC,eAAgBoC,EAAUvE,gBAAgBmC,eAC1CC,gBAAiBmC,EAAUvE,gBAAgBoC,gBAI3C9H,QAAQiK,EAAUvE,gBAAgB1F,QAClCC,SAASgK,EAAUvE,gBAAgBzF,SACnC2M,eAAe3C,EAAU2C,eACzBC,mBAAmB5C,EAAU4C,mBAC7BpG,cAAcwD,EAAUxD,cACxBnN,aAAa2Q,EAAUvE,gBAAgBvN,cAMvC8R,EAAU9B,OAAOxH,eAAe3G,IAAkD,oBAA5CiQ,EAAU9B,OAAOxH,eAAewI,UACtEpK,KAAKH,MAAM8N,yBAAyBzC,EAAU9B,OAAOxH,eAAe3G,KAIxE+E,KAAK4C,SAAS,CACViG,WAAYqC,EAAUvE,gBAAgBkC,WACtCC,eAAgBoC,EAAUvE,gBAAgBmC,eAC1CC,gBAAiBmC,EAAUvE,gBAAgBoC,gBAI3C9H,QAAQiK,EAAUvE,gBAAgB1F,QAClCC,SAASgK,EAAUvE,gBAAgBzF,SACnC2M,eAAe3C,EAAU2C,eACzBC,mBAAmB5C,EAAU4C,mBAC7BpG,cAAcwD,EAAUxD,cACxBnN,aAAa2Q,EAAUvE,gBAAgBvN,cAM3C4G,KAAKH,MAAMuJ,OAAOkB,KAAK7M,SAAWyN,EAAU9B,OAAOkB,KAAK7M,2BACR,oBAA5CyN,EAAU9B,OAAOxH,eAAewI,iCAC5B2D,EAAU,IACNxQ,KAAO2N,EAAU9B,OAAOxH,eAAelG,MAC/CqS,EAAQC,SAAW9C,EAAU9B,OAAOkB,KAAKvH,IAAI,SAAAkL,GAAK,OAAIA,EAAMhT,cACzC+E,KAAKkO,kBAAkBH,WAAtCxR,WAEAyD,KAAK4C,SAAS,CACVhB,eAAgBrF,IAEpByD,KAAKH,MAAM8N,yBAAyBzC,EAAU9B,OAAOxH,eAAe3G,KAGrE+E,KAAKH,MAAMoL,QAAQlN,KAAK,oJAM3B9C,GACJ+E,KAAKa,MAAMtG,aAAaU,GAAII,OAC5B2E,KAAKH,MAAMvE,wBAAwBL,GAGnC+E,KAAKH,MAAM7E,wBAAwBC,yCAG7BjC,GACV,IAAI4E,EAAQ5E,EAAO+I,aAAe,IAAM/I,EAAOiJ,YAC3CvG,EAAQkC,EACR3C,EAAKjC,EAAOsJ,QACZJ,EAAOlJ,EAAOkJ,KACdE,EAAOpJ,EAAOoJ,KAElBpC,KAAKH,MAAM4N,2BACXzN,KAAKH,MAAM9C,gBAAgB,CAAEa,QAAOlC,QAAOT,KAAIiH,OAAME,OAAMgI,SAF5C,6CAIV,IAAArJ,EAAAf,KACL,OACI7H,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,iBAAiB7I,MAAO,CAAEsT,SAAU,WAC9C7L,KAAKa,MAAMe,eAAe3G,IAA4C,oBAAtC+E,KAAKa,MAAMe,eAAewI,UAAkCjS,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,mBACvGpB,KAAKa,MAAMgI,YAAc1Q,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,QAASC,OAAQ,OAAQ1K,UAAW,SAC/ElJ,EAAAC,EAAAC,cAAC2T,EAAA5T,EAAD,CAAcyB,KAAM,QAAS0I,MAAO,UAEtCvC,KAAKa,MAAMgI,aAAe7I,KAAKa,MAAMkI,kBAAoB/I,KAAKa,MAAMiI,gBAAkB3Q,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,OACnGjJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,QAAS4K,OAAQ,OAAQL,SAAU,OAAQrK,OAAQ,kBAAmB/I,UAAW,KACzKuH,KAAKa,MAAMgN,gBAAgB7N,KAAKa,MAAMgN,eAAepQ,OAAS,GAAKtF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,QAASC,OAAQ,SACpG/L,KAAKa,MAAMgN,eAAe9K,IAAI,SAAAlH,GAC5B,QAAoBwS,GAAhBxS,EAAQ0B,KACR,OAAOpF,EAAAC,EAAAC,cAAA,KAAGqI,QAAS,WACfK,EAAKlB,MAAM6N,gBACP,CACIzG,gBAAgB,EAChBD,eAAe,KAGxBzG,KAAM,IAAM1E,EAAQZ,GAAI1C,MAAO,CAAEiK,OAAQ,UAAWkK,eAAgB,OAAQnK,MAAO,QAAS/J,QAAS,UAAYqD,EAAQ0B,UAK5IpF,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,UAAW4K,OAAQ,OAAQU,aAAc,iBAAkBf,SAAU,SAC9J1T,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,eAAe1C,MAAO,CAAE+I,gBAAiB,YAC7CnJ,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,MAAM1C,MAAO,CAAEuT,MAAO,QAASI,OAAQ,QAAS5K,gBAAiB,QACrEnJ,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsU,OAAQ,IAAKtL,QAAS,OAAQgB,MAAO,SAAWnB,UAAU,cAAcpB,KAAKa,MAAMe,eAAiB5B,KAAKa,MAAMe,eAAehE,MAAQ,KAEvJzF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE8I,UAAW,OAAQG,OAAQ,kBAAmBsL,WAAY,MAAOrL,aAAc,MAAOqK,MAAO,QAASrT,UAAW,SAAU6I,gBAAiB,UACtJnJ,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,YAGAvD,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,YAGAvD,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,UAKAsE,KAAKa,MAAMiN,oBAAsB9N,KAAKa,MAAMiN,mBAAmBrQ,OAAS,GAAKuC,KAAKa,MAAMiN,mBAAmB/K,IAAI,SAAA3I,GAE3G,OACIjC,EAAAC,EAAAC,cAACiW,GAAD,CACIlU,KAAMA,EACN0H,cAAef,EAAKe,cACpB2L,yBAA0B1M,EAAKlB,MAAM4N,yBACrC1Q,gBAAiBgE,EAAKlB,MAAM9C,gBAC5BkE,QAASF,EAAKF,MAAMI,QACpByB,YAAa3B,EAAK2B,kBAO1CvK,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,QAAS4K,OAAQ,OAAQL,SAAU,OAAQrK,OAAQ,iBAAkB/I,UAAW,KACxKuH,KAAKa,MAAM6G,eAAiB1H,KAAKa,MAAM6G,cAAcjK,OAAS,GAAKuC,KAAKa,MAAM6G,cAAc3E,IAAI,SAAA3I,GAC7F,OACIjC,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEgJ,QAAS,YAAauK,MAAO,QAASC,OAAQ,SAAU5T,EAAAC,EAAAC,cAAA,KAAGqI,QAAS,WAC9EK,EAAKlB,MAAM6N,gBACP,CACI1G,eAAe,EACfC,gBAAgB,KAGzB1O,MAAO,CAAEgK,MAAO,QAASmK,eAAgB,OAAQlK,OAAQ,WAAajC,KAAM,IAAMnG,EAAK+G,UAAY/G,EAAK+G,UAAY/G,EAAK4H,UAAc5H,EAAK+G,SAAW,KAAO/G,EAAK4H,UAAc5H,EAAK+G,SAAW/G,EAAK+G,SAAY/G,EAAK4H,UAAY5H,EAAK4H,UAAY,QAKnQ7J,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,QAAS4K,OAAQ,OAAQL,SAAU,OAAQmB,WAAY,MAAOC,YAAa,kBAAmBC,UAAW,kBAAmBN,aAAc,kBAAmBnU,UAAW,WACjQN,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,eAAf,qCA5OMrI,aA6QnBsU,eAAWC,YAVF,SAACzM,GACrB,MAAO,CACHuI,OAAQvI,EAAMuI,OACdzC,gBAAiB9F,EAAM8F,gBACvBkH,eAAepH,GAA0C5F,GACzDiN,mBAAmB/G,GAAkClG,GACrD6G,cAAcF,GAAmC3G,KAlB9B,SAACjH,GACxB,MAAO,CACHqD,oBAAqBsQ,YAAmBtQ,EAAqBrD,GAC7DmD,gBAAiBwQ,YAAmBxQ,EAAiBnD,GACrD6T,yBAA0BF,YAAmBE,GAA0B7T,GACvE+T,yBAA0BJ,YAAmBI,GAA0B/T,GACvEuD,OAAQoQ,YAAmBpQ,EAAQvD,GACnC8T,gBAAgBH,YAAmBG,GAAgB9T,GACnDoB,wBAAwBuS,YAAmBvS,GAAwBpB,GACnE0B,wBAAwBiS,YAAmBjS,GAAwB1B,KAajD0T,CAA6CM,KCtRxDW,oLAVP,OACIpW,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACwT,OAAO,aAAatT,UAAU,WACvCN,EAAAC,EAAAC,cAAA,qCAJMU,aCCTyV,IAFK,IAAIvV,IAAOC,OAAO,gBAEH,IAAID,IAAOC,OAAO,gBAAgB,KCA5D,SAASuV,KACZ,OAAO,SAAA7U,GACHA,EAAS,CACLC,KAAM,0BA6HX,SAAS6U,GAAiBzT,EAAI0T,GAEjC,OAAO,SAAA/U,GACHA,EAAS,CACLC,KAAM,oBAkBlB,SAAgCoB,EAAI0T,GAEhC,OAAO,IAAInP,QAAJ,eAAAgB,EAAAV,OAAA8O,EAAA,EAAA9O,CAAA+O,EAAAzW,EAAA0W,KAAY,SAAAC,EAAO3T,EAAK4T,GAAZ,IAAAzS,EAAA0S,EAAA,OAAAJ,EAAAzW,EAAA8W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACX9S,EAAS,GADE4S,EAAAC,KAAA,EAGPH,EAAU,GACF,oBAARN,EAJO,CAAAQ,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAMS5V,KAAMO,IAAN,GAAAC,OAAaC,yBAAb,gCAAAD,OAAwEgB,EAAxE,qCANT,OAMPgU,EANOE,EAAAG,KAAAH,EAAAE,KAAA,mBAQM,kBAARV,EARE,CAAAQ,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GASS5V,KAAMO,IAAN,GAAAC,OAAaC,yBAAb,8BAAAD,OAAsEgB,EAAtE,qCATT,QASPgU,EATOE,EAAAG,KAAA,QAWsB,WAA7BL,EAAQ7U,KAAKC,eACbS,QAAQC,IAAI,yBACZwB,EAAS0S,EAAQ7U,KAAKA,MAE1BgB,EAAImB,GAfO4S,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAI,GAAAJ,EAAA,SAiBXrU,QAAQC,IAAI,wCAAZoU,EAAAI,IACAP,EAAIzS,GAlBO,yBAAA4S,EAAAK,SAAAT,EAAA,kBAAZ,gBAAAU,EAAAC,GAAA,OAAAlP,EAAA0G,MAAAlH,KAAA2P,YAAA,IAlBHC,CAAuB3U,EAAI0T,GAAKxU,KAAK,SAAAC,GACjC,IAAI8B,EAAeC,YAAU/B,EAAK,CAACoU,KACnCtS,EAAe9B,KAAKA,EACpBU,QAAQC,IAAImB,GACZtC,EAAS,CACLC,KAAM,6BACNS,QAAS4B,MAEdtB,MAAM,SAAA4B,GACL5C,EAAS,CACLC,KAAM,kBAEViB,QAAQC,IAAI,8CAA+CyB,MA6BhE,SAASkR,GAAgB5R,GAC5B,OAAO,SAAAlC,GACHA,EAAS,CACLC,KAAK,gBACLS,QAAQwB,KAKb,SAASd,GAAwBC,GACpC,IAAIC,EAAO,CACXA,KAAY,YAEZ,OADAA,EAAKD,GAAKA,EACH,SAAArB,GACHH,KAAM0B,KAAN,GAAAlB,OAAcC,yBAAd,iCAA2E,CAAEgB,SACxEf,KAAK,SAAAiB,GACFA,EAAIhB,KAAKhB,YAAYiC,QAAS,EAC9BzB,EAAS,CACLC,KAAM,kCACNS,QAASc,EAAIhB,KAAKhB,iBAK/B,SAASkC,GAAwBL,GACpC,IAAIC,EAAO,CACXA,KAAY,YAEZ,OADAA,EAAKD,GAAKA,EACH,SAAArB,GACHH,KAAM0B,KAAN,GAAAlB,OAAcC,yBAAd,iCAA2E,CAAEgB,SACxEf,KAAK,SAAAiB,GACFA,EAAIhB,KAAKhB,YAAYiC,QAAS,EAC9BzB,EAAS,CACLC,KAAM,kCACNS,QAASc,EAAIhB,KAAKhB,qBC3LhCyW,eACF,SAAAA,EAAYhQ,GAAO,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAA6P,IACfjP,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+P,GAAA1P,KAAAH,KAAMH,KAuDVvC,gBAAkB,SAACgC,GACf,IAAIC,EAAY,GAEhB,OADAA,EAAUD,QAAUA,EACb,IAAIE,QAAQ,SAACC,EAASC,GACzBC,KAAMxE,KAAN,GAAAlB,OAAcC,yBAAd,6BAAuEqF,GAClEpF,KAAK,SAAAC,GACFqF,EAAQrF,EAAKA,QAEhBQ,MAAM,SAAAC,GACHC,QAAQC,IAAIF,QA/DxB+F,EAAKC,MAAQ,CACTe,eAAgBhB,EAAKf,MAAMuJ,OAAOxH,eAGlCiH,WAAYjI,EAAKf,MAAMiI,cAAce,WACrCC,eAAgBlI,EAAKf,MAAMiI,cAAcgB,eACzCC,gBAAiBnI,EAAKf,MAAMiI,cAAciB,gBAI1C+G,oBAAqBlP,EAAKf,MAAMiQ,oBAChCC,2BAA4BnP,EAAKf,MAAMkQ,2BACvCC,0BAA2BpP,EAAKf,MAAMmQ,0BACtCzV,aAAaqG,EAAKf,MAAMiI,cAAcC,eAG1CnH,EAAKkB,cAAgBlB,EAAKkB,cAAcgI,KAAnBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACrBA,EAAK8B,YAAY9B,EAAK8B,YAAYoH,KAAjBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAEbA,EAAKf,MAAMuJ,OAAOxH,gBACdhB,EAAKf,MAAMuJ,OAAOxH,eAAe3G,KACgB,mBAA7C2F,EAAKf,MAAMuJ,OAAOxH,eAAewI,UACjCxJ,EAAKf,MAAM6O,iBAAiB9N,EAAKf,MAAMuJ,OAAOxH,eAAe3G,GAAI,mBAOpB,iBAA7C2F,EAAKf,MAAMuJ,OAAOxH,eAAewI,UACjCxJ,EAAKf,MAAM6O,iBAAiB9N,EAAKf,MAAMuJ,OAAOxH,eAAe3G,GAAI,kBAhC9D2F,gFA0CFmN,GACb,OAAO,IAAIvO,QAAQ,SAACC,EAASC,GACzBC,KAAMxE,KAAN,GAAAlB,OAAcC,yBAAd,+BAAyE,CAAE6T,YAAW5T,KAAK,SAAAC,GACvF,GAAIA,EAAKA,KAAK0B,IAAK,CACf,IAAIS,EAASnC,EAAKA,KAAK0B,IAAI8F,eAC3BnC,EAAQlD,GAGZkD,EAAQ,MACT7E,MAAM,SAAAC,GACLC,QAAQC,IAAIF,4FAiBE0C,kFACnB+B,EAAQ,CAACU,KAAKH,MAAM6K,MAAMC,OAAOpN,eACfyC,KAAK1C,gBAAgBgC,WAAvC2Q,UACW,KACXA,EAAYA,EAAY,GACxBjQ,KAAKH,MAAM9C,gBAAgB,CACvBa,MAAMqS,EAAYrS,MAClBlC,MAAMuU,EAAYvU,MAClBT,GAAGgV,EAAYhV,GACfmP,SAAS,kSAKZ8F,EAAIlQ,KAAKH,MAAMgL,SAASsF,SAASC,MAAM,KAAK,IAC5CpQ,KAAKH,MAAM6K,MAAMC,OAAOpN,0BACpByC,KAAKH,MAAM6K,MAAMC,OAAOpN,OAAQqN,KAAYjM,MAAMqB,KAAKH,MAAMgL,SAASC,QAAQxL,4BAC1EA,EAAU,GACN,iBAAL4Q,GAA2B,iBAALA,kBACrBlQ,KAAKqQ,oDAGuB,kBADxBtF,EAAeH,KAAYjM,MAAMqB,KAAKH,MAAMgL,SAASC,QAAQxL,SAE7DA,EAAQvB,KAAKgN,GAEbzL,EAAUyL,YAEW/K,KAAK1C,gBAAgBgC,kBAA1C0L,UACA+C,EAAU,IACNxQ,KAAOyC,KAAKH,MAAM6K,MAAMC,OAAOpN,KACvCwQ,EAAQC,SAAWhD,EAAajI,IAAI,SAAAkL,GAAK,OAAIA,EAAMhT,eAChC+E,KAAKsQ,iBAAiBvC,YAArCxR,WAEAyD,KAAKH,MAAM1C,OAAO6N,GAClBhL,KAAKH,MAAM9C,gBAAgBR,GAC3ByD,KAAK4C,SAAS,CACVhB,eAAgBrF,KAGpByD,KAAKH,MAAMoL,QAAQlN,KAAK,kDAKxB,iBAALmS,GAA2B,iBAALA,GACvBlQ,KAAKqQ,wBAEHtC,EAAU,IACNxQ,KAAOyC,KAAKH,MAAM6K,MAAMC,OAAOpN,KACvCwQ,EAAQC,SAAW,aACAhO,KAAKsQ,iBAAiBvC,YAArCxR,WAEAyD,KAAKH,MAAM9C,gBAAgBR,GAC3ByD,KAAK4C,SAAS,CACVhB,eAAgBrF,IAEpByD,KAAKH,MAAM6O,iBAAiB1O,KAAKH,MAAMuJ,OAAOxH,eAAe3G,GAAI,oBAEjE+E,KAAKH,MAAMoL,QAAQlN,KAAK,yMAMRmN,kFACxBlL,KAAKH,MAAMuJ,OAAOkB,KAAK7M,SAAWyN,EAAU9B,OAAOkB,KAAK7M,2BACpDyN,EAAU9B,OAAOxH,gBAA8D,mBAA5CsJ,EAAU9B,OAAOxH,eAAewI,gCAC/D2D,EAAU,IACNxQ,KAAO2N,EAAU9B,OAAOxH,eAAelG,MAC/CqS,EAAQC,SAAW9C,EAAU9B,OAAOkB,KAAKvH,IAAI,SAAAkL,GAAK,OAAIA,EAAMhT,cACzC+E,KAAKsQ,iBAAiBvC,WAArCxR,WAEAyD,KAAKH,MAAM9C,gBAAgBR,GAC3ByD,KAAK4C,SAAS,CACVhB,eAAgBrF,IAEpByD,KAAKH,MAAM6O,iBAAiB1O,KAAKH,MAAMuJ,OAAOxH,eAAe3G,GAAI,oBAEjE+E,KAAKH,MAAMoL,QAAQlN,KAAK,sBAMhCiC,KAAKH,MAAMuJ,OAAOkB,KAAK7M,SAAWyN,EAAU9B,OAAOkB,KAAK7M,4BACpDyN,EAAU9B,OAAOxH,gBAA8D,iBAA5CsJ,EAAU9B,OAAOxH,eAAewI,iCAC/D2D,EAAU,IACNxQ,KAAO2N,EAAU9B,OAAOxH,eAAelG,MAC/CqS,EAAQC,SAAW9C,EAAU9B,OAAOkB,KAAKvH,IAAI,SAAAkL,GAAK,OAAIA,EAAMhT,eACzC+E,KAAKsQ,iBAAiBvC,YAArCxR,WAEAyD,KAAKH,MAAM9C,gBAAgBR,GAC3ByD,KAAK4C,SAAS,CACVhB,eAAgBrF,IAEpByD,KAAKH,MAAM6O,iBAAiB1O,KAAKH,MAAMuJ,OAAOxH,eAAe3G,GAAI,kBAEjE+E,KAAKH,MAAMoL,QAAQlN,KAAK,oBAOhCiC,KAAKa,MAAMe,gBAAkBsJ,EAAU9B,OAAOxH,gBAC9C5B,KAAK4C,SAAS,CACVhB,eAAgBsJ,EAAU9B,OAAOxH,eAEjCiH,WAAYqC,EAAUpD,cAAce,WACpCC,eAAgBoC,EAAUpD,cAAcgB,eACxCC,gBAAiBmC,EAAUpD,cAAciB,gBAGzC+G,oBAAqB5E,EAAU4E,oBAC/BC,2BAA4B7E,EAAU6E,2BACtCC,0BAA2B9E,EAAU8E,0BACrCzV,aAAa2Q,EAAUpD,cAAcC,gBAGrCmD,EAAU9B,OAAOxH,eAAe3G,IAAkD,mBAA5CiQ,EAAU9B,OAAOxH,eAAewI,UACtEpK,KAAKH,MAAM6O,iBAAiBxD,EAAU9B,OAAOxH,eAAe3G,GAAI,mBAGhEiQ,EAAU9B,OAAOxH,eAAe3G,IAAkD,iBAA5CiQ,EAAU9B,OAAOxH,eAAewI,UACtEpK,KAAKH,MAAM6O,iBAAiBxD,EAAU9B,OAAOxH,eAAe3G,GAAI,kBAIpE+E,KAAK4C,SAAS,CAEViG,WAAYqC,EAAUpD,cAAce,WACpCC,eAAgBoC,EAAUpD,cAAcgB,eACxCC,gBAAiBmC,EAAUpD,cAAciB,gBAGzC+G,oBAAqB5E,EAAU4E,oBAC/BC,2BAA4B7E,EAAU6E,2BACtCC,0BAA2B9E,EAAU8E,0BACrCzV,aAAa2Q,EAAUpD,cAAcC,0JAMnC/O,GACV,IAAI4E,EAAQ5E,EAAO+I,aAAe,IAAM/I,EAAOiJ,YAC3CvG,EAAQkC,EACR3C,EAAKjC,EAAOsJ,QACZJ,EAAOlJ,EAAOkJ,KACdE,EAAOpJ,EAAOoJ,KAElBpC,KAAKH,MAAM4O,0BACXzO,KAAKH,MAAM9C,gBAAgB,CAAEa,QAAOlC,QAAOT,KAAIiH,OAAME,OAAMgI,SAF5C,gDAIPnP,GACJ+E,KAAKa,MAAMtG,aAAaU,GAAII,OAC5B2E,KAAKH,MAAMvE,wBAAwBL,GAGnC+E,KAAKH,MAAM7E,wBAAwBC,oCAyClC,IAAA8F,EAAAf,KACDuQ,EAAM,GACV,OACIpY,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,iBAAiB7I,MAAO,CAAEsT,SAAU,WAC9C7L,KAAKa,MAAMe,eAAe3G,KAA6C,mBAAtC+E,KAAKa,MAAMe,eAAewI,UAAuE,iBAAtCpK,KAAKa,MAAMe,eAAewI,WAAgCjS,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,mBACjKpB,KAAKa,MAAMgI,YAAc1Q,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,QAASC,OAAQ,OAAQ1K,UAAW,SAC/ElJ,EAAAC,EAAAC,cAAC2T,EAAA5T,EAAD,CAAcyB,KAAM,QAAS0I,MAAO,UAEtCvC,KAAKa,MAAMgI,aAAe7I,KAAKa,MAAMkI,kBAAoB/I,KAAKa,MAAMiI,gBAAkB3Q,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,OACnGjJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,QAAS4K,OAAQ,OAAQL,SAAU,OAAQrK,OAAQ,kBAAmB/I,UAAW,KACzKuH,KAAKa,MAAMiP,qBAAwB9P,KAAKa,MAAMiP,oBAAoBrS,OAAS,GAAKtF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,QAASC,OAAQ,SAClH/L,KAAKa,MAAMiP,oBAAoB/M,IAAI,SAAAlH,GAChC,QAAoBwS,GAAhBxS,EAAQ0B,KACR,OAAOpF,EAAAC,EAAAC,cAAA,KAAGqI,QAAS,WACfK,EAAKlB,MAAM6N,gBACP,CACI1G,eAAe,EACfC,gBAAgB,KAIzB1G,KAAM,IAAM1E,EAAQZ,GAAI1C,MAAO,CAAEiK,OAAQ,UAAWkK,eAAgB,OAAQnK,MAAO,QAAS/J,QAAS,UAAaqD,EAAQ0B,UAK7IpF,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,UAAW4K,OAAQ,OAAQU,aAAc,iBAAkBf,SAAU,SAC9J1T,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,eAAe1C,MAAO,CAAE+I,gBAAiB,YAC7CnJ,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,MAAM1C,MAAO,CAAEuT,MAAO,QAASI,OAAQ,QAAS5K,gBAAiB,QACrEnJ,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsU,OAAQ,IAAKtL,QAAS,OAAQgB,MAAO,SAAWnB,UAAU,cAAcpB,KAAKa,MAAMe,eAAiB5B,KAAKa,MAAMe,eAAehE,MAAQ,KAEvJzF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE8I,UAAW,OAAQG,OAAQ,kBAAmBsL,WAAY,MAAOrL,aAAc,MAAOqK,MAAO,QAASrT,UAAW,SAAU6I,gBAAiB,UACtJnJ,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,YAGAvD,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,YAGAvD,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,UAKAsE,KAAKa,MAAMkP,4BAA8B/P,KAAKa,MAAMkP,2BAA2BtS,OAAS,GAAKuC,KAAKa,MAAMkP,2BAA2BhN,IAAI,SAAA3I,GACnI,OAAQjC,EAAAC,EAAAC,cAAA,OAAK4C,GAAIb,EAAKiQ,YAAYlS,EAAAC,EAAAC,cAAA,OAAK4C,GAAIb,EAAKiO,eAAgBjH,UAAU,WAAW7I,MAAO,CAAE8I,UAAW,OAAQC,gBAAiB,QAASC,QAAS,OAAQC,OAAQ,kBAAmBC,aAAc,QACjMtJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgK,MAAO,OAAQC,OAAQ,WAAa9B,QAAS,WACrDK,EAAKlB,MAAM4O,0BACX1N,EAAKlB,MAAM9C,gBAAgB,CAAEa,MAAOxD,EAAK8N,YAAaxM,MAAOtB,EAAK8N,YAAajN,GAAIb,EAAKL,UAAWqQ,SAAU,eAC7GhQ,EAAKuH,QAAS,IAHlB,IAGwBvH,EAAK8N,aAAiB,OAAQ9N,EAAKyH,YAC3D1J,EAAAC,EAAAC,cAAA,OAAKqI,QAAS,kBAAMK,EAAKe,cAAc,CAAEQ,QAASlI,EAAKsP,SAAU3H,aAAc3H,EAAKoW,gBAAiBvO,YAAa7H,EAAKiO,eAAgBnG,KAAM,OAAQE,KAAM,UAAW7J,MAAO,CAAEgK,MAAO,MAAOC,OAAQ,YAAcpI,EAAKoW,gBAAiB,IAAKpW,EAAKiO,gBACnPlQ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,cACXjJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgK,MAAMnI,EAAKiB,OAAO,MAAM,QAAS+F,UAAU,cAAcV,QAAS,WAAKK,EAAK2B,YAAYtI,EAAKa,OAD7G,QAC+Hb,EAAKuI,MAAQvI,EAAKuI,MAAQ,EADzJ,aACyKxK,EAAAC,EAAAC,cAAA,QAAM+I,UAAU,gBAAgBV,QAAS,WAC1MK,EAAK6B,SAAS,CACV9B,WAAqC,QAAzBC,EAAKF,MAAMC,WAAuB,QAAU,OACxD7F,GAAIb,EAAKa,MAEd1C,MAAO,CAAEiK,OAAQ,YALiJ,YAOzKrK,EAAAC,EAAAC,cAAA,OAAK4C,GAAIb,EAAKa,GAAI1C,MAAO,CAAE8I,UAAW,OAAQ7I,QAAS,CAAC4B,EAAKa,IAAM8F,EAAKF,MAAM5F,GAAK8F,EAAKF,MAAMC,WAAa,UAAa1G,EAAKqW,iBAAiBtY,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE+I,gBAAiB,YAAclH,EAAK0I,iBAMpN3K,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,QAAS4K,OAAQ,OAAQL,SAAU,OAAQrK,OAAQ,iBAAkB/I,UAAW,KACxKuH,KAAKa,MAAMmP,2BAA6BhQ,KAAKa,MAAMmP,0BAA0BvS,OAAS,GAAKuC,KAAKa,MAAMmP,0BAA0BjN,IAAI,SAAA3I,GACjI,IAAMmW,EAAI3M,SAASxJ,EAAKsP,UAEpB,OADA6G,EAAIxS,KAAK3D,EAAKsP,UAEVvR,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEgJ,QAAS,YAAauK,MAAO,QAASC,OAAQ,SAAU5T,EAAAC,EAAAC,cAAA,KAAGqI,QAAS,WAC9EK,EAAKlB,MAAM6N,gBACP,CACI1G,eAAe,EACfC,gBAAgB,KAIzB1O,MAAO,CAAEgK,MAAO,QAASmK,eAAgB,OAAQlK,OAAQ,WAAajC,KAAM,IAAMnG,EAAKiO,gBAAkBjO,EAAKiO,gBAAkBjO,EAAKoW,gBAAoBpW,EAAKiO,eAAiB,KAAOjO,EAAKoW,gBAAoBpW,EAAKiO,eAAiBjO,EAAKoW,gBAAmBpW,EAAKoW,gBAAkBpW,EAAKoW,gBAAkB,QAK9TrY,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,QAAS4K,OAAQ,OAAQL,SAAU,OAAQmB,WAAY,MAAOC,YAAa,kBAAmBC,UAAW,kBAAmBN,aAAc,kBAAmBnU,UAAW,WACjQN,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,eAAf,qCAjWArI,aA+YbsU,eAAWC,YAVF,SAACzM,GAErB,MAAO,CACHuI,OAAQvI,EAAMuI,OACdtB,cAAejH,EAAMiH,cACrBgI,oBAAqBjI,GAA4ChH,GACjEkP,2BAA4B5H,GAAyCtH,GACrEmP,0BAA2B1H,GAA8CzH,KArBtD,SAACjH,GACxB,MAAO,CAGH6U,wBAAyBlB,YAAmBkB,GAAyB7U,GACrEqD,oBAAqBsQ,YAAmBtQ,EAAqBrD,GAC7DmD,gBAAiBwQ,YAAmBxQ,EAAiBnD,GACrD8U,iBAAkBnB,YAAmBmB,GAAkB9U,GACvDuD,OAAQoQ,YAAmBpQ,EAAQvD,GACnC8T,gBAAiBH,YAAmBG,GAAiB9T,GACrDoB,wBAAwBuS,YAAmBvS,GAAwBpB,GACnE0B,wBAAwBiS,YAAmBjS,GAAwB1B,KAajD0T,CAA6CuC,wBCvajEa,GAAiB,IAAIzX,IAAOC,OAAO,qBACnC+W,GAAa,IAAIhX,IAAOC,OAAO,eAAe,CAChDoN,iBAAiBoK,KAEfC,GAAK,IAAI1X,IAAOC,OAAO,SACvB2C,GAAQ,IAAI5C,IAAOC,OAAO,YAC1BE,GAAY,IAAIH,IAAOC,OAAO,eAAe,CAC/CmM,QAAQxJ,KAEC+U,GAAa,IAAI3X,IAAOC,OAAO,UAAU,CAClDM,aAAa,CAACJ,IACdgN,aAAa,CAAC6J,IACdvK,MAAM,CAACiL,MCTGjX,EAAQ,KACf,SAASmX,KACZ,OAAO,SAAAjX,GACHA,EAAS,CACLC,KAAM,kBAIX,SAASmB,GAAwBC,GACpC,IAAIC,EAAO,CACXA,KAAY,YAEZ,OADAA,EAAKD,GAAKA,EACH,SAAArB,GACHH,KAAM0B,KAAN,GAAAlB,OAAcC,yBAAd,iCAA2E,CAAEgB,SACxEf,KAAK,SAAAiB,GACFA,EAAIhB,KAAKhB,YAAYiC,QAAS,EAC9BzB,EAAS,CACLC,KAAM,0BACNS,QAASc,EAAIhB,KAAKhB,iBAK/B,SAASkC,GAAwBL,GACpC,IAAIC,EAAO,CACXA,KAAY,YAEZ,OADAA,EAAKD,GAAKA,EACH,SAAArB,GACHH,KAAM0B,KAAN,GAAAlB,OAAcC,yBAAd,iCAA2E,CAAEgB,SACxEf,KAAK,SAAAiB,GACFA,EAAIhB,KAAKhB,YAAYiC,QAAS,EAC9BzB,EAAS,CACLC,KAAM,0BACNS,QAASc,EAAIhB,KAAKhB,iBAK/B,SAAS0X,GAA6B7V,GACzC,OAAO,SAAArB,GACHA,EAAS,CACLC,KAAM,+BAEVJ,KAAMO,IAAN,GAAAC,OAAaC,yBAAb,yBAAAD,OAAiEgB,EAAjE,sDAAwHd,KAAK,SAAAC,GAEzH,GAAoB,WADKA,EAAKA,KAAtBC,aACuB,CAE3B,IAAM0W,EAAwB3W,EAAKA,KAAKA,KACxCR,EAAS,CACLC,KAAM,6BACNS,QAASyW,SAIbnX,EAAS,CACLC,KAAM,sCAGfe,MAAM,SAAA4B,GACL5C,EAAS,CACLC,KAAM,qCAEViB,QAAQC,IAAI,sDAAuDyB,MAgBxE,SAASwU,GAAiB/V,GAE7B,OAAO,SAAArB,GACHA,EAAS,CACLC,KAAM,oBAEVJ,KAAMO,IAAN,GAAAC,OAAaC,yBAAb,yBAAAD,OAAiEgB,EAAjE,wBAA0Fd,KAAK,SAAAC,GAE3F,GAAoB,WADKA,EAAKA,KAAtBC,aACuB,CAC3B,IAAM4W,EAlBtB,SAAyB7W,GACrB,IAAIO,EAAmBP,EAAK+G,SAAUiP,MAAM,KAAMc,KAAK,KAAMrT,cACzDsT,EAAoB/W,EAAK4H,UAAWoO,MAAM,KAAMc,KAAK,KAAMrT,cAC/DsT,EAAmBA,EAAkBf,MAAM,KAAMc,KAAK,IACtD,IAAIE,EAAazW,EAAgBV,OAAO,IAAIkX,EAAiB,QAE7D,OADA/W,EAAKiX,YAAL,iDAAApX,OAAkEmX,GAC3DhX,EAYiCkX,CAAiBlX,EAAKA,KAAKA,MACjD8B,EAAgBC,YAAU8U,EAAqBL,IACrD9V,QAAQC,IAAImB,GACZtC,EAAS,CACLC,KAAM,qBACNS,QAAS2W,IAEbrX,EAAS,CACLC,KAAK,iBACLS,QAAQ4B,EAAeE,gBAI3BxC,EAAS,CACLC,KAAM,mBAGfe,MAAM,SAAA4B,GACL5C,EAAS,CACLC,KAAM,kBAEViB,QAAQC,IAAI,+CAAgDyB,UCnGlE+U,eACF,SAAAA,EAAY1R,GAAO,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAAuR,IACf3Q,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyR,GAAApR,KAAAH,KAAMH,KA+DV2R,UAAY,SAACxY,GACT,OAAO,IAAIwG,QAAQ,SAACC,EAASC,GACzBC,KAAMxE,KAAN,GAAAlB,OAAcC,yBAAd,uBAAiE,CAAElB,WAAUmB,KAAK,SAAAC,GAC9E,GAAIA,EAAKA,KAAK0B,IAAK,CACf,IAAIS,EAASnC,EAAKA,KAAK0B,IAAI8F,eAC3BnC,EAAQlD,GAEZkD,EAAQ,QACT7E,MAAM,SAAAC,GACLC,QAAQC,IAAIF,QAvEpB+F,EAAKC,MAAQ,CACT+H,MAAO,GACPhH,eAAgBhB,EAAKf,MAAMuJ,OAAOxH,eAQlC6P,eAAgB7Q,EAAKf,MAAM7G,OAAOyY,eAClCC,0BAA2B9Q,EAAKf,MAAM7G,OAAO0Y,0BAC7CC,0BAA2B/Q,EAAKf,MAAM7G,OAAOyY,eAAeG,uBAC5DC,uBAAwBjR,EAAKf,MAAM7G,OAAOyY,eAAeK,mBACzD7W,GAAI,GACJ6F,WAAY,OACZiR,WAAW,EACXC,gCAAiCC,GAA0CrR,EAAKf,MAAM7G,OAAO0Y,2BAC7FQ,gCAAiCC,GAA0CvR,EAAKf,MAAM7G,OAAOyY,eAAeG,wBAC5GQ,6BAA8BC,GAAuCzR,EAAKf,MAAM7G,OAAOyY,eAAeK,oBACtGQ,MAAO,EACPC,OAAQ,EACRC,OAAQ,EACRnH,QAASzK,EAAKf,MAAM7G,OAAOqS,QAI3B7G,mBAAoB5D,EAAKf,MAAM7G,OAAOwL,mBACtCxL,OAAQ4H,EAAKf,MAAM7G,OAAOA,OAC1BsD,SAAUsE,EAAKf,MAAM7G,OAAOsD,SAC5BmW,eAAgB7R,EAAKf,MAAM6S,eAC3B5E,mBAAoBlN,EAAKf,MAAM8S,kBAC/BC,UAAWhS,EAAKf,MAAM+S,UACtBC,gBAAiBjS,EAAKf,MAAMgT,gBAC5BpN,YAAa7E,EAAKf,MAAM7G,OAAOyM,aAInC7E,EAAKkS,mCAAqClS,EAAKkS,mCAAmChJ,KAAxChK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAG1CA,EAAKmS,QAAUnS,EAAKmS,QAAQjJ,KAAbhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACfA,EAAKoS,QAAUpS,EAAKoS,QAAQlJ,KAAbhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACfA,EAAKqS,SAAWrS,EAAKqS,SAASnJ,KAAdhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAChBA,EAAKsS,SAAWtS,EAAKsS,SAASpJ,KAAdhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAChBA,EAAKuS,SAAWvS,EAAKuS,SAASrJ,KAAdhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAChBA,EAAKwS,SAAWxS,EAAKwS,SAAStJ,KAAdhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAChBA,EAAKkB,cAAgBlB,EAAKkB,cAAcgI,KAAnBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACrBA,EAAKyS,eAAiBzS,EAAKyS,eAAevJ,KAApBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACtBA,EAAK0S,WAAa1S,EAAK0S,WAAWxJ,KAAhBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAClBA,EAAK8B,YAAY9B,EAAK8B,YAAYoH,KAAjBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACbA,EAAKf,MAAMuJ,OAAOxH,gBACdhB,EAAKf,MAAMuJ,OAAOxH,eAAe3G,IACgB,WAA7C2F,EAAKf,MAAMuJ,OAAOxH,eAAewI,WACjCxJ,EAAKf,MAAMmR,iBAAiBpQ,EAAKf,MAAMuJ,OAAOxH,eAAe3G,IAC7D2F,EAAKf,MAAMiR,6BAA6BlQ,EAAKf,MAAMuJ,OAAOxH,eAAe3G,KAzDtE2F,kNA8EXZ,KAAKH,MAAM6K,MAAMC,OAAOpN,0BACpByC,KAAKH,MAAM6K,MAAMC,OAAOpN,OAAQqN,KAAYjM,MAAMqB,KAAKH,MAAMgL,SAASC,QAAQxL,gCAC1EA,EAAU,GAEc,kBADxByL,EAAeH,KAAYjM,MAAMqB,KAAKH,MAAMgL,SAASC,QAAQxL,SAE7DA,EAAQvB,KAAKgN,GAEbzL,EAAUyL,WAEWzN,GAAgBgC,iBAArC0L,UACAhS,EAAS,IACNuE,KAAOyC,KAAKH,MAAM6K,MAAMC,OAAOpN,KACtCvE,EAAOgV,SAAWhD,EAAajI,IAAI,SAAAkL,GAAK,OAAIA,EAAMhT,eAC/B+E,KAAKwR,UAAUxY,YAA9BuD,WAEAyD,KAAKH,MAAM9C,gBAAgBR,GAC3ByD,KAAK4C,SAAS,CACVhB,eAAgBrF,IAEpByD,KAAKH,MAAM1C,OAAO6N,IAElBhL,KAAKH,MAAMoL,QAAQlN,KAAK,2CAGxB/E,EAAS,IACNuE,KAAOyC,KAAKH,MAAM6K,MAAMC,OAAOpN,KACtCvE,EAAOgV,SAAW,aACChO,KAAKwR,UAAUxY,WAA9BuD,SACJyD,KAAKH,MAAM9C,gBAAgBR,GAC3ByD,KAAK4C,SAAS,CACVhB,eAAgBrF,IAEpByD,KAAKH,MAAMmR,iBAAiBhR,KAAKa,MAAMe,eAAe3G,IACtD+E,KAAKH,MAAMiR,6BAA6B9Q,KAAKa,MAAMe,eAAe3G,iMAK9CiQ,8EAExBlL,KAAKH,MAAMuJ,OAAOkB,KAAK7M,SAAWyN,EAAU9B,OAAOkB,KAAK7M,+BACjB4Q,GAAnCnD,EAAU9B,OAAOxH,sCACb5I,EAAS,IACNuE,KAAO2N,EAAU9B,OAAOxH,eAAelG,MAC9C1C,EAAOgV,SAAW9C,EAAU9B,OAAOkB,KAAKvH,IAAI,SAAAwQ,GAAC,OAAIA,EAAEtY,cAChC+E,KAAKwR,UAAUxY,WAA9BuD,WAEAyD,KAAKH,MAAM9C,gBAAgBR,GAC3ByD,KAAK4C,SAAS,CACVhB,eAAgBrF,IAEpByD,KAAKH,MAAMmR,iBAAiBhR,KAAKa,MAAMe,eAAe3G,IACtD+E,KAAKH,MAAMiR,6BAA6B9Q,KAAKa,MAAMe,eAAe3G,KAElE+E,KAAKH,MAAMoL,QAAQlN,KAAK,mBAKhCiC,KAAKa,MAAMe,gBAAkBsJ,EAAU9B,OAAOxH,gBAC9C5B,KAAKH,MAAMgR,mBACP3F,EAAU9B,OAAOxH,eAAe3G,IAAkD,WAA5CiQ,EAAU9B,OAAOxH,eAAewI,WACtEpK,KAAKH,MAAMmR,iBAAiB9F,EAAU9B,OAAOxH,eAAe3G,IAG5D+E,KAAKH,MAAMiR,6BAA6B5F,EAAU9B,OAAOxH,eAAe3G,KAI5E+E,KAAK4C,SAAS,CACVhB,eAAgBsJ,EAAU9B,OAAOxH,eACjCiH,WAAYqC,EAAUlS,OAAO6P,WAC7BC,eAAgBoC,EAAUlS,OAAO8P,eACjCC,gBAAiBmC,EAAUlS,OAAO+P,gBAElCyK,0BAA2BtI,EAAUlS,OAAOwa,0BAC5CC,8BAA+BvI,EAAUlS,OAAOya,8BAChDC,+BAAgCxI,EAAUlS,OAAO0a,+BACjDjC,eAAgBvG,EAAUlS,OAAOyY,eACjCC,0BAA2BxG,EAAUlS,OAAO0Y,0BAC5CC,0BAA2BzG,EAAUlS,OAAOyY,eAAeG,uBAC3DC,uBAAwB3G,EAAUlS,OAAOyY,eAAeK,mBACxDE,gCAAiCC,GAA0C/G,EAAUlS,OAAO0Y,2BAC5FQ,gCAAiCC,GAA0CjH,EAAUlS,OAAOyY,eAAeG,wBAC3GQ,6BAA8BC,GAAuCnH,EAAUlS,OAAOyY,eAAeK,oBAIrGtN,mBAAoB0G,EAAUlS,OAAOwL,mBACrCxL,OAAQkS,EAAUlS,OAAOA,OACzBsD,SAAU4O,EAAUlS,OAAOsD,SAE3BmW,eAAgBvH,EAAUwH,eAC1B5E,mBAAoB5C,EAAUyH,kBAC9BC,UAAW1H,EAAU0H,UACrBC,gBAAiB3H,EAAU2H,gBAC3BpN,YAAayF,EAAUlS,OAAOyM,eAQlCzF,KAAK4C,SAAS,CAEViG,WAAYqC,EAAUlS,OAAO6P,WAC7BC,eAAgBoC,EAAUlS,OAAO8P,eACjCC,gBAAiBmC,EAAUlS,OAAO+P,gBAClCyK,0BAA2BtI,EAAUlS,OAAOwa,0BAC5CC,8BAA+BvI,EAAUlS,OAAOya,8BAChDC,+BAAgCxI,EAAUlS,OAAO0a,+BACjDjC,eAAgBvG,EAAUlS,OAAOyY,eACjCC,0BAA2BxG,EAAUlS,OAAO0Y,0BAC5CC,0BAA2BzG,EAAUlS,OAAOyY,eAAeG,uBAC3DC,uBAAwB3G,EAAUlS,OAAOyY,eAAeK,mBAExDI,gCAAiCC,GAA0CjH,EAAUlS,OAAOyY,eAAeG,wBAC3GQ,6BAA8BC,GAAuCnH,EAAUlS,OAAOyY,eAAeK,oBAIrGtN,mBAAoB0G,EAAUlS,OAAOwL,mBACrCxL,OAAQkS,EAAUlS,OAAOA,OACzBsD,SAAU4O,EAAUlS,OAAOsD,SAC3BmW,eAAgBvH,EAAUwH,eAC1B5E,mBAAoB5C,EAAUyH,kBAC9BC,UAAW1H,EAAU0H,UACrBC,gBAAiB3H,EAAU2H,gBAC3BpN,YAAayF,EAAUlS,OAAOyM,sJAS9BrL,GACJ4F,KAAKa,MAAM2D,mBAAmBpK,EAAKa,IAAII,OACvC2E,KAAKH,MAAMvE,wBAAwBlB,EAAKa,IAGxC+E,KAAKH,MAAM7E,wBAAwBZ,EAAKa,0CAGlCjC,GACV,IAAI4E,EAAQ5E,EAAOgJ,UAAY,IAAMhJ,EAAOmI,SACxCzF,EAAQkC,EACR3C,EAAKjC,EAAOiC,GACZiH,EAAOlJ,EAAOmJ,IACdC,EAAOpJ,EAAOqJ,IAElBrC,KAAKH,MAAMgR,mBACX/V,QAAQC,IAFO,WAGfiF,KAAKH,MAAM9C,gBAAgB,CAAEa,QAAOlC,QAAOT,KAAIiH,OAAME,OAAMgI,SAH5C,+CAMRuJ,GACP,IAAI/V,EAAQ+V,EAAIC,kBACZlY,EAAQkC,EACR3C,EAAK0Y,EAAIE,qBAEb7T,KAAKH,MAAMgR,mBACX7Q,KAAKH,MAAM4O,0BACXzO,KAAKH,MAAM9C,gBAAgB,CAAEa,QAAOlC,QAAOT,KAAImP,SAHhC,gBAG0CuE,IAAK,iDAEnD9S,GAEX,IAAI+B,EAAQoC,KAAKa,MAAMvE,SAAST,EAAQwJ,SAAS9H,KAC7C7B,EAAQkC,EACR3C,EAAKY,EAAQ+I,UAEjB5E,KAAKH,MAAMgR,mBACX7Q,KAAKH,MAAM9C,gBAAgB,CAAEa,QAAOlC,QAAOT,KAAImP,SAFhC,wEAagBkI,GAC/B,IAAIwB,EACJA,EAAW9T,KAAKa,MAAM6Q,0BAA0BqC,MAAMzB,EAAOA,EAAQ,GAGrEtS,KAAK4C,SAAS,CACVoP,gCAAiC8B,sCAarC,IAAIxB,EAAQtS,KAAKa,MAAMyR,MAEnBA,GAAS,IACTtS,KAAK4C,SAAS,CAAE0P,MAAQA,EAAQ,IAChCtS,KAAK8S,mCAAmCR,EAAQ,uCAKpD,IAAIA,EAAQtS,KAAKa,MAAM0R,OAEnBD,GAAS,IACTtS,KAAK4C,SAAS,CAAE2P,OAASD,EAAQ,IACjCtS,KAAKgU,mCAAmC1B,EAAQ,uCAKpD,IAAIA,EAAQtS,KAAKa,MAAM2R,OAEnBF,GAAS,IACTtS,KAAK4C,SAAS,CAAE4P,OAASF,EAAQ,IACjCtS,KAAKiU,gCAAgC3B,EAAQ,sCAKjD,IAAI4B,EAAclU,KAAKa,MAAM6Q,0BAA0BjU,OACnD6U,EAAQtS,KAAKa,MAAMyR,MAEnBA,EAAQ,EAAI4B,IACZlU,KAAK4C,SAAS,CAAE0P,MAAQA,EAAQ,IAChCtS,KAAK8S,mCAAmCR,EAAQ,uCAKpD,IAAI4B,EAAclU,KAAKa,MAAM8Q,0BAA0BlU,OACnD6U,EAAQtS,KAAKa,MAAM0R,OAEnBD,EAAQ,EAAI4B,IACZlU,KAAK4C,SAAS,CAAE2P,OAASD,EAAQ,IACjCtS,KAAKgU,mCAAmC1B,EAAQ,uCAKpD,IAAI4B,EAAclU,KAAKa,MAAMgR,uBAAuBpU,OAChD6U,EAAQtS,KAAKa,MAAM2R,OAEnBF,EAAQ,EAAI4B,IACZlU,KAAK4C,SAAS,CAAE4P,OAASF,EAAQ,IACjCtS,KAAKiU,gCAAgC3B,EAAQ,qCAI5C,IAAAvR,EAAAf,KACL,OACI7H,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,kBAAkB7I,MAAO,CAAEsT,SAAU,WAC/C7L,KAAKa,MAAMe,eAAe3G,IAA4C,WAAtC+E,KAAKa,MAAMe,eAAewI,UAAyBjS,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,mBAC9FpB,KAAKa,MAAMgI,YAAc1Q,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,QAASC,OAAQ,OAAQ1K,UAAW,SAC/ElJ,EAAAC,EAAAC,cAAC2T,EAAA5T,EAAD,CAAcyB,KAAM,QAAS0I,MAAO,UAEtCvC,KAAKa,MAAMgI,YAAc1Q,EAAAC,EAAAC,cAAA,YACrB2H,KAAKa,MAAMkR,WAAa5Z,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,OACrCjJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,QAAS4K,OAAQ,OAAQL,SAAU,OAAQrK,OAAQ,kBAAmB/I,UAAW,KAC1KN,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,OAAQC,OAAQ,SAAU5T,EAAAC,EAAAC,cAAA,UAAQ+I,UAAU,eAAe7I,MAAO,CAAEiK,OAAQ,WAAa9B,QAAS,kBAAMK,EAAK6B,SAAS,CAAEmP,WAAW,MAAzG,UAE3C5Z,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,QAASC,OAAQ,SACjC/L,KAAKa,MAAM4R,gBAAkBzS,KAAKa,MAAM4R,eAAehV,OAAS,GAAKuC,KAAKa,MAAM4R,eAAe1P,IAAI,SAAAlH,GAChG,QAAoCwS,GAAhCxS,EAAQkJ,qBACR,OAAO5M,EAAAC,EAAAC,cAAA,KAAGkI,KAAM,IAAM1E,EAAQiJ,wBAAyBvM,MAAO,CAAEiK,OAAQ,UAAWkK,eAAgB,OAAQnK,MAAO,QAAS/J,QAAS,SAAWkI,QAAS,cACpJ7E,EAAQkJ,0BAOhC5M,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,UAAW4K,OAAQ,OAAQU,aAAc,iBAAkBf,SAAU,SAC9J1T,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,eAAe1C,MAAO,CAAE+I,gBAAiB,YAC7CnJ,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,MAAM1C,MAAO,CAAEuT,MAAO,QAASI,OAAQ,QAAS5K,gBAAiB,QAIrEnJ,EAAAC,EAAAC,cAAA,OAAK8b,IAAKnU,KAAKa,MAAM7H,OAAOqY,YAAa+C,IAAKpU,KAAKa,MAAMe,eAAehE,MAAOrF,MAAO,CAAEuT,MAAO,OAAQuI,UAAW,YAEtHlc,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE8I,UAAW,OAAQG,OAAQ,kBAAmBsL,WAAY,MAAOrL,aAAc,MAAOqK,MAAO,QAASrT,UAAW,SAAU6I,gBAAiB,UACtJnJ,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,YAGAvD,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,YAGAvD,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,UAKAsE,KAAKa,MAAMiN,oBAAsB9N,KAAKa,MAAMiN,mBAAmBrQ,OAAS,GAAKuC,KAAKa,MAAMiN,mBAAmB/K,IAAI,SAAA3I,GAC3G,OAAQjC,EAAAC,EAAAC,cAAA,OAAK4C,GAAIb,EAAKwK,WAAWzM,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,WAAW7I,MAAO,CAAE8I,UAAW,OAAQC,gBAAiB,QAASC,QAAS,OAAQC,OAAQ,kBAAmBC,aAAc,QACvKtJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgK,MAAO,OAAQC,OAAQ,WAAa9B,QAAS,kBAAMK,EAAKsS,eAAejZ,KAAQA,EAAKuH,QAAS,IAAzG,IAA+GZ,EAAKF,MAAMvE,SAASlC,EAAKiL,SAAS9H,MAAU,OAAQnD,EAAKyH,YACxK1J,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEgK,MAAO,QAAUxB,EAAKF,MAAM7H,OAAOgJ,UAAW,IAAKjB,EAAKF,MAAM7H,OAAOmI,UACnFhJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,cACXjJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgK,MAAMnI,EAAKiB,OAAO,MAAM,QAAU+F,UAAU,eAAeV,QAAS,WAAQK,EAAK2B,YAAYtI,MAD7G,QACkIA,EAAKuI,MAAQvI,EAAKuI,MAAQ,IAD5J,aAC8KxK,EAAAC,EAAAC,cAAA,QAAM+I,UAAU,gBAAgBV,QAAS,WAC/MK,EAAK6B,SAAS,CACV9B,WAAqC,QAAzBC,EAAKF,MAAMC,WAAuB,QAAU,OACxD7F,GAAIb,EAAKa,MAEd1C,MAAO,CAAEiK,OAAQ,YALsJ,YAO9KrK,EAAAC,EAAAC,cAAA,OAAK4C,GAAIb,EAAKa,GAAI1C,MAAO,CAAE8I,UAAW,OAAQ7I,QAAS,CAAC4B,EAAKa,IAAM8F,EAAKF,MAAM5F,GAAK8F,EAAKF,MAAMC,WAAa,UAAa1G,EAAKyI,gBAAgB1K,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE+I,gBAAiB,YAAclH,EAAK0I,iBAMnN3K,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,QAAS4K,OAAQ,OAAQL,SAAU,OAAQrK,OAAQ,mBAC3IxB,KAAKa,MAAM+R,WAAa5S,KAAKa,MAAM+R,UAAUnV,OAAS,GAAKuC,KAAKa,MAAM+R,UAAU7P,IAAI,SAAAuR,GACjF,OAAQnc,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,QAASC,OAAQ,SAAU5T,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEgK,MAAO,QAAU+R,EAAK/N,QAAQgO,OAAO,GAAGlQ,cAAgBiQ,EAAK/N,QAAQwN,MAAM,GAAxF,KACnDO,EAAK9N,OAAOzD,IAAI,SAAAyR,GAEb,OAAOrc,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEC,QAAS,iBAAkBL,EAAAC,EAAAC,cAACoc,GAAA,EAAD,CAAMlc,MAAO,CAAEiK,OAAQ,WAAa4L,GAAG,kBAAkB1N,QAAS,kBAAMK,EAAKuS,WAAW,CAAEM,kBAAmBY,EAAEjX,KAAMsW,qBAAsBW,EAAEvZ,OAAQuZ,EAAEjX,MAAjM,iBAMnBpF,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,4BAA4B1C,MAAO,CAAEuT,MAAO,QAASC,OAAQ,SAiBhE/L,KAAKa,MAAMqR,iCAAmClS,KAAKa,MAAMqR,gCAAgCzU,OAAS,GAAKtF,EAAAC,EAAAC,cAAA,WACpGF,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEgK,MAAO,QAApB,kBACApK,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,QACXjJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEiK,OAAQ,WAAa9B,QAAS,kBAAMK,EAAKkS,YAAY7R,UAAU,2BAC1EpB,KAAKa,MAAMqR,gCAAgCnP,IAAI,SAAA/J,GAC5C,OACIb,EAAAC,EAAAC,cAAA,OAAKqI,QAAS,kBAAMK,EAAKe,cAAc9I,IAAST,MAAO,CAAEgU,YAAa,MAAO/T,QAAS,eAAgB8T,WAAY,MAAOR,MAAO,OAAQ4I,UAAW,QAASlT,OAAQ,kBAAmBC,aAAc,MAAOe,OAAQ,YAChNrK,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,OAAQ6I,UAAW,OAAQrT,gBAAiB,WAC7DnJ,EAAAC,EAAAC,cAAA,OAAK8b,IAAG,iDAAAla,OAAmDjB,EAAOmI,SAA1D,KAAAlH,OAAsEjB,EAAOgJ,UAA7E,QAA8FoS,IAAKpb,EAAOgJ,UAAY,IAAMhJ,EAAOmI,YAE/IhJ,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEmJ,SAAU,OAAQoK,MAAO,OAAQD,SAAU,SAAU+I,aAAc,WAAYC,WAAY,WAAa7b,EAAOgJ,UAAYhJ,EAAOmI,aAI5JhJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEiK,OAAQ,WAAa9B,QAAS,kBAAMK,EAAKmS,YAAY9R,UAAU,8BAIlFpB,KAAKa,MAAMuR,8BAAgCpS,KAAKa,MAAMuR,6BAA6B3U,OAAS,GAAKtF,EAAAC,EAAAC,cAAA,WAC9FF,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEgK,MAAO,QAApB,yBACApK,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,QACXjJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEiK,OAAQ,WAAa9B,QAAS,kBAAMK,EAAKoS,YAAY/R,UAAU,2BAC1EpB,KAAKa,MAAMuR,6BAA6BrP,IAAI,SAAA/J,GAEzC,OACIb,EAAAC,EAAAC,cAAA,OAAKqI,QAAS,kBAAMK,EAAKe,cAAc9I,IAAST,MAAO,CAAEgU,YAAa,MAAO/T,QAAS,eAAgB8T,WAAY,MAAOR,MAAO,OAAQ4I,UAAW,QAASlT,OAAQ,kBAAmBC,aAAc,MAAOe,OAAQ,YAChNrK,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,OAAQ6I,UAAW,OAAQrT,gBAAiB,WAC7DnJ,EAAAC,EAAAC,cAAA,OAAK8b,IAAG,iDAAAla,OAAmDjB,EAAOmI,SAA1D,KAAAlH,OAAsEjB,EAAOgJ,UAA7E,QAA8FoS,IAAKpb,EAAOgJ,UAAY,IAAMhJ,EAAOmI,YAE/IhJ,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEmJ,SAAU,OAAQoK,MAAO,OAAQD,SAAU,SAAU+I,aAAc,WAAYC,WAAY,WAAa7b,EAAOgJ,UAAYhJ,EAAOmI,aAI5JhJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEiK,OAAQ,WAAa9B,QAAS,kBAAMK,EAAKqS,YAAYhS,UAAU,gCAO3FjJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,QAAS4K,OAAQ,OAAQL,SAAU,OAAQmB,WAAY,MAAOC,YAAa,kBAAmBC,UAAW,kBAAmBN,aAAc,kBAAmBnU,UAAW,SAAU+J,OAAQ,YACnRrK,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,eAAf,4BAOPpB,KAAKa,MAAMkR,WAAa5Z,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,OACpCjJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,QAAS4K,OAAQ,OAAQL,SAAU,OAAQrK,OAAQ,kBAAmB/I,UAAW,KAC1KN,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,QAASC,OAAQ,OAAQ1K,UAAW,SACrDlJ,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEiK,OAAQ,WAAa9B,QAAS,kBAAMK,EAAK6B,SAAS,CAAEmP,WAAW,MAAU5Z,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEuT,MAAO,QAAU1K,UAAU,sBAA9H,WAAgKjJ,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEmJ,SAAU,SAAzB,YAChKvJ,EAAAC,EAAAC,cAAA,mBACC2H,KAAKa,MAAMgS,iBAAmB7S,KAAKa,MAAMgS,gBAAgBpV,OAAS,GAAKuC,KAAKa,MAAMgS,gBAAgB9P,IAAI,SAAA4N,GACnG,OACIxY,EAAAC,EAAAC,cAAA,KAAGkI,KAAM,IAAMoQ,EAAK5K,iBAAkBxN,MAAO,CAAEiK,OAAQ,UAAWkK,eAAgB,OAAQnK,MAAO,QAAS/J,QAAS,SAAWkI,QAAS,cACnIiQ,EAAK3K,WAMzB7N,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,+BAA+B7I,MAAO,CAAEkJ,aAAc,MAAOH,gBAAiB,UAAW4K,OAAQ,OAAQU,aAAc,iBAAkBf,SAAU,SAC9J1T,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,eAAe1C,MAAO,CAAE+I,gBAAiB,YAC7CnJ,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,MAAM1C,MAAO,CAAEuT,MAAO,QAASI,OAAQ,QAAS5K,gBAAiB,QACrEnJ,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsU,OAAQ,IAAKtL,QAAS,OAAQgB,MAAO,SAAWnB,UAAU,cAAcpB,KAAKa,MAAMe,eAAiB5B,KAAKa,MAAMe,eAAehE,MAAQ,IACnJzF,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsU,OAAQ,IAAKtL,QAAS,OAAQgB,MAAO,QAAS/J,QAAS,gBAAkB4I,UAAU,eAAgBpB,KAAKa,MAAMe,eAAeM,MAAQlC,KAAKa,MAAMe,eAAeQ,KAAQpC,KAAKa,MAAMe,eAAeM,KAAO,MAAQlC,KAAKa,MAAMe,eAAeQ,KAAO,QAElQjK,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE8I,UAAW,OAAQG,OAAQ,kBAAmBsL,WAAY,MAAOrL,aAAc,MAAOqK,MAAO,QAASrT,UAAW,SAAU6I,gBAAiB,UACtJnJ,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,YAGAvD,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,YAGAvD,EAAAC,EAAAC,cAAA,SAAOC,MAAM,kBAAkBC,MAAO,CAAEgU,YAAa,SACjDpU,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAW6B,MAAM,KADjC,UAIHsE,KAAKa,MAAM7H,QAAUgH,KAAKa,MAAM7H,OAAO0M,OAAS1F,KAAKa,MAAM7H,OAAO0M,MAAMjI,OAAS,GAAKuC,KAAKa,MAAM7H,OAAO0M,MAAM3C,IAAI,SAAA4N,GAE3G,OAAO5P,EAAKF,MAAM4E,YAAYkL,GAAMmE,kBAAoB/T,EAAKF,MAAM4E,YAAYkL,GAAMmE,iBAAiBrX,OAAS,GAAKsD,EAAKF,MAAM4E,YAAYkL,GAAMmE,iBAAiB/R,IAAI,SAAAgS,GAClK,OAAQ5c,EAAAC,EAAAC,cAAA,OAAK4C,GAAI0V,EAAMvP,UAAU,WAAW7I,MAAO,CAAE8I,UAAW,OAAQC,gBAAiB,QAASC,QAAS,OAAQC,OAAQ,kBAAmBC,aAAc,QACxJtJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,OACXjJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,gBACXjJ,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEuT,MAAO,OAAQ6I,UAAW,OAAQxI,WAAY,UAEhEhU,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,iBACXjJ,EAAAC,EAAAC,cAAA,UAAK0I,EAAKF,MAAM4E,YAAYkL,GAAM3K,OAClC7N,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEgK,MAAO,UAAYwS,EAAgBlT,aACjD1J,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,cACXjJ,EAAAC,EAAAC,cAAA,KAAG+I,UAAU,gBAAgBV,QAAS,WAClCK,EAAK6B,SAAS,CACV9B,WAAqC,QAAzBC,EAAKF,MAAMC,WAAuB,QAAU,OACxD7F,GAAI0V,EAAK1V,MAEd1C,MAAO,CAAEiK,OAAQ,YALpB,YAOJrK,EAAAC,EAAAC,cAAA,OAAK4C,GAAI0V,EAAMpY,MAAO,CAAE8I,UAAW,OAAQ7I,QAAS,CAACmY,GAAQ5P,EAAKF,MAAM5F,GAAK8F,EAAKF,MAAMC,WAAa,UAAaiU,EAAgBC,4BA9gBrKjc,aAiiBnBkZ,GAA4C,SAAC7X,GAC/C,GAAIA,GACIA,EAAKqD,OAAS,EACd,OAAIrD,EAAKqD,OAAS,EACPrD,EAAK2Z,MAAM,EAAG,GAGd3Z,GAKjB+X,GAA4C,SAAC/X,GAC/C,GAAIA,GACIA,EAAKqD,OAAS,EACd,OAAIrD,EAAKqD,OAAS,EACPrD,EAAK2Z,MAAM,EAAG,GAGd3Z,GAKjBiY,GAAyC,SAACjY,GAE5C,GAAIA,GACIA,EAAKqD,OAAS,EACd,OAAIrD,EAAKqD,OAAS,EACPrD,EAAK2Z,MAAM,EAAG,GAGd3Z,GAmERkT,eAXS,SAACzM,GACrB,MAAO,CACHuI,OAAQvI,EAAMuI,OACdpQ,OAAQ6H,EAAM7H,OACd0Z,eAAgBnO,GAAiB1D,GACjC8R,kBAAmBzN,GAAmCrE,GACtD+R,UAAW3M,GAAiBpF,GAC5BgS,gBAAiBtN,GAAqB1E,KAxBnB,SAACjH,GACxB,MAAO,CACHqD,oBAAqBsQ,YAAmBtQ,EAAqBrD,GAC7DmD,gBAAiBwQ,YAAmBxQ,EAAiBnD,GACrDoX,iBAAkBzD,YAAmByD,GAAkBpX,GAGvDkX,6BAA8BvD,YAAmBuD,GAA8BlX,GAG/EiX,iBAAkBtD,YAAmBsD,GAAkBjX,GACvD6U,wBAAyBlB,YAAmBkB,GAAyB7U,GACrEuD,OAAQoQ,YAAmBpQ,EAAQvD,GACnCoB,wBAAwBuS,YAAmBvS,GAAwBpB,GACnE0B,wBAAwBiS,YAAmBjS,GAAwB1B,KAc5D0T,CAA6CiE,6FChpB7C,SAAS0D,GAAsBC,GACtCA,EACAzb,KAAM0b,SAAS7W,QAAQ8W,OAAvB,wBAAAnb,OAA2Dib,UAGpDzb,KAAM0b,SAAS7W,QAAQ8W,OAAvB,cCDR,SAASC,GAAetW,GAC3B,MAAO,CACHlF,KAAM,mBACNkF,QAeD,SAASuW,GAAiBC,GAE7B,OAAO,SAAA3b,GACH,OAAOH,KAAM0B,KAAK,0CAA2Coa,EAAU,CACnEjX,QAAS,CACLkX,8BAA+B,OAGlCrb,KAAK,SAAAiB,GACF,IAAM8Z,EAAQ9Z,EAAIhB,KAAK8a,MACvBO,aAAaC,QAAQ,WAAYR,GACjCD,GAAsBC,GACtBtb,EAASyb,GAAeM,KAAIC,OAAOV,mBC5B7CW,eACF,SAAAA,EAAYhW,GAAO,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAA6V,IACfjV,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+V,GAAA1V,KAAAH,KAAMH,KACDgB,MAAQ,CACT3C,SAAU,GACVE,SAAU,GACV0X,OAAQ,GACRC,WAAW,GAEfnV,EAAKoV,SAAWpV,EAAKoV,SAASlM,KAAdhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAChBA,EAAKqV,SAAWrV,EAAKqV,SAASnM,KAAdhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KATDA,wEAWV5B,GACLgB,KAAK4C,SAAL9C,OAAAoW,GAAA,EAAApW,CAAA,GACKd,EAAEmX,OAAO5Y,KAAOyB,EAAEmX,OAAOza,wCAG1BtB,GAAM,IAAAgc,ECtBH,SAAUC,GACrB,IAAIP,EAAS,GAQb,OAPIQ,KAAUC,QAAQF,EAAUjX,SAC5B0W,EAAO1W,MAAQ,uBAEfkX,KAAUC,QAAQF,EAAUjY,YAC5B0X,EAAO1X,SAAW,0BAGf,CACH0X,SACAU,QAASD,KAAQT,IDYWW,CAAcrc,GAAlC0b,EADEM,EACFN,OAAQU,EADNJ,EACMI,QAIhB,OAHKA,GACDxW,KAAK4C,SAAS,CAAEkT,WAEbU,mCAEFxX,GAAG,IAAA+B,EAAAf,KACRhB,EAAE0X,iBACE1W,KAAKwW,QAAQxW,KAAKa,SAClBb,KAAK4C,SAAS,CAAEkT,OAAQ,GAAIC,WAAW,IACvC/V,KAAKH,MAAMyV,iBAAiB,CAAEpX,SAAU8B,KAAKa,MAAM3C,SAAUE,SAAU4B,KAAKa,MAAMzC,SAAU+B,KAAM,WAAYhG,KAC1G,SAACC,GAAW2G,EAAKlB,MAAMoL,QAAQlN,KAAK,mBAAoBjD,QAAQC,IAAI,qCAAsCX,IAC1G,SAACA,GAAW2G,EAAK6B,SAAS,CAAEkT,OAAQ1b,EAAKqE,SAASrE,KAAM2b,WAAW,IAAUjb,QAAQC,IAAI,yBAA0BX,GAAOU,QAAQC,IAAI,wBAAyBgG,EAAKF,2CAIvK,IAAA8V,EAC6C3W,KAAKa,MAA3BkV,GADvBY,EACGzY,SADHyY,EACavY,SADbuY,EACuBZ,WAAWD,EADlCa,EACkCb,OACvC,OACI3d,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,QACXjJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,sCAAsC7I,MAAO,CAAE8I,UAAW,KACrElJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,eACXjJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAM4d,SAAUjW,KAAKiW,UAChBH,EAAOc,MAAQze,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,sBAAsB0U,EAAOc,MAC5Dze,EAAAC,EAAAC,cAAA,OAAK+I,UAAWyV,KAAW,aAAc,CAAEC,YAAahB,EAAO5X,YAC1D4X,EAAO5X,UAAY/F,EAAAC,EAAAC,cAAA,QAAM+I,UAAU,cAAc0U,EAAO5X,WACvD4X,EAAO5X,UAAY/F,EAAAC,EAAAC,cAAA,yBACrBF,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAWvB,MAAM,eAAeiF,KAAK,WAAW7B,MAAOsE,KAAKa,MAAM3C,SAAU6Y,YAAY,WAAWf,SAAUhW,KAAKgW,YAElI7d,EAAAC,EAAAC,cAAA,OAAK+I,UAAWyV,KAAW,aAAc,CAAEC,YAAahB,EAAO1X,YAC1D0X,EAAO1X,UAAYjG,EAAAC,EAAAC,cAAA,QAAM+I,UAAU,cAAc0U,EAAO1X,WACvD0X,EAAO1X,UAAYjG,EAAAC,EAAAC,cAAA,yBACrBF,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,WAAWvB,MAAM,eAAeiF,KAAK,WAAWyY,SAAUhW,KAAKgW,SAAUe,YAAY,cAErG5e,EAAAC,EAAAC,cAAA,UAAQE,MAAO,CAAE+I,gBAAiB,WAAazH,KAAK,SAASmd,SAAUhX,KAAKa,MAAMkV,UAAWzd,MAAM,QAAnG,SACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGkI,KAAK,UAAUjI,MAAM,gBAAxB,UACAH,EAAAC,EAAAC,cAAA,UAAQ2e,SAAUjB,EAAWlc,KAAK,SAASvB,MAAM,gBAAjD,8BA1DZS,aA0ELuU,eAAQ,KANI,SAAC1T,GACxB,MAAO,CACH0b,iBAAkB/H,YAAmB+H,GAAkB1b,KAIhD0T,CAAkCuI,WEhF1C,SAASoB,GAAkB1B,GAC9B,OAAO,SAAA3b,GACH,OAAOH,KAAM0B,KAAK,oEAAqEoa,EAAU,CAC7FjX,QAAS,MCFrB,ICMM4Y,eACF,SAAAA,EAAYrX,GAAO,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAAkX,IACftW,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoX,GAAA/W,KAAAH,KAAMH,KACDgB,MAAQ,CACTsW,UAAW,GACXC,SAAU,GACVhY,MAAO,GACP0W,OAAQ,GACRC,WAAW,GAEfnV,EAAKoV,SAAWpV,EAAKoV,SAASlM,KAAdhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAChBA,EAAKqV,SAAWrV,EAAKqV,SAASnM,KAAdhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAVDA,wEAaV5B,GACLgB,KAAK4C,SAAL9C,OAAAoW,GAAA,EAAApW,CAAA,GACKd,EAAEmX,OAAO5Y,KAAOyB,EAAEmX,OAAOza,wCAG1BtB,GAAM,IAAAid,EDzBlB,SAAyBC,GACrB,IAAIxB,EAAS,GAab,OAZIQ,KAAUC,QAAQe,EAAWH,aAC7BrB,EAAOqB,UAAY,4BAEnBb,KAAUC,QAAQe,EAAWF,YAC7BtB,EAAOsB,SAAW,2BAElBd,KAAUC,QAAQe,EAAWlY,SAC7B0W,EAAO1W,MAAQ,uBAEdkX,KAAUiB,QAAQD,EAAWlY,SAC9B0W,EAAO1W,MAAQ,sBAEZ,CACH0W,SACAU,QAASD,KAAQT,ICUW0B,CAAepd,GAAnC0b,EADEuB,EACFvB,OAAQU,EADNa,EACMb,QAIhB,OAHKA,GACDxW,KAAK4C,SAAS,CAAEkT,WAEbU,mCAEFxX,GAAG,IAAA+B,EAAAf,KACRhB,EAAE0X,iBACE1W,KAAKwW,QAAQxW,KAAKa,SAClBb,KAAK4C,SAAS,CAAEkT,OAAQ,GAAIC,WAAW,IACvC/V,KAAKH,MAAMoX,kBAAkB,CACzBQ,MAAOzX,KAAKa,MAAMsW,UAAWO,MAAO1X,KAAKa,MAAMuW,SAAUhY,MAAOY,KAAKa,MAChEzB,MACHe,KAAM,WACThG,KACC,SAAAqG,GAAc,IAAXpG,EAAWoG,EAAXpG,KAAa2G,EAAKlB,MAAMoL,QAAQlN,KAAK,UAAWjD,QAAQC,IAAI,mCAAoCX,EAAKud,MAAO7c,QAAQC,IAAI,4BAA6BgG,EAAKF,QAC7J,SAACzG,GAEG2G,EAAK6B,SAAS,CAAEkT,OAAQ1b,EAAKqE,SAASrE,KAAM2b,WAAW,wCAM9D,IACGD,EAAW9V,KAAKa,MAAhBiV,OACR,OACI3d,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,QAGXjJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,sCAAsC7I,MAAO,CAAE8I,UAAW,SACrElJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,eACXjJ,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAM4d,SAAUjW,KAAKiW,UACjB9d,EAAAC,EAAAC,cAAA,OAAK+I,UAAWyV,KAAW,aAAc,CAAEC,YAAahB,EAAOqB,aAC1DrB,EAAOqB,WAAahf,EAAAC,EAAAC,cAAA,QAAM+I,UAAU,cAAc0U,EAAOqB,YACxDrB,EAAOqB,WAAahf,EAAAC,EAAAC,cAAA,qBACtBF,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,OAAOvB,MAAM,eAAeoD,MAAOsE,KAAKa,MAAMsW,UAAWnB,SAAUhW,KAAKgW,SAAUzY,KAAK,eAEvGpF,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,cACV0U,EAAOsB,UAAYjf,EAAAC,EAAAC,cAAA,QAAM+I,UAAU,cAAc0U,EAAOsB,WACvDtB,EAAOsB,UAAYjf,EAAAC,EAAAC,cAAA,0BACrBF,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,OAAOvB,MAAM,eAAeoD,MAAOsE,KAAKa,MAAMuW,SAAUpB,SAAUhW,KAAKgW,SAAUzY,KAAK,cAEtGpF,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,cACV0U,EAAO1W,OAASjH,EAAAC,EAAAC,cAAA,QAAM+I,UAAU,cAAc0U,EAAO1W,QACpD0W,EAAO1W,OAASjH,EAAAC,EAAAC,cAAA,sBAClBF,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,QAAQvB,MAAM,eAAeoD,MAAOsE,KAAKa,MAAMzB,MAAO4W,SAAUhW,KAAKgW,SAAUzY,KAAK,QAAQ6B,MAAM,WAElHjH,EAAAC,EAAAC,cAAA,UAAQ+I,UAAU,aAAa4V,SAAUhX,KAAKa,MAAMkV,UAAWxd,MAAO,CAAE+I,gBAAiB,WAAazH,KAAK,SAASvB,MAAM,OAA1H,gBACAH,EAAAC,EAAAC,cAAA,KAAGkI,KAAK,SAASjI,MAAM,4BAAvB,0CAxEXS,aAwFNuU,eAAQ,KANI,SAAC1T,GACxB,MAAO,CACHqd,kBAAmB1J,YAAmB0J,GAAmBrd,KAIlD0T,CAAkC4J,yJCpE3CU,GAAS1d,yBACT2d,eACF,SAAAA,EAAYhY,GAAO,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAA6X,IACfjX,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+X,GAAA1X,KAAAH,KAAMH,KAsCV5G,OAAS,CACLkF,MAAO2Z,KAAIC,SACNC,WACApa,MAAM,SACXS,SAAUyZ,KAAIC,SACTna,MAAM,YACNoa,WACL7Y,SAAU2Y,KAAIC,SAASE,MAAM,GAAI,OA9ClBrX,EA+DnBsX,gBAAkB,WACdtX,EAAKgC,SAAS,SAAAuV,GAAS,MAAK,CAAEC,WAAaD,EAAUC,cAhEtCxX,EAmEnByX,sBAAwB,WACpBzX,EAAKgC,SAAS,SAAAuV,GAAS,MAAK,CAAEG,iBAAmBH,EAAUG,oBApE5C1X,EAuFnB2X,SAAW,WACP,IAAMhc,EAASub,KAAIS,SAAS3X,EAAKC,MAAM5C,QAAS2C,EAAK3H,OAAQ,CACzDuf,YAAY,IAEhB,IAAKjc,EAAOC,MAAO,OAAO,KAE1B,IAAMsZ,EAAS,GANF2C,GAAA,EAAAC,GAAA,EAAAC,OAAAtK,EAAA,IAQb,QAAAuK,EAAAC,EAAiBtc,EAAOC,MAAMsc,QAA9BC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAxJ,QAAA4J,MAAAR,GAAA,OAASnE,EAATsE,EAAAld,MAAuCoa,EAAOxB,EAAK4E,KAAK,IAAM5E,EAAK6E,SARtD,MAAAte,GAAA6d,GAAA,EAAAC,EAAA9d,EAAA,YAAA4d,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GASb,OAAO7C,GAhGQlV,EAmGnByY,kBAAoB,SAAA7Y,GAA8B,IAAZ8Y,EAAY9Y,EAA3B+Y,cACbzD,EAAMhW,OAAAqH,GAAA,EAAArH,CAAOc,EAAKC,MAAMiV,QAExB0D,EAAe5Y,EAAK6Y,iBAAiBH,GAEvCE,EACA1D,EAAOwD,EAAM/b,MAAQic,SAEd1D,EAAOwD,EAAM/b,MAExB,IAAMU,EAAO6B,OAAA4Z,GAAA,EAAA5Z,CAAA,GAAQc,EAAKC,MAAM5C,SAEhCA,EAAQqb,EAAM/b,MAAQ+b,EAAM5d,MAC5BkF,EAAKgC,SAAS,CAAE3E,UAAS6X,YAhHVlV,EAqHnB+Y,aAAe,SAAC3a,EAAG4a,GACf5a,EAAE0X,iBAEF,IAAMZ,EAASlV,EAAK2X,WAEfzC,IACG8D,EAAUhZ,EAAKf,MAAMX,OAAO0B,EAAKC,MAAM5C,SACtC2C,EAAKf,MAAM7B,MAAM4C,EAAKC,MAAM5C,UAEjC2C,EAAKf,MAAMga,mBACXjZ,EAAKgC,SAAS,CAAEkT,OAAQA,GAAU,MA/HvBlV,EA0QnBkZ,cAAgB,SAAC1c,GACbwD,EAAKf,MAAM1C,OAAOC,GACdwD,EAAKC,MAAMyJ,KAAK7M,OAAS,IACzBmD,EAAKgC,SAAS,CACVmX,eAAgB,iBAEpBnZ,EAAKf,MAAM5C,oBAAoB,iBAE/B2D,EAAKC,MAAMyJ,KAAK7M,QAAU,IAC1BmD,EAAKgC,SAAS,CACVmX,eAAgBnZ,EAAKf,MAAMuJ,OAAO2Q,iBAEtCnZ,EAAKf,MAAM5C,oBAAoB,QAInC2D,EAAKgC,SAAS,CAAEoX,YAAa,MA1RdpZ,EA8RnBqZ,eAAiB,SAACjb,KA9RC4B,EAkSnBsZ,aAAe,SAACvc,GACZ,IAAM2M,EAAO1J,EAAKC,MAAMyJ,KAAKyJ,MAAM,GACnCzJ,EAAK6P,OAAOxc,EAAG,GACfiD,EAAKgC,SAAS,CAAE0H,QAAQ,WAChBtK,KAAKa,MAAMyJ,KAAK7M,OAAS,GACzBuC,KAAKH,MAAM5C,oBAAoB,gBAE/B+C,KAAKa,MAAMyJ,KAAK7M,QAAU,GAC1BuC,KAAKH,MAAM5C,oBAAoB,SAGvC2D,EAAKgC,SAAS,CAAEoX,YAAa,MA7SdpZ,EAkTnBwZ,eAAiB,SAAChd,GACd,IAAIkN,EAAIxK,OAAAqH,GAAA,EAAArH,CAAOc,EAAKC,MAAMyJ,MAC1BA,EAAKvM,KAAK,CACN9C,GAAImC,EAAInC,GAAGof,WACXzc,MAAOR,EAAIQ,MACX/D,KAAMuD,EAAIvD,OAEd+G,EAAKgC,SAAS,CAAE0H,QAAQ,WAChBtK,KAAKa,MAAMyJ,KAAK7M,OAAS,GACzBuC,KAAKH,MAAM5C,oBAAoB,gBAE/B+C,KAAKa,MAAMyJ,KAAK7M,QAAU,GAC1BuC,KAAKH,MAAM5C,oBAAoB,SAGvC2D,EAAKgC,SAAS,CAAEoX,YAAa,MAjUdpZ,EAqUnB0Z,SAAW,SAAChB,EAAOiB,GACf9gB,KAAM0B,KAAN,GAAAlB,OAAc2d,GAAd,oCAAwD0B,GAAOnf,KAAK,SAAAC,GAEhE,GAAqB,YADIA,EAAKA,KAAtBC,aACwB,CAC5B,IAAMuH,EAAiBxH,EAAKA,KAAKA,KAC7B4f,EAAc,GAClBpY,EAAe8B,QAAQ,SAAA6P,GACnB,IAAIzX,EAAM,GACVA,EAAIb,GAAKsY,EAAEtY,GAAGof,WACdve,EAAI8B,MAAQ2V,EAAE3V,MACd9B,EAAIJ,MAAQ6X,EAAE3V,MACd9B,EAAIjC,KAAO0Z,EAAE1Z,KACbmgB,EAAYjc,KAAKjC,KAErB8E,EAAKgC,SAAS,CAAEoX,gBAChBO,EAAG,KAAMP,QAGTlf,QAAQC,IAAI,MAEjBH,MAAM,SAAA4B,GACL1B,QAAQC,IAAI,iDAAkDyB,MA1VnDoE,EA6VnB4Z,gBAAkB,SAAC5c,GACf,IAAI6c,EAAa,GACb7Z,EAAKC,MAAMyJ,KAAK7M,OAAS,IACzBgd,EAAa,IACF5gB,KAAO,OAClB4gB,EAAWC,OAAS9c,KAEpB6c,EAAa,IACFC,OAAS9c,EACpB6c,EAAW5gB,KAAO,QAClB4gB,EAAWxf,GAAK2F,EAAKC,MAAMyJ,KAAKvH,IAAI,SAAAwQ,GAAC,OAAIA,EAAEtY,MAG/C,IAAI2N,EAAQ,GAEZ,OADAA,EAAM6R,WAAaA,EACZ,IAAIjb,QAAQ,SAACC,EAASC,GACzBkB,EAAK0Z,SAAS1R,EAAO,SAAU/N,EAAKmf,GAEhCva,EAAQua,QA/WDpZ,EAqXnB+Z,aAAe,SAAC/Y,QACiByM,IAAzBzM,EAAehE,QACfgD,EAAKf,MAAM9C,gBAAgB6E,GAC3BhB,EAAKgC,SAAS,CACVhB,qBAzXOhB,EA8XnBga,gBAAkB,SAACC,QACWxM,IAAtBwM,EAAYjd,QACZgD,EAAKC,MAAMyJ,KAAKvM,KAAK8c,GACrBja,EAAKgC,SAAS,CAAE0H,KAAM1J,EAAKC,MAAMyJ,SAjYtB1J,EAmdnBka,eAAiB,WACb,GAAIla,EAAKC,MAAMe,gBACPhB,EAAKC,MAAMe,eAAewI,SAC1B,OAAQxJ,EAAKC,MAAMe,eAAewI,UAC9B,IAAK,WACD,OAAOjS,EAAAC,EAAAC,cAAC8V,EAAA,EAAD,CAAUC,GAAG,cACxB,IAAK,mBACD,OAAOjW,EAAAC,EAAAC,cAAC8V,EAAA,EAAD,CAAUC,GAAG,sBACxB,IAAK,UACD,OAAOjW,EAAAC,EAAAC,cAAC8V,EAAA,EAAD,CAAUC,GAAG,aACxB,IAAK,kBACD,OAAOjW,EAAAC,EAAAC,cAAC8V,EAAA,EAAD,CAAUC,GAAG,qBACxB,IAAK,gBACD,OAAOjW,EAAAC,EAAAC,cAAC8V,EAAA,EAAD,CAAUC,GAAG,mBACxB,QACI,OAAO,OAleRxN,EAuenBvD,UAAY,SAAApC,GACR2F,EAAKf,MAAMxC,UAAUpC,IAterB2F,EAAKC,MAAQ,CACTga,YAAa,GACbd,eAAgBnZ,EAAKf,MAAMuJ,OAAO2Q,eAClCgB,cAAe,GACfnZ,eAAgB,GAChBoZ,6BAA8B,GAC9B1e,SAAUsE,EAAKf,MAAMuJ,OAAO9M,SAC5BqK,gBAAiB/F,EAAKf,MAAMuJ,OAAOzC,gBACnC1F,QAASL,EAAKf,MAAMuJ,OAAOnI,QAC3Bga,eAAgBra,EAAKf,MAAMuJ,OAAO6R,eAClC/U,aAActF,EAAKf,MAAMuJ,OAAOlD,aAChCgV,aAAc,GACd5Q,KAAM1J,EAAKf,MAAMuJ,OAAOkB,KACxB6Q,YAAa,GACbC,gBAAiB,GACjBpB,YAAa,GACb5B,WAAW,EACXE,iBAAiB,EACjBra,QAAS,CACLE,MAAO,GACPE,SAAU,GACVc,SAAU,IAEd2W,OAAQ,GACRuF,0BAA0B,EAC1BxB,mBAAmB,EACnByB,YAAa,IAIjB1a,EAAK+Z,aAAe/Z,EAAK+Z,aAAa7Q,KAAlBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACpBA,EAAK2a,YAAc3a,EAAK2a,YAAYzR,KAAjBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACnBA,EAAKka,eAAiBla,EAAKka,eAAehR,KAApBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACtBA,EAAK4a,yBAA2B5a,EAAK4a,yBAAyB1R,KAA9BhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KAEhCA,EAAK6a,uBAAyB7a,EAAK6a,uBAAuB3R,KAA5BhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KArCfA,mFAmDXZ,KAAKH,MAAMga,mBACX7Z,KAAKH,MAAMoL,QAAQlN,KAAK,qCAGxB3F,GAKJ,OAAOA,2CAiBMkhB,GACb,IAAMxd,EAAGgE,OAAAoW,GAAA,EAAApW,CAAA,GAAMwZ,EAAM/b,KAAO+b,EAAM5d,OAC5BzC,EAAM6G,OAAAoW,GAAA,EAAApW,CAAA,GAAMwZ,EAAM/b,KAAOyC,KAAK/G,OAAOqgB,EAAM/b,OACzCf,EAAUsb,KAAIS,SAASzc,EAAK7C,GAA5BuD,MACR,OAAKA,EACEA,EAAMsc,QAAQ,GAAGK,QADL,oDAqDAuC,EAAYle,GAAU,IAAAuD,EAAAf,KAEzCvG,KAAMO,IAAI,GAAAC,OAAG2d,GAAH,0BAAoC8D,GAAYvhB,KAAK,SAAAC,GAE3D,GAAqB,YADIA,EAAKA,KAAtBC,aACwB,CAC5B,IAAMuH,EAAiBxH,EAAKA,KAAKA,KAC7B4f,EAAWla,OAAAqH,GAAA,EAAArH,CAAOiB,EAAKF,MAAMmZ,aAEjCpY,EAAe8B,QAAQ,SAAA6P,GACnB,IAAIzX,EAAM,GACVA,EAAIb,GAAKsY,EAAEtY,GAAGof,WACdve,EAAI8B,MAAQ2V,EAAE3V,MACdoc,EAAYjc,KAAKjC,KAErBiF,EAAK6B,SAAS,CAAEoX,gBAGhBxc,EAAS,KAAMuD,EAAK4a,QAAQ/Z,SAG5Bga,MAAM,WAEXhhB,MAAM,SAAA4B,GACL1B,QAAQC,IAAI,mDAAoDyB,2CAK1Dkf,EAAYle,GAAU,IAAAoO,EAAA5L,KAChCvG,KAAMO,IAAI,GAAAC,OAAG2d,GAAH,gCAA0C8D,GAAYvhB,KAAK,SAAAC,GAEjE,GAAqB,YADIA,EAAKA,KAAtBC,aACwB,CAC5B,IAAMuH,EAAiBxH,EAAKA,KAAKA,KACjCwR,EAAKhJ,SAAS,CAAEhB,mBAEhBpE,EAAS,KAAMoO,EAAK+P,QAAQ/Z,SAG5Bga,MAAM,WAEXhhB,MAAM,SAAA4B,GACL1B,QAAQC,IAAI,6CAA8CyB,4CAKnDkf,EAAYle,GAAU,IAAAqe,EAAA7b,KACjCvG,KAAMO,IAAI,GAAAC,OAAG2d,GAAH,iCAA2C8D,GAAYvhB,KAAK,SAAAC,GAElE,GAAqB,YADIA,EAAKA,KAAtBC,aACwB,CAC5B,IAAMuH,EAAiBxH,EAAKA,KAAKA,KACjCyhB,EAAKjZ,SAAS,CAAEhB,mBAEhBpE,EAAS,KAAMqe,EAAKF,QAAQ/Z,SAG5Bga,MAAM,WAEXhhB,MAAM,SAAA4B,GACL1B,QAAQC,IAAI,8CAA+CyB,mDAK7Ckf,EAAYle,GAAU,IAAAse,EAAA9b,KAExCvG,KAAMO,IAAI,GAAAC,OAAG2d,GAAH,wCAAkD8D,GAAYvhB,KAAK,SAAAC,GAEzE,GAAqB,YADIA,EAAKA,KAAtBC,aACwB,CAC5B,IAAMuH,EAAiBxH,EAAKA,KAAKA,KAGjCoD,EAAS,KAAMse,EAAKH,QAAQ/Z,SAG5Bga,MAAM,WAEXhhB,MAAM,SAAA4B,GAEL1B,QAAQC,IAAI,sDAAuDyB,kDAKtDkf,EAAYle,GAAU,IAAAue,EAAA/b,KACvCvG,KAAMO,IAAI,GAAAC,OAAG2d,GAAH,uCAAiD8D,GAAYvhB,KAAK,SAAAC,GAExE,GAAqB,YADIA,EAAKA,KAAtBC,aACwB,CAC5B,IAAMuH,EAAiBxH,EAAKA,KAAKA,KACjC2hB,EAAKnZ,SAAS,CAAEhB,mBAChBpE,EAAS,KAAMue,EAAKJ,QAAQ/Z,SAG5Bga,MAAM,WAEXhhB,MAAM,SAAA4B,GACL1B,QAAQC,IAAI,qDAAsDyB,mDAIpDkf,EAAYle,GAAU,IAAAwe,EAAAhc,KACxCvG,KAAMO,IAAI,GAAAC,OAAG2d,GAAH,qCAA+C8D,GAAYvhB,KAAK,SAAAC,GAEtE,GAAqB,YADIA,EAAKA,KAAtBC,aACwB,CAC5B,IAAMuH,EAAiBxH,EAAKA,KAAKA,KACjC4hB,EAAKpZ,SAAS,CAAEhB,mBAChBpE,EAAS,KAAMwe,EAAKL,QAAQ/Z,SAG5Bga,MAAM,WAEXhhB,MAAM,SAAA4B,GACL1B,QAAQC,IAAI,mDAAoDyB,gDAIrDke,EAAQld,GAAU,IAAAye,EAAAjc,KACjCvG,KAAM0B,KAAN,GAAAlB,OAAc2d,GAAd,+BAAmD8C,GAAQvgB,KAAK,SAAAC,GAE5D,GAAqB,YADIA,EAAKA,KAAtBC,aACwB,CAC5B,IAAMuH,EAAiBxH,EAAKA,KAAKA,KACjCoD,EAAS,KAAMye,EAAKN,QAAQ/Z,SAG5Bga,MAAM,WAEXhhB,MAAM,SAAA4B,GACL1B,QAAQC,IAAI,mDAAoDyB,sDAgI/CwC,GACjBgB,KAAKH,MAAMuJ,OAAOkB,KAAK7M,OAAS,GAChCuC,KAAK4C,SAAS,CACVmX,eAAgB,eAChBgB,cAAe/b,IAEnBgB,KAAKH,MAAMjD,aACXoD,KAAKH,MAAM5C,oBAAoB,kBAE/B+C,KAAK4C,SAAS,CACVmY,cAAe/b,IAEnBgB,KAAKH,MAAMjD,aACXoD,KAAKH,MAAM5C,oBAAoB+B,wCAG3B0c,GAAY,IAAAQ,EAAAlc,KACpB,GAAkC,YAA9BA,KAAKa,MAAMkZ,eAEX,OAAO,IAAIva,QAAQ,SAAAC,GACfyc,EAAKC,eAAeT,EAAY,SAAU7gB,EAAK6C,GAC3C+B,EAAQ/B,OAIf,GAAkC,qBAA9BsC,KAAKa,MAAMkZ,eAEhB,OAAO,IAAIva,QAAQ,SAAAC,GACfyc,EAAKE,sBAAsBV,EAAY,SAAU7gB,EAAK6C,GAClD+B,EAAQ/B,OAKf,GAAkC,iBAA9BsC,KAAKa,MAAMkZ,eAAmC,CACnD,IAAIje,EAAM,GAKV,OAJAA,EAAI4e,OAAS1a,KAAKa,MAAMyJ,KACxBxO,EAAIsO,SAAWpK,KAAKa,MAAMka,cAC1Bjf,EAAI8B,MAAQ8d,EAEL,IAAIlc,QAAQ,SAAAC,GACfyc,EAAKG,mBAAmBvgB,EAAK,SAAUjB,EAAK6C,GACxC+B,EAAQ/B,OAKf,MAAkC,WAA9BsC,KAAKa,MAAMkZ,eACT,IAAIva,QAAQ,SAAAC,GACfyc,EAAKI,cAAcZ,EAAY,SAAU7gB,EAAK6C,GAC1C+B,EAAQ/B,OAImB,oBAA9BsC,KAAKa,MAAMkZ,eACT,IAAIva,QAAQ,SAAAC,GACfyc,EAAKK,qBAAqBb,EAAY,SAAU7gB,EAAK6C,GACjD+B,EAAQ/B,OAImB,kBAA9BsC,KAAKa,MAAMkZ,eACT,IAAIva,QAAQ,SAAAC,GACfyc,EAAKM,sBAAsBd,EAAY,SAAU7gB,EAAK6C,GAClD+B,EAAQ/B,OAImB,QAA9BsC,KAAKa,MAAMkZ,eAET,IAAIva,QAAQ,SAAAC,GACfyc,EAAKT,uBAAuBC,EAAY,SAAU7gB,EAAK6C,GAEnD+B,EAAQ/B,YALf,oDAiCiBwN,GAQtB,GAPIlL,KAAKa,MAAMe,iBAAmBsJ,EAAU9B,OAAOxH,gBAAkBsJ,EAAU9B,OAAOxH,gBAClF5B,KAAK4C,SAAS,CAAEhB,eAAgBsJ,EAAU9B,OAAOxH,iBAMjDsJ,EAAU9B,OAAOqT,eAAgB,CAMjCzc,KAAK4C,SAAS,CACV3E,QANU,CACVE,MAAO,GACPE,SAAU,GACVc,SAAU,MAiClB,GA1BIa,KAAKH,MAAMga,mBAAqB3O,EAAU2O,oBAAsB3O,EAAUwR,cAAgBxR,EAAU2O,mBACpG7Z,KAAK4C,SAAS,CAAEwV,WAAW,IAI3BpY,KAAKH,MAAMuJ,OAAOkB,KAAK7M,SAAWyN,EAAU9B,OAAOkB,KAAK7M,SAEpDyN,EAAU9B,OAAOkB,KAAK7M,OAAS,GAC/BuC,KAAKH,MAAM5C,oBAAoB,gBAE/BiO,EAAU9B,OAAOkB,KAAK7M,QAAU,GAChCuC,KAAKH,MAAM5C,oBAAoB+C,KAAKa,MAAMka,cAAgB/a,KAAKa,MAAMka,cAAgB,QAI7F/a,KAAK4C,SAAS,CACVmX,eAAgB7O,EAAU9B,OAAO2Q,eACjCzd,SAAU4O,EAAU9B,OAAO9M,SAC3BqK,gBAAiBuE,EAAU9B,OAAOzC,gBAClC1F,QAASiK,EAAU9B,OAAOnI,QAC1Bga,eAAgB/P,EAAU9B,OAAO6R,eACjC/U,aAAcgF,EAAU9B,OAAOlD,aAC/BtE,eAAgBsJ,EAAU9B,OAAOxH,eACjC0I,KAAMY,EAAU9B,OAAOkB,YAGmB+D,IAA1CnD,EAAU9B,OAAOxH,eAAehE,MAChC,GAAIsN,EAAU9B,OAAOkB,KAAK7M,OAAS,EAAG,CAKlC,IAJA,IAAI6B,EAAU4L,EAAU9B,OAAOkB,KAAKvH,IAAI,SAAAwQ,GAAC,OAAIA,EAAE3V,QAC3CL,EAAO2N,EAAU9B,OAAOxH,eAAelG,MACvC0O,EAAWc,EAAU9B,OAAOxH,eAAewI,SAC3C8F,EAAG,IAAAjW,OAAOmQ,EAAP,KAAAnQ,OAAmBsD,EAAnB,KACEI,EAAI,EAAGA,EAAI2B,EAAQ7B,OAAQE,IAE5BuS,EADK,GAALvS,EACMuS,EAAIjW,OAAJ,WAAAA,OAAsBqF,EAAQ3B,KAE9BuS,EAAIjW,OAAJ,YAAAA,OAAuBqF,EAAQ3B,KAI7Cgf,OAAO1R,QAAQ2R,UAAU,KAAM,KAAM1M,OAClC,CACH,IAAI3S,EAAO2N,EAAU9B,OAAOxH,eAAelG,MACvC0O,EAAWc,EAAU9B,OAAOxH,eAAewI,SAC3C8F,EAAG,IAAAjW,OAAOmQ,EAAP,KAAAnQ,OAAmBsD,GACxBof,OAAO1R,QAAQ2R,UAAU,KAAM,KAAM1M,qCAK1C,IAAA2M,EAAA7c,KACL,OACI7H,EAAAC,EAAAC,cAAA,WACK2H,KAAK8a,iBACN3iB,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAQvkB,MAAO,CAAE+I,gBAAiB,CAACyb,GAAkB/c,KAAKa,MAAMe,eAAeob,QAAUC,OAAK,EAACC,OAAO,MAClG/kB,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAavc,KAAK,KAAlB,iBACApI,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAepc,QAASV,KAAKmd,SAC7BhlB,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAUM,OAAQpd,KAAKa,MAAMuc,OAAQhU,QAAM,GACvCjR,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAK1b,UAAU,UAAUgI,QAAM,GAC3BjR,EAAAC,EAAAC,cAAA,QAAM+I,UAAU,eACZjJ,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEC,QAAS,iBACpBL,EAAAC,EAAAC,cAAA,UAAQE,MAAO,CAAEgJ,QAAS,UAAWE,aAAc,MAAOD,OAAQ,mBAAqBwU,SAAU,SAAChX,GAAD,OAAO6d,EAAKrB,yBAAyBxc,EAAEmX,OAAOza,QAAQA,MAAOsE,KAAKa,MAAMka,eACrK5iB,EAAAC,EAAAC,cAAA,UAAQglB,SAAwC,QAA9Brd,KAAKa,MAAMkZ,eAA0Bre,MAAM,OAA7D,OACAvD,EAAAC,EAAAC,cAAA,UAAQglB,SAAwC,YAA9Brd,KAAKa,MAAMkZ,eAA8Bre,MAAM,WAAjE,YACAvD,EAAAC,EAAAC,cAAA,UAAQglB,SAAwC,WAA9Brd,KAAKa,MAAMkZ,eAA6Bre,MAAM,UAAhE,WACAvD,EAAAC,EAAAC,cAAA,UAAQglB,SAAwC,qBAA9Brd,KAAKa,MAAMkZ,eAAuCre,MAAM,oBAA1E,oBACAvD,EAAAC,EAAAC,cAAA,UAAQglB,SAAwC,kBAA9Brd,KAAKa,MAAMkZ,eAAoCre,MAAM,iBAAvE,mBAGRvD,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEC,QAAS,iBACpBL,EAAAC,EAAAC,cAACilB,GAAAllB,EAAD,CAAagJ,UAAU,YACnB1F,MAAOsE,KAAKa,MAAMe,eAClB2Z,YAAavb,KAAKub,YAClBvF,SAAUhW,KAAK2a,aACf4C,OAAQC,MAKhBrlB,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEC,QAAS,iBACpBL,EAAAC,EAAAC,cAACilB,GAAAllB,EAAD,CAAagJ,UAAU,YACnB1F,MAAOsE,KAAKa,MAAMga,YAClBU,YAAavb,KAAKwa,gBAClBxE,SAAUhW,KAAK8Z,cAEf2D,WAAYzd,KAAKa,MAAMyJ,KAAK7M,QAAU,GAAkD,kBAA9BuC,KAAKa,MAAMkZ,kBAI7E5hB,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEC,QAAS,iBACpBL,EAAAC,EAAAC,cAAA,UACK2H,KAAKa,MAAMyJ,KAAKvH,IAAI,SAAA3F,GACjB,OAAOjF,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEC,QAAS,eAAgB2T,WAAY,SAAU5J,MAAO,OAAQd,aAAc,MAAOF,QAAS,MAAOG,SAAU,OAAQ4K,WAAY,QAAUlP,EAAIQ,MAC/JzF,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAE+T,WAAY,OAASlL,UAAU,QAAQnG,GAAG,MAAMyF,QAAS,WAAQmc,EAAKxf,UAAUD,EAAInC,MAAnG,WAnCxB,aA6CA9C,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAK1b,UAAU,UAAUgI,QAAM,GAEvBpJ,KAAKH,MAAMga,kBACP1hB,EAAAC,EAAAC,cAACF,EAAAC,EAAMslB,SAAP,KACIvlB,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEgJ,QAAS,UACpBpJ,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAASvkB,MAAO,CAAEiK,OAAQ,YACrBxC,KAAKH,MAAM8d,0BAA0Bzf,WAI9C/F,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEgJ,QAAS,UACpBpJ,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAASvkB,MAAO,CAAEiK,OAAQ,YACtBrK,EAAAC,EAAAC,cAAA,QAAMqI,QAAS,WAAQmc,EAAKhd,MAAMZ,WAAlC,YAGR9G,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEgJ,QAAS,UAEpBpJ,EAAAC,EAAAC,cAAA,UACIE,MACI,CACIiJ,OAAQ,YACR+K,YAAa,MACb9K,aAAc,MACdc,MAAO,QACPoK,WAAY,OACZR,WAAY,UARxB,OAiBRhU,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAASvkB,MAAO,CAAEiK,OAAQ,YACtBrK,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAASpc,QAASV,KAAKkY,iBAAvB,eAS5B/f,EAAAC,EAAAC,cAACulB,GAAA,EAAD,CAAOC,KAAM7d,KAAKa,MAAMuX,UAAW0F,QAAS9d,KAAKkY,gBAAiB6F,QAAM,GACpE5lB,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEE,UAAW,WAAxB,0BAEAN,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEgJ,QAAS,SACnBpJ,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAMvkB,MAAO,CAAEwT,OAAQ,OAAQD,MAAO,QAASvK,QAAS,YAAa4K,WAAY,OAAQ6R,UAAW,kBAChG7lB,EAAAC,EAAAC,cAACykB,GAAA,EAAD,KAEI3kB,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAOjjB,KAAK,OAAO0D,KAAK,QAAQtC,GAAG,QAAQ+a,SAAU,SAAChX,GAAD,OAAO6d,EAAKxD,kBAAkBra,IAAI+X,YAAY,aAClG/W,KAAKa,MAAMiV,OAAO3X,OACfhG,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgJ,QAAS,MAAOG,SAAU,QAAUN,UAAU,sBAAsBpB,KAAKa,MAAMiV,OAAO3X,QAI1GhG,EAAAC,EAAAC,cAACykB,GAAA,EAAD,KAEI3kB,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAOjjB,KAAK,WAAW0D,KAAK,WAAWtC,GAAG,WAAW+a,SAAU,SAAChX,GAAD,OAAO6d,EAAKxD,kBAAkBra,IAAI+X,YAAY,aAC5G/W,KAAKa,MAAMiV,OAAOzX,UACflG,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgJ,QAAS,MAAOG,SAAU,QAAUN,UAAU,sBAAsBpB,KAAKa,MAAMiV,OAAOzX,WAItG2B,KAAKH,MAAM6c,aAAevkB,EAAAC,EAAAC,cAAA,KAAG+I,UAAU,oBAAb,6BAAgE,KAG9FjJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgK,MAAO,UAAWmK,eAAgB,YAAalK,OAAQ,WAC/D9B,QAAS,WACLmc,EAAK3E,kBACL2E,EAAKxE,0BAHb,iCAMAlgB,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAQpc,QAAS,SAAC1B,GAAD,OAAO6d,EAAKlD,aAAa3a,IACtCzG,MAAO,CACHuT,MAAO,OACPI,OAAQ,OACR5K,gBAAiB,UACjBiB,MAAO,OACPf,OAAQ,mBACTJ,UAAU,oBAAoBpB,KAAKa,MAAMwa,yBAA2B,QACnEljB,EAAAC,EAAAC,cAAC4lB,GAAA7lB,EAAD,CACIyB,KAAK,OACL0I,MAAM,OACN2J,OAAO,KACPJ,MAAM,WAQ9B3T,EAAAC,EAAAC,cAACulB,GAAA,EAAD,CAAOC,KAAM7d,KAAKa,MAAMyX,gBAAiBwF,QAAS9d,KAAKqY,sBAAuB0F,QAAM,GAChF5lB,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEE,UAAW,WAAxB,6BAEIuH,KAAKH,MAAMuJ,OAAOqT,gBAGdtkB,EAAAC,EAAAC,cAAA,OAAKC,MAAM,yCACPH,EAAAC,EAAAC,cAAA,QAAMkI,KAAK,IAAIjI,MAAM,QAAQ4lB,eAAa,QAAQC,aAAW,SAA7D,QACAhmB,EAAAC,EAAAC,cAAA,0BAFJ,+BAMRF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEgJ,QAAS,SACnBpJ,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAMvkB,MAAO,CAAEwT,OAAQ,OAAQD,MAAO,QAASvK,QAAS,YAAa4K,WAAY,OAAQ6R,UAAW,kBAChG7lB,EAAAC,EAAAC,cAACykB,GAAA,EAAD,KAEI3kB,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAOjjB,KAAK,OAAO0D,KAAK,QAAQtC,GAAG,QAAQS,MAAOsE,KAAKa,MAAM5C,QAAQE,MAAO6X,SAAU,SAAChX,GAAD,OAAO6d,EAAKxD,kBAAkBra,IAAI+X,YAAY,UACnI/W,KAAKa,MAAMiV,OAAO3X,OACfhG,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgJ,QAAS,MAAOG,SAAU,QAAUN,UAAU,sBAAsBpB,KAAKa,MAAMiV,OAAO3X,QAI1GhG,EAAAC,EAAAC,cAACykB,GAAA,EAAD,KAEI3kB,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAOjjB,KAAK,WAAW0D,KAAK,WAAWtC,GAAG,WAAWS,MAAOsE,KAAKa,MAAM5C,QAAQkB,SAAU6W,SAAU,SAAChX,GAAD,OAAO6d,EAAKxD,kBAAkBra,IAAI+X,YAAY,aAChJ/W,KAAKa,MAAMiV,OAAO3W,UACfhH,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgJ,QAAS,MAAOG,SAAU,QAAUN,UAAU,sBAAsBpB,KAAKa,MAAMiV,OAAO3W,WAG1GhH,EAAAC,EAAAC,cAACykB,GAAA,EAAD,KAEI3kB,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAOjjB,KAAK,WAAW0D,KAAK,WAAWtC,GAAG,WAAWS,MAAOsE,KAAKa,MAAM5C,QAAQI,SAAU2X,SAAU,SAAChX,GAAD,OAAO6d,EAAKxD,kBAAkBra,IAAI+X,YAAY,aAChJ/W,KAAKa,MAAMiV,OAAOzX,UACflG,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgJ,QAAS,MAAOG,SAAU,QAAUN,UAAU,sBAAsBpB,KAAKa,MAAMiV,OAAOzX,WAI1GlG,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEgK,MAAO,UAAWmK,eAAgB,YAAalK,OAAQ,WAC/D9B,QAAS,WACLmc,EAAKxE,wBACLwE,EAAK3E,oBAHb,kCAOA/f,EAAAC,EAAAC,cAACykB,GAAA,EAAD,CAAQpc,QAAS,SAAC1B,GAAD,OAAO6d,EAAKlD,aAAa3a,GAAG,IACzCzG,MAAO,CACHuT,MAAO,OACPI,OAAQ,OACR5K,gBAAiB,UACjBiB,MAAO,OACPf,OAAQ,mBACTJ,UAAU,oBAAoBpB,KAAKa,MAAMwa,yBAA2B,SACnEljB,EAAAC,EAAAC,cAAC4lB,GAAA7lB,EAAD,CACIyB,KAAK,OACL0I,MAAM,OACN2J,OAAO,KACPJ,MAAM,mBA5vBtB/S,aAywBlBqlB,GAAM,iBAAqB,CAC7BC,WAAY,SACZ7lB,QAAS,OAET8lB,UAAW,CACPhd,gBALIqO,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAAS,OAMblO,aAAc,GACd8c,QAAS,MACT/lB,QAAS,QACT+T,YAAa,EACbL,OAAQ,GACRJ,MAAO,MAGT0R,GAAe,CACjBgB,QAAS,SAAAjB,GAAM,OAAAzd,OAAA4Z,GAAA,EAAA5Z,CAAA,GAAUyd,EAAV,CAAkBjc,gBAAiB,WAClDmd,OAAQ,SAAClB,EAADmB,GAAyD,IAA9CtkB,EAA8CskB,EAA9CtkB,KAAMqjB,EAAwCiB,EAAxCjB,WAAYkB,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,WACtCrc,EAAQsc,KAAOzkB,EAAKmI,OAC1B,OAAOzC,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAyd,EADP,CAEIjc,gBAAiBmc,EACX,KACAmB,EAAaxkB,EAAKmI,MAAQoc,EAAYpc,EAAMuc,MAAM,IAAKC,MAAQ,KACrExc,MAAOkb,EACD,OACAmB,EACIC,KAAOG,SAASzc,EAAO,SAAW,EAAI,QAAU,QAChDnI,EAAKmI,MACfC,OAAQib,EAAa,cAAgB,aAG7CnE,MAAO,SAAAiE,GAAM,OAAAzd,OAAA4Z,GAAA,EAAA5Z,CAAA,GAAUyd,EAAWa,OAClCrH,YAAa,SAAAwG,GAAM,OAAAzd,OAAA4Z,GAAA,EAAA5Z,CAAA,GAAUyd,EAAWa,OACxCa,YAAa,SAAC1B,EAAD2B,GAAA,IAAW9kB,EAAX8kB,EAAW9kB,KAAX,OAAA0F,OAAA4Z,GAAA,EAAA5Z,CAAA,GAA4Byd,EAAWa,GAAIhkB,EAAKmI,UAE3Dwa,GAAoB,SAACC,GACvB,OAAQA,GACJ,IAAK,WACD,MAAO,UACX,IAAK,mBACD,MAAO,UACX,IAAK,UACD,MAAO,UACX,IAAK,kBACD,MAAO,UACX,QACI,MAAO,YA4BJ3P,eAAWC,YAVF,SAACzM,GACrB,MAAO,CACHuI,OAAQvI,EAAMuI,OACd+V,gBAAiBte,EAAMuI,OAAO+V,gBAC9B9D,yBAA0Bxa,EAAMuI,OAAOiS,yBACvCxB,kBAAmBhZ,EAAMuI,OAAOyQ,kBAChC6C,aAAc7b,EAAMuI,OAAOsT,aAC3BiB,0BAA2B9c,EAAMuI,OAAOuU,4BAtBrB,SAAC/jB,GACxB,MAAO,CACHqD,oBAAqBsQ,YAAmBtQ,EAAqBrD,GAC7DmD,gBAAiBwQ,YAAmBxQ,EAAiBnD,GACrDgD,WAAY2Q,YAAmB3Q,EAAYhD,GAC3CiD,8BAA+B0Q,YAAmB1Q,EAA+BjD,GACjF0D,gBAAiBiQ,YAAmBjQ,EAAiB1D,GACrDoE,MAAOuP,YAAmBvP,EAAOpE,GACjCsF,OAAQqO,YAAmBrO,EAAQtF,GACnCqF,OAAQsO,YAAmBtO,EAAQrF,GACnCuD,OAAQoQ,YAAmBpQ,EAAQvD,GACnCyD,UAAWkQ,YAAmBlQ,EAAWzD,KAcvB0T,CAA6CuK,0BCh1BxDuH,uBA1BX,SAAAA,EAAYvf,GAAO,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAAof,IACfxe,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsf,GAAAjf,KAAAH,KAAMH,KACDgB,MAAQ,GAFED,mTAkBf,OACIzI,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE8I,UAAW,MAAQD,UAAU,eACvCjJ,EAAAC,EAAAC,cAAA,OAAK8b,IAAKkL,KAAmBvT,MAAM,MAAMsI,IAAI,aArBtCrb,cC2FRumB,8BA1FX,SAAAA,EAAYzf,GAAO,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAAsf,IACf1e,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwf,GAAAnf,KAAAH,KAAMH,KACDgB,MAAQ,CACT0e,aAAc,KACdC,IAAK,GACLC,KAAM,GACNC,MAAK,GAET9e,EAAK+e,gBAAkB/e,EAAK+e,gBAAgB7V,KAArBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KACvBA,EAAKgf,eAAiBhf,EAAKgf,eAAe9V,KAApBhK,OAAAiK,EAAA,EAAAjK,QAAAiK,EAAA,EAAAjK,CAAAc,KATPA,+EAYHif,GACZ7f,KAAK4C,SAAS,CACV2c,aAAcM,EAAM1J,OAAO2J,MAAM,qKAIrC9f,KAAK4C,SAAS,CACV8c,MAAK,KAEHtlB,EAAO,IAAI2lB,UACZC,OAAO,OAAQhgB,KAAKa,MAAM0e,uBACV5f,KAAMxE,KAAN,GAAAlB,OAAcC,yBAAd,oCAA8EE,WAA/FqE,UACSrE,KAAKolB,KACdxf,KAAK4C,SAAS,CACV4c,IAAK/gB,EAASrE,KAAKolB,IACnBE,MAAK,IAGTjhB,EAASrE,KAAKqlB,KAAKhiB,OAAS,GAC5BuC,KAAK4C,SAAS,CACV6c,KAAMhhB,EAASrE,KAAKqlB,0IAK5B,OACItnB,EAAAC,EAAAC,cAAA,OAAKC,MAAM,YAAYC,MAAO,CAAE8I,UAAW,QACvClJ,EAAAC,EAAAC,cAAA,OAAKC,MAAM,OACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wBACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,oBACPH,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,+BACPF,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,OAAO0D,KAAK,OAAOjF,MAAM,eAAe2nB,UAAQ,EAACjK,SAAUhW,KAAK2f,kBAAmBxnB,EAAAC,EAAAC,cAAA,YAEnGF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eAKXH,EAAAC,EAAAC,cAAA,UAAQwB,KAAK,SAASvB,MAAM,4BAA4BoI,QAASV,KAAK4f,eAAgB5I,UAAWhX,KAAKa,MAAM0e,gBAA2Bvf,KAAKa,MAAM6e,MAAlJ,YAGRvnB,EAAAC,EAAAC,cAAA,OAAKC,MAAM,MAAMC,MAAO,CAAEC,QAASwH,KAAKa,MAAM2e,IAAM,QAAU,SAC1DrnB,EAAAC,EAAAC,cAAA,OAAKC,MAAM,uBAAuBC,MAAO,CAAE8I,UAAW,SAClDlJ,EAAAC,EAAAC,cAAA,OAAKC,MAAM,+CAA+C4nB,KAAK,SAC3D/nB,EAAAC,EAAAC,cAAA,cAAS2H,KAAKa,MAAM2e,KACpBrnB,EAAAC,EAAAC,cAAA,UAAQwB,KAAK,SAASvB,MAAM,QAAQ4lB,eAAa,QAAQC,aAAW,SAChEhmB,EAAAC,EAAAC,cAAA,QAAMoK,cAAY,QAAlB,YAKhBtK,EAAAC,EAAAC,cAAA,OAAKC,MAAM,MAAMC,MAAO,CAAE8I,UAAW,SACjClJ,EAAAC,EAAAC,cAAA,OAAKC,MAAM,8BAEH0H,KAAKa,MAAM6e,MACPvnB,EAAAC,EAAAC,cAAA,iCAKhBF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,MAAMC,MAAO,CAAE8I,UAAW,SACjClJ,EAAAC,EAAAC,cAAA,OAAKC,MAAM,8BACPH,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAC4nB,cAAc,SAEnBngB,KAAKa,MAAM4e,KAAKhiB,OAAO,GACnBuC,KAAKa,MAAM4e,KAAK1c,IAAI,SAAApF,GAChB,OAAOxF,EAAAC,EAAAC,cAAA,iBAASsF,EAAT,qCA/ErB5E,cC6DVqnB,eA7DX,SAAAA,EAAYvgB,GAAO,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAAogB,IACfxf,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsgB,GAAAjgB,KAAAH,KAAMH,KACDgB,MAAQ,CACTwf,YAAa,KACbhb,QAAS,KACThM,OAAQ,MALGuH,0MASP3F,EAAO+E,KAAKH,MAAM6K,MAAMC,OAAxB1P,YACSxB,KAAMO,IAAN,GAAAC,OAAaC,yBAAb,oCAAAD,OAA4EgB,WAC/D,YAD1Bb,UACKA,KAAKC,cACV2F,KAAK4C,SAAS,CACVyd,YAAajmB,EAAKA,KAAKA,KACvBiL,QAASjL,EAAKA,KAAKA,KAAKiL,QACxBhM,OAAQe,EAAKA,KAAKA,KAAKf,4IAK/B,OACIlB,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,cAAc7I,MAAO,CAAE8I,UAAW,SAmB7ClJ,EAAAC,EAAAC,cAACioB,GAAA,OAAD,KACInoB,EAAAC,EAAAC,cAAA,QAAMkoB,SAAS,SAAShC,QAAO,gFAAAtkB,OAAkF+F,KAAKa,MAAMwf,YAAYplB,MACxI9C,EAAAC,EAAAC,cAAA,QAAMkoB,SAAS,UAAUhC,QAAQ,YACjCpmB,EAAAC,EAAAC,cAAA,QAAMkoB,SAAS,YAAYhC,QAAQ,oBACnCpmB,EAAAC,EAAAC,cAAA,QAAMkoB,SAAS,WAAWhC,QAASve,KAAKa,MAAMwE,QAAQ9H,OACtDpF,EAAAC,EAAAC,cAAA,QAAMkoB,SAAS,iBAAiBhC,QAASve,KAAKa,MAAMwf,YAAYxe,cAChE1J,EAAAC,EAAAC,cAAA,QAAMkoB,SAAS,WAAWhC,QAAQ,wIAEtCpmB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAK+b,IAAI,GAAGD,IAAI,qIAAqI5b,MAAO,CAAEuT,MAAO,QAASI,OAAQ,WACtL/T,EAAAC,EAAAC,cAAA,UAAK2H,KAAKa,MAAMwE,QAAQ9H,MACxBpF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,SAAI2H,KAAKa,MAAMwE,QAAQ9H,MAA1B,IAAqCyC,KAAKa,MAAMwf,YAAYxe,aAC5D1J,EAAAC,EAAAC,cAAA,UAAK2H,KAAKa,MAAMxH,OAAO2I,UAAY,IAAMhC,KAAKa,MAAMxH,OAAO8H,UAC3DhJ,EAAAC,EAAAC,cAAA,wCAvDYU,sBCY1BkS,GAAUuV,eACVC,eACJ,SAAAA,EAAY5gB,GAAO,IAAAe,EAAA,OAAAd,OAAAC,EAAA,EAAAD,CAAAE,KAAAygB,IACjB7f,EAAAd,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2gB,GAAAtgB,KAAAH,KAAMH,KACDgB,MAAQ,CACX6f,iBAAiB,EACjB3hB,KAAM6B,EAAKf,MAAM8gB,KAAK5hB,MAJP6B,wEAQWZ,KAAKH,MAAM8gB,KAA/BD,gBASR,OACGvoB,EAAAC,EAAAC,cAACuoB,EAAA,EAAD,CAAQ3V,QAASA,IAChB9S,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwoB,GAAD,MACA1oB,EAAAC,EAAAC,cAACyoB,EAAA,EAAD,KACE3oB,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,IAAI8H,OAAK,EAACC,UAAW7B,KACjCjnB,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,SAAS8H,OAAK,EAACC,UAAWpL,KACtC1d,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,UAAU8H,OAAK,EAACC,UAAW/J,KACvC/e,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,YAAY8H,OAAK,EAACC,UAAWxY,KACzCtQ,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,kBAAkB8H,OAAK,EAACC,UAAWxY,KAC/CtQ,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,oBAAoB8H,OAAK,EAACC,UAAWrT,KACjDzV,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,0BAA0B8H,OAAK,EAACC,UAAWrT,KACvDzV,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,WAAW8H,OAAK,EAACC,UAAW1P,KACxCpZ,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,iBAAiB8H,OAAK,EAACC,UAAW1P,KAC9CpZ,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,mBAAmB8H,OAAK,EAACC,UAAWC,KAChD/oB,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,iBAAiB8H,OAAK,EAACC,UAAWC,KAC9C/oB,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,uBAAuB8H,OAAK,EAACC,UAAWC,KACpD/oB,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,yBAAyB8H,OAAK,EAACC,UAAWC,KACtD/oB,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,WAAW8H,OAAK,EAACC,UAAW1S,KACxCpW,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,cAAc8H,OAAK,EAACC,UAAW3B,KAC3CnnB,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAO7H,KAAK,mBAAmB8H,OAAK,EAACC,UAAWb,eAtC1CrnB,aAkDHuU,mBALf,SAAwBzM,GACtB,MAAO,CACL8f,KAAM9f,EAAM8f,OAGDrT,CAAwBmT,cCvDnBU,QACW,cAA7BxE,OAAO9R,SAASuW,UAEa,UAA7BzE,OAAO9R,SAASuW,UAEhBzE,OAAO9R,SAASuW,SAAS1W,MACvB,yEChBE2W,WAAe,CACjBX,iBAAiB,EACjB3hB,KAAM,KCHJsiB,GAAe,CAEjB/W,KAAM,GACN1I,eAAgB,GAChBoZ,6BAA8B,GAC9BjB,eAAgB,MAChBzd,SAAU,GACV2E,QAAS,GACT0F,gBAAiB,GACjBsU,eAAgB,GAChB/U,aAAc,GACdmF,SAAS,EACT8T,iBAAiB,EACjBtF,mBAAmB,EACnB8D,0BAA2B,GAC3BtC,0BAA0B,EAC1BqB,cAAc,EACdD,gBAAgB,GClBd4E,GAAe,CACjB3kB,gBAAiB,GACjB2O,SAAS,EACTxC,YAAY,EACZC,gBAAgB,EAChBC,iBAAiB,EACjBC,mBAAoB,GACpBzF,eAAgB,GAChBD,qBAAsB,GACtBjH,mBAAmB,GACnB4E,QAAS,GACTpF,QAAS,GACTylB,WAAY,GACZpgB,SAAU,GACVyI,KAAK,EACLgC,gBAAiB,GACjBnQ,OAAQ,aACRH,QAAQ,GCjBNgmB,GAAe,CACjBE,2BAA4B,GAC5BC,+BAAgC,GAChCvgB,QAAQ,GACR3E,SAAS,GACTlD,YAAY,GACZ8H,SAAS,GACTwF,eAAe,GACfM,eAAe,EACfC,gBAAgB,EAChBoE,SAAS,EACTxC,YAAY,EACZC,gBAAgB,EAChBC,iBAAiB,EACjB0Y,0BAA2B,ICZzBJ,UAAe,CACjBK,mBAAoB,GACpBvb,kBAAmB,GACnBV,YAAa,GACbjB,mBAAmB,GACnB0B,aAAa,GACb5J,SAAS,GACTtD,OAAO,GACP6P,YAAY,EACZC,gBAAgB,EAChBC,iBAAiB,EACjByK,2BAA2B,EAC3BC,+BAA+B,EAC/BC,gCAAgC,EAChCjC,eAAgB,CAChBG,uBAAwB,GACxBE,mBAAoB,MClBlBuP,GAAe,CACjBM,yBAA0B,ICDxBN,GAAe,CACjB7Y,0BAA2B,GAC3BoZ,8BAA+B,GAC/B7Z,cAAe,GACfxN,aAAc,GACdyM,eAAe,EACfC,gBAAgB,GCEL4a,eAAgB,CAC3BlB,KPHW,WAAuC,IAAtC9f,EAAsC8O,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAA9B0R,GAAcS,EAAgBnS,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAAP,GAC3C,OAAQmS,EAAOjoB,MACX,IAAK,mBACD,MAAO,CACH6mB,iBAAkBnK,KAAQuL,EAAO/iB,MACjCA,KAAM+iB,EAAO/iB,MAErB,IAAK,UACD,MAAO,CACH2hB,iBAAiB,EACjB3hB,KAAM,IAGd,QACI,OAAO8B,IOVfvE,SLSW,WAAuC,IAAtCuE,EAAsC8O,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAA9B0R,GAAcS,EAAgBnS,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAAP,GAC3C,OAAQmS,EAAOjoB,MACX,IAAK,eACD,MAAO,CACHiP,gBAAgB,GAExB,IAAK,gBACD,MAAO,CACHC,iBAAiB,GAEzB,IAAK,kBACD,MAAO,CACHF,YAAY,GAEpB,IAAK,qBACD,OAAO/I,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEImI,mBAAoB8Y,EAAOxnB,QAC3BuO,YAAY,EACZC,gBAAgB,EAChBC,iBAAiB,IAEzB,IAAK,sBACD,OAAOjJ,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIyC,qBAAsBwe,EAAOxnB,QAAQgJ,qBACrCrC,QAAS6gB,EAAOxnB,QAAQ2G,QACxBpF,QAASimB,EAAOxnB,QAAQgC,SACxB4E,SAAU4gB,EAAOxnB,QAAQ4G,SACzB7E,mBAAmBylB,EAAOxnB,QAAQ+B,qBAI1C,IAAK,2BACD,OAAAyD,OAAA4Z,GAAA,EAAA5Z,CAAA,GACOe,EADP,CAEIxE,mBAAmBylB,EAAOxnB,UAGlC,IAAK,oBACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI0C,eAAgBue,EAAOxnB,UAG/B,IAAK,mBACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIrF,OAAQsmB,EAAOxnB,UAGvB,IAAK,gBACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIrF,OAAQsmB,EAAOxnB,QAAQkB,OACvBmQ,gBAAiBmW,EAAOxnB,QAAQqR,gBAChChC,IAAKmY,EAAOxnB,QAAQqP,MAI5B,IAAK,uBACD,OAAO7J,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI8I,IAAKmY,EAAOxnB,UAGpB,IAAK,uBACD,IAAIC,EAAesG,EAAMtG,aAGzB,OAFAA,EAAaunB,EAAOxnB,QAAQW,IAAI0H,MAAQmf,EAAOxnB,QAAQqI,MACvDpI,EAAaunB,EAAOxnB,QAAQW,IAAII,OAASymB,EAAOxnB,QAAQe,OACjDyE,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEItG,aAAcA,IAGtB,IAAK,cACD,OAAOuF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIxF,OAAQymB,EAAOxnB,UA6BvB,IAAK,mBACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEInE,gBAAiBolB,EAAOxnB,UAahC,QACI,OAAOuG,IKpIfuI,ONSW,WAAuC,IAAtCvI,EAAsC8O,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAA9B0R,GAAcS,EAAgBnS,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAAP,GAC3C,OAAQmS,EAAOjoB,MACX,IAAK,4BAED,OAAOiG,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIkhB,kBAAmBD,EAAOxnB,UAElC,IAAK,sBAED,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIkZ,eAAgB+H,EAAOxnB,UAE/B,IAAK,sBAED,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIe,eAAgBkgB,EAAOxnB,UAE/B,IAAK,gBACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIe,eAAgB,KAExB,IAAK,sCACD,OAAO9B,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIma,6BAA8B8G,EAAOxnB,UAE7C,IAAK,8BAGD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIvE,SAAUwlB,EAAOxnB,UAEzB,IAAK,sCAED,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI8F,gBAAiBmb,EAAOxnB,UAEhC,IAAK,6BAED,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEII,QAAS6gB,EAAOxnB,UAExB,IAAK,qCAED,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIoa,eAAgB6G,EAAOxnB,UAG/B,IAAK,mCACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIqF,aAAc4b,EAAOxnB,UAG7B,IAAK,gBACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIwa,0BAA0B,EAC1BqB,cAAc,EACd7C,mBAAmB,IAI3B,IAAK,gBAED,OAAO/Z,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIse,iBAAiB,EACjBxB,0BAA2BmE,EAAOhjB,SAClCuc,0BAA0B,EAC1BxB,mBAAmB,EACnB6C,cAAc,IAItB,IAAK,gBACD,OAAO5c,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIwa,0BAA0B,EAC1BxB,mBAAmB,EACnB6C,cAAc,IAGtB,IAAK,SACD,OAAO5c,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIgZ,mBAAmB,EACnB8D,0BAA2B,GAC3BtC,0BAA0B,EAC1B8D,iBAAiB,IAEzB,IAAK,iBACD,OAAOrf,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI4b,gBAAgB,IAExB,IAAK,UACD,IAAInS,EAAIxK,OAAAqH,GAAA,EAAArH,CAAOe,EAAMyJ,MAMrB,OALG0X,MAAMC,QAAQH,EAAOxnB,SACpBgQ,EAAKvM,KAALmJ,MAAAoD,EAAIxK,OAAAqH,GAAA,EAAArH,CAASgiB,EAAOxnB,UAEpBgQ,EAAKvM,KAAK+jB,EAAOxnB,SAEdwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIyJ,KAAMA,IAGd,IAAK,aAED,IADA,IAAIA,EAAIxK,OAAAqH,GAAA,EAAArH,CAAOe,EAAMyJ,MACZ3M,EAAI,EAAGA,EAAI2M,EAAK7M,OAAQE,IACzB2M,EAAK3M,GAAG1C,IAAM6mB,EAAOxnB,SACrBgQ,EAAK6P,OAAOxc,EAAG,GAGvB,OAAOmC,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIyJ,KAAMA,IAId,QACI,OAAOzJ,IM1If1H,QFTW,WAAuC,IAAtC0H,EAAsC8O,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAA9B0R,GAAcS,EAAgBnS,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAAP,GAC3C,OAAQmS,EAAOjoB,MACX,IAAK,8BACD,OAAOiG,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI8gB,yBAAyB7hB,OAAAqH,GAAA,EAAArH,CAAKgiB,EAAOxnB,WAE7C,QACI,OAAOuG,IEEf7H,OHQW,WAAuC,IAAtC6H,EAAsC8O,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAA9B0R,GAAcS,EAAgBnS,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAAP,GAC3C,OAAQmS,EAAOjoB,MACX,IAAK,iBACD,IAAIb,EAAO8oB,EAAOxnB,QAAQ2G,QAAQnB,OAAOoiB,KAAKJ,EAAOxnB,QAAQ2G,SAAS,IACtE,OAAAnB,OAAA4Z,GAAA,EAAA5Z,CAAA,GACOe,EADP,CAEI2D,mBAAmBsd,EAAOxnB,QAAQC,aAClC4L,kBAAkB2b,EAAOxnB,QAAQ6nB,kBACjCjc,aAAa4b,EAAOxnB,QAAQ8L,aAC5BpN,OAAOA,EACPsD,SAASwlB,EAAOxnB,QAAQgC,SACxBmJ,YAAYqc,EAAOxnB,QAAQkL,QAGnC,IAAK,0BACD,IAAIjL,EAAesG,EAAM2D,mBAGzB,OAFAjK,EAAaunB,EAAOxnB,QAAQW,IAAI0H,MAAQmf,EAAOxnB,QAAQqI,MACvDpI,EAAaunB,EAAOxnB,QAAQW,IAAII,OAASymB,EAAOxnB,QAAQe,OACxDyE,OAAA4Z,GAAA,EAAA5Z,CAAA,GACOe,EADP,CAEI2D,mBAAoBjK,IAG5B,IAAK,eACD,OAAOuF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIiI,gBAAgB,IAExB,IAAK,gBACD,OAAOhJ,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIkI,iBAAiB,IAEzB,IAAK,kBACD,OAAOjJ,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIgI,YAAY,IAEpB,IAAK,qBACD,OAAO/I,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI6gB,mBAAoBI,EAAOxnB,QAC3BuO,YAAY,EACZC,gBAAgB,EAChBC,iBAAiB,IAEzB,IAAK,6BACD,OAAOjJ,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI2S,2BAA2B,IAEnC,IAAK,6BAED,OAAO1T,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI2S,2BAA2B,EAC3BC,+BAA+B,EAC/BC,gCAAgC,EAChCjC,eAAgBqQ,EAAOxnB,UAE/B,IAAK,kCACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI4S,+BAA+B,EAC/BD,2BAA2B,IAEnC,IAAK,mCACD,OAAO1T,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIuhB,iCAAiC,EACjC5O,2BAA2B,IAEnC,IAAK,iBAED,OAAO1T,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIwhB,cAAcviB,OAAAqH,GAAA,EAAArH,CAAKgiB,EAAOxnB,WAElC,IAAK,mBAED,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI4E,YAAY3F,OAAAqH,GAAA,EAAArH,CAAKgiB,EAAOxnB,WAEhC,IAAK,mCACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI6Q,0BAA0B5R,OAAAqH,GAAA,EAAArH,CAAKgiB,EAAOxnB,WAE9C,IAAK,mCACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI8Q,0BAA0B7R,OAAAqH,GAAA,EAAArH,CAAKgiB,EAAOxnB,WAE9C,IAAK,gCACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIgR,uBAAuB/R,OAAAqH,GAAA,EAAArH,CAAKgiB,EAAOxnB,WAE3C,IAAK,eACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIwK,SAAS,IAEjB,IAAK,gBACD,OAAOvL,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIwK,SAAS,IAEjB,QACI,OAAOxK,IGrHf8F,gBJEW,WAAuC,IAAtC9F,EAAsC8O,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAA9B0R,GAAcS,EAAgBnS,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAAP,GAC3C,OAAQmS,EAAOjoB,MACX,IAAK,yBACD,IAAI6M,EAAeob,EAAOxnB,QAAQoM,eAAe5G,OAAOoiB,KAAKJ,EAAOxnB,QAAQoM,gBAAgB,IAC5F,OAAA5G,OAAA4Z,GAAA,EAAA5Z,CAAA,GACOe,EADP,CAEII,QAAQ6gB,EAAOxnB,QAAQ2G,QACvB3E,SAASwlB,EAAOxnB,QAAQgC,SACxBlD,YAAY0oB,EAAOxnB,QAAQC,aAC3BmM,eAAeA,EACfxF,SAAS4gB,EAAOxnB,QAAQ4G,WAGhC,IAAK,gBACD,OAAApB,OAAA4Z,GAAA,EAAA5Z,CAAA,GACOe,EADP,CAEImG,cAAc8a,EAAOxnB,QAAQ0M,cAC7BC,eAAe6a,EAAOxnB,QAAQ2M,iBAGtC,IAAK,mCACD,IAAI1M,EAAesG,EAAMzH,YAGzB,OAFAmB,EAAaunB,EAAOxnB,QAAQW,IAAI0H,MAAQmf,EAAOxnB,QAAQqI,MACvDpI,EAAaunB,EAAOxnB,QAAQW,IAAII,OAASymB,EAAOxnB,QAAQe,OACxDyE,OAAA4Z,GAAA,EAAA5Z,CAAA,GACOe,EADP,CAEIzH,YAAamB,IAGrB,IAAK,eACD,MAAO,CACHuO,gBAAgB,GAExB,IAAK,gBACD,MAAO,CACHC,iBAAiB,GAEzB,IAAK,kBACD,MAAO,CACHF,YAAY,GAEpB,IAAK,qBACD,OAAO/I,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI4gB,0BAA2BK,EAAOxnB,QAClCuO,YAAY,EACZC,gBAAgB,EAChBC,iBAAiB,IAEzB,IAAK,8BAED,OAAOjJ,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI0gB,2BAA2BzhB,OAAAqH,GAAA,EAAArH,CAAKgiB,EAAOxnB,WAE/C,IAAK,wCACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI2gB,+BAA+B1hB,OAAAqH,GAAA,EAAArH,CAAKgiB,EAAOxnB,WAEnD,IAAK,wBACD,MAAO,CACH+Q,SAAS,GAOjB,IAAK,gBACD,OAAOvL,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIwK,SAAS,IAEjB,QACI,OAAOxK,II5EfiH,cDPW,WAAuC,IAAtCjH,EAAsC8O,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAA9B0R,GAAcS,EAAgBnS,UAAAlS,OAAA,QAAA4Q,IAAAsB,UAAA,GAAAA,UAAA,GAAP,GAC3C,OAAQmS,EAAOjoB,MACX,IAAK,gBACD,OAAOiG,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEImG,cAAe8a,EAAOxnB,QAAQ0M,cAC9BC,eAAgB6a,EAAOxnB,QAAQ2M,iBAGvC,IAAK,kCACD,IAAI1M,EAAesG,EAAMkH,cAGzB,OAFAxN,EAAaunB,EAAOxnB,QAAQW,IAAI0H,MAAQmf,EAAOxnB,QAAQqI,MACvDpI,EAAaunB,EAAOxnB,QAAQW,IAAII,OAASymB,EAAOxnB,QAAQe,OACjDyE,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEIkH,cAAexN,IAGvB,IAAK,6BACD,OAAOuF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI2H,0BAA0B1I,OAAAqH,GAAA,EAAArH,CAAKgiB,EAAOxnB,QAAQF,MAC9C2N,cAAe+Z,EAAOxnB,QAAQ8B,SAAS2L,cACvCxN,aAAauF,OAAAqH,GAAA,EAAArH,CAAKgiB,EAAOxnB,QAAQiC,UAEzC,IAAK,uCACD,OAAOuD,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEI+gB,8BAA8B9hB,OAAAqH,GAAA,EAAArH,CAAKgiB,EAAOxnB,WAGlD,IAAK,uBACD,MAAO,GAGX,IAAK,6BACD,OAAOwF,OAAA4Z,GAAA,EAAA5Z,CAAA,GACAe,EADP,CAEImD,eAAelE,OAAAqH,GAAA,EAAArH,CAAKgiB,EAAOxnB,WAEnC,QACI,OAAOuG,ME/BbyhB,WAAmB3F,OAAO4F,sCAAwCC,KAClEC,GAAQC,YAAYb,GAAiBS,GAAiBK,YAAgBC,QACxEnN,aAAaoN,WACb5N,GAAsBQ,aAAaoN,UACnCJ,GAAM7oB,SAASyb,GAAeM,KAAIC,OAAOH,aAAaoN,aAG1DC,IAASC,OAAO5qB,EAAAC,EAAAC,cAAC2qB,EAAA,EAAD,CAAUP,MAAOA,IAC7BtqB,EAAAC,EAAAC,cAAC4qB,GAAA,EAAD,KAEI9qB,EAAAC,EAAAC,cAAC6qB,GAAD,QAGKC,SAASC,eAAe,ST8F/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMppB,KAAK,SAAAqpB,GACjCA,EAAaC","file":"static/js/main.3c58cd6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/conceptionary.4e85499c.svg\";","import React from 'react';\r\nimport AdSense from 'react-adsense';\r\nclass AdsComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <ins class=\"adsbygoogle\"\r\n            \r\n            style={{display:'block', textAlign:'center'}}\r\n            data-ad-format=\"fluid\"\r\n            data-ad-layout=\"in-article\"\r\n            data-ad-client=\"ca-pub-0123456789101112\"\r\n            data-ad-slot=\"9876543210\"></ins>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdsComponent;","import {schema} from 'normalizr';\r\nconst author=new schema.Entity('authors');\r\nconst keyword=new schema.Entity('keywords');\r\nconst perspective=new schema.Entity('perspectivesRelaions',{\r\n    Author:author,\r\n    Keywords:[keyword]\r\n});\r\nexport const conceptSchema=new schema.Entity('concepts',{\r\n    Perspectives:[perspective],\r\n});\r\n","import { normalize } from 'normalizr';\r\nimport { conceptSchema } from '../schema/conceptSchema';\r\nconst axios = require('axios');\r\nexport function flushConceptState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_CONCEPT\",\r\n        })\r\n    }\r\n}\r\nexport function getAllPerspectivesByConcept(conceptId){\r\n    return dispatch=>{\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/concepts/perspective/${conceptId}`)\r\n             .then(data=>{\r\n            const {responseType}=data.data;\r\n            if(responseType==\"success\"){\r\n                dispatch({\r\n                    type:'SET_DETAILED_PERSPECTIVE',\r\n                    payload:data.data.perspectives\r\n                })\r\n            }\r\n             })\r\n    }\r\n}\r\nexport function getConceptPerspectivesByKeywords(keywordId){\r\n    return dispatch=>{\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/keywords/perspective/${keywordId}`)\r\n        .then(data=>{\r\n            const {responseType}=data.data;\r\n            if(responseType==\"success\"){\r\n                dispatch({\r\n                    type:'SET_DETAILED_PERSPECTIVE',\r\n                    payload:data.data.data.Perspectives\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\nexport function getConceptPerspectivesByAuthor(author_lastName){\r\n    return dispatch=>{\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authors/perspective/${author_lastName}`)\r\n        .then(data=>{\r\n            const {responseType}=data.data;\r\n            if(responseType==\"success\"){\r\n                dispatch({\r\n                    type:'SET_DETAILED_PERSPECTIVE',\r\n                    payload:data.data.perspectives\r\n                })\r\n            }\r\n\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\nexport function increasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"increase\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = true;\r\n                dispatch({\r\n                    type: 'SET_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function decreasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"decrease\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = false;\r\n                dispatch({\r\n                    type: 'SET_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function sortByAuthorLast(sortBy) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"sortByAuthorLast\",\r\n            payload: sortBy\r\n        })\r\n    }\r\n}\r\nexport function showAllPerspective(value) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SHOW_ALL_PERSPECTIVE\",\r\n            payload: value\r\n        })\r\n    }\r\n}\r\nexport function sortByKeyword(keyword) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"sortByKeyword\",\r\n            payload: keyword\r\n        })\r\n    }\r\n}\r\nexport function getConceptFromApi(concept) {\r\n    let obj = {}\r\n    obj.Conceptobj = concept\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REQUEST_STARTED\"\r\n        })\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/concepts/filter?relationships=true`, obj).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n                const conceptDetailsFromApi = data.data.Perspectives.perspectivesRelations;\r\n                const normalizedData = normalize(conceptDetailsFromApi, conceptSchema);\r\n                normalizedData.entities.perspectivesDetail = data.data.Perspectives.perspectivesDetail;\r\n                dispatch({\r\n                    type: \"REQUEST_SUCCESSFUL\",\r\n                    payload: conceptDetailsFromApi\r\n                });\r\n                dispatch({\r\n                    type: 'setPerspectiveIds',\r\n                    payload: normalizedData.entities.concepts[normalizedData.result].Perspectives\r\n                });\r\n                dispatch({\r\n                    type: \"SET_CONCEPT_DETAILS\",\r\n                    payload: normalizedData.entities\r\n                });\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"SERVER_ERROR\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"NETWORK_ERROR\"\r\n            })\r\n            console.log('Error While fetching concept details from api', error);\r\n        })\r\n    }\r\n}\r\nexport function getListRelatedByConceptId(concept) {\r\n    let obj = {}\r\n    obj.Conceptobj = concept\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"LIST_RELATED_LOADING\"\r\n        })\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/concepts/filter?relationships=true&withListAndRelatedOnly=true&fbclid=IwAR07GYuFbZ9CIrkYUy-0gMPOQrk-aSlLSKP-w0TP1FV5noOp1T-qLJE5xOk`, obj)\r\n            .then(data => {\r\n                const { responseType } = data.data;\r\n                if (responseType == 'success') {\r\n                    let listRelatedData = data.data.data;\r\n                    listRelatedData = listRelatedData.ConceptClusters;\r\n                    dispatch({\r\n                        type: \"GET_LIST_RELATED\",\r\n                        payload: listRelatedData\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: \"LIST_RELATED_SERVER_ERROR\"\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: 'LIST_RELATED_NETWORK_ERROR'\r\n                })\r\n                console.log('Error While getting list related data', error);\r\n            })\r\n    }\r\n\r\n}\r\n","const axios = require('axios');\r\nlet request = require(\"request\");\r\nfunction shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n}\r\nexport function flushState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_NAV_BAR\",\r\n        })\r\n    }\r\n}\r\nexport function setAutherClusterSelectedItems(selectedItems) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_AUTHOR_CLUSTER_SELECTED_OPTIONS\",\r\n            payload: selectedItems,\r\n        })\r\n    }\r\n}\r\nexport function setSelectedItem(selectedItem) {\r\n    // console.log(\"set selected item called---------------->\");\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_SELECTED_OPTION\",\r\n            payload: selectedItem,\r\n        })\r\n    }\r\n}\r\nexport function setSelectedCategory(selectedCategory) {\r\n    // console.log(\"set selected category called\");\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_SEARCH_CATEGORY\",\r\n            payload: selectedCategory,\r\n        })\r\n    }\r\n}\r\nexport function addTag(tag) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"ADD_TAG\",\r\n            payload: tag\r\n        });\r\n    }\r\n}\r\nexport function removeTag(id) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REMOVE_TAG\",\r\n            payload: id\r\n        });\r\n    }\r\n}\r\nexport function getAllAsync(name, data, callback) {\r\n    if (name) {\r\n        if (data.length > 0) {\r\n            let results = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                if (data[i].label.toLowerCase().startsWith(name.toLowerCase())) {\r\n                    if (results.length < 9) {\r\n                        results.push(data[i]);\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            callback(null, shuffle(results));\r\n        }\r\n        else {\r\n            callback(null, []);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAllData(inputValue) {\r\n    return \"a\";\r\n}\r\n\r\nexport function prefetchConceptsForNavbar() {\r\n    return dispatch => {\r\n        const result = [];\r\n        axios.get('http://3.84.7.245:3000/api/rest/v1/concepts?fields=id+name', {\r\n            headers: {\r\n                \"X-Requested-With\": \"XMLHttpRequest\"\r\n            }\r\n        }).then(data => {\r\n            const { responseType } = data.data;\r\n            console.log(data)\r\n            if (responseType == 'success') {\r\n                const conceptsForNavBar = data.data.data;\r\n                if (conceptsForNavBar.length > 0) {\r\n                    conceptsForNavBar.map(concept => {\r\n                        return result.push({ label: concept.name, value: concept.name, id: concept.id, category: \"Concept\", color: \"#000000\" })\r\n                    })\r\n                }\r\n                dispatch({\r\n                    type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: result\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching concepts for navbar', error);\r\n        });\r\n        //     request(options, function L(error, response, body) {\r\n        //         // console.log(\"Options\")\r\n        //         let data = JSON.parse(body);\r\n\r\n        //         if (error === null && body.error == undefined) {\r\n        //             if (data.length > 0) {\r\n        //                 let j = 0;\r\n        //                 data.map(part => {\r\n        //                     returndata[j] = { label: part.discrete_concept_name, value: part.discrete_concept_name, id: part.discrete_concept_name_id, image: part.discrete_concept_name_image, category: \"Concept\", color: \"#000000\" };\r\n        //                     j++;\r\n        //                 })\r\n        //                 dispatch({\r\n        //                     type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n        //                     payload: returndata\r\n        //                 })\r\n        //             }\r\n        //             else {\r\n        //                 dispatch({\r\n        //                     type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n        //                     payload: [],\r\n        //                 })\r\n        //             }\r\n        //         }\r\n        //         else {\r\n        //             dispatch({\r\n        //                 type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n        //                 payload: [],\r\n        //             })\r\n        //         }\r\n        //     });\r\n        // }\r\n    }\r\n}\r\nexport function prefetchConceptClustersForNavbar() {\r\n    return dispatch => {\r\n        const result = [];\r\n        axios.get('http://3.84.7.245:3000/api/rest/v1/conceptClusters?fields=id+name+pictureLink').then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n                const conceptClustersForNavBar = data.data.data;\r\n                if (conceptClustersForNavBar.length > 0) {\r\n                    conceptClustersForNavBar.map(conceptCluster => {\r\n                        result.push({ label: conceptCluster.name, value: conceptCluster.name, id: conceptCluster.id, category: \"Concept Cluster\", color: \"#FF0000\" })\r\n                    })\r\n                }\r\n                dispatch({\r\n                    type: \"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: result\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching concepts for navbar', error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function prefetchAuthorsForNavbar() {\r\n    let returndata = [];\r\n    let query = `SELECT first_name, last_name, id, dob, dod, picture_link FROM author `;\r\n    var options = {\r\n        method: 'GET',\r\n        url: 'http://3.84.7.245:3000/api/rest/v1/authors/',\r\n        form: { query: query }\r\n    };\r\n    return dispatch => {\r\n        request(options, function L(error, response, body) {\r\n            // console.log(\"Options\")\r\n            let data = JSON.parse(body);\r\n            if (error === null && body.error == undefined) {\r\n                if (data.data.length > 0) {\r\n                    let j = 0;\r\n                    data.data.map(part => {\r\n                        let label = part.firstName + \" \" + part.lastName;\r\n                        let value = label;\r\n                        let id = part.id;\r\n                        let born = part.dob;\r\n                        let died = part.dod;\r\n                        let img = part.picturelink;\r\n                        returndata[j] = { label, value, id, born, died, img, page: \"Authors\", category: \"Author\", color: \"#A52A2A\" };\r\n                        j++;\r\n                    })\r\n                    dispatch({\r\n                        type: \"AUTHORS_TRIMMED_FOR_NAVBAR\",\r\n                        payload: returndata\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: \"AUTHORS_TRIMMED_FOR_NAVBAR\",\r\n                        payload: [],\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"AUTHORS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport function prefetchAuthorClustersForNavbar() {\r\n    let returndata = [];\r\n    let query = `SELECT * FROM Conceptionary.author_relationary_distinct_groupings`;\r\n    var options = {\r\n        method: 'POST',\r\n        url: 'http://3.84.7.245:3000/api/rest/v1/authors',\r\n        headers:\r\n        {\r\n            'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n            'cache-control': 'no-cache',\r\n            'content-type': 'application/x-www-form-urlencoded'\r\n        },\r\n        form: { query: query }\r\n    };\r\n    // console.log(\"Hi\")\r\n    return dispatch => {\r\n        request(options, function L(error, response, body) {\r\n            // console.log(\"Options\")\r\n            let data = JSON.parse(body);\r\n\r\n            if (error === null && body.error == undefined) {\r\n                let query1 = `SELECT * FROM Conceptionary.author_relationary_supra where author_relationary_supra.categories is null;`;\r\n                // console.log(\"Query in getAutherClusterAsynch\", query);\r\n                var options1 = {\r\n                    method: 'POST',\r\n                    url: 'https://cors-anywhere.herokuapp.com/' + 'http://ec2-18-220-90-81.us-east-2.compute.amazonaws.com:8126/',\r\n                    headers:\r\n                    {\r\n                        'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n                        'cache-control': 'no-cache',\r\n                        'content-type': 'application/x-www-form-urlencoded'\r\n                    },\r\n                    form: { query: query1 }\r\n                };\r\n                request(options1, function L(error1, response1, body1) {\r\n                    let data1 = JSON.parse(body1);\r\n                    if (error1 === null && body1.error == undefined) {\r\n                        if (data.length > 0) {\r\n                            // console.log(\"data\", data);\r\n                            let j = 0;\r\n\r\n                            data.map(part => {\r\n                                let label = part.distinct_grouping;\r\n                                let value = label;\r\n                                let id = part.distinct_grouping_id;\r\n                                let search_display = part.search_display;\r\n                                let photograph = part.photograph;\r\n                                returndata[j] = { label, value, id, search_display, photograph, category: \"Author Cluster\", color: \"#800080\" };\r\n                                j++;\r\n                            })\r\n                        }\r\n                        if (data1.length > 0) {\r\n                            // console.log(\"Data1 \", data1)\r\n                            data1.map(part => {\r\n                                // console.log(\"@\");\r\n                                let label = part.author_supra;\r\n                                let value = label;\r\n                                let id = part.author_supra_id;\r\n                                let search_display = part.search_display;\r\n                                let categories = part.categories;\r\n                                let author_relationary_image = part.author_relationary_image;\r\n                                let via = \"supra\"\r\n                                returndata.push({ label, value, id, search_display, categories, author_relationary_image, via, category: \"Author Cluster\", color: \"#800080\" });\r\n                            })\r\n                            // console.log(\"Return data\", returndata)\r\n                            if (returndata.length > 0) {\r\n                                dispatch({\r\n                                    type: \"AUTHOR_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                                    payload: returndata\r\n                                })\r\n                            }\r\n                            else {\r\n                                dispatch({\r\n                                    type: \"AUTHORS_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                                    payload: [],\r\n                                })\r\n                            }\r\n                        }\r\n                        // console.log(\"return data authorCluster\", returndata);\r\n                    }\r\n                });\r\n\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"AUTHOR_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\nexport function getConcepts() {\r\n    let query = \"Select discrete_concept_name,discrete_concept_name_id from Conceptionary.concept_discrete;\"\r\n\r\n    var options = {\r\n        method: 'POST',\r\n        url: 'http://3.84.7.245:3000/api/rest/v1/concepts',\r\n        headers:\r\n        {\r\n            'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n            'cache-control': 'no-cache',\r\n            'content-type': 'application/x-www-form-urlencoded'\r\n        },\r\n        form: { query: query }\r\n    };\r\n    return dispatch => {\r\n        request(options, function (error, response, body) {\r\n            // console.log(\"Error is :\", error);\r\n            let data = JSON.parse(body);\r\n            // console.log(\"Gulzain Re/sponse\", response);\r\n            // console.log(\"BODY_________\", data);\r\n            let returndata = [];\r\n            if (error === null && body.error == undefined) {\r\n                if (data.length > 0) {\r\n                    let j = 0;\r\n                    data.map(part => {\r\n                        returndata[j] = { label: part.discrete_concept_name, value: part.discrete_concept_name, id: part.discrete_concept_name_id };\r\n                        j++;\r\n                    })\r\n                    dispatch({\r\n                        type: \"GET_CONCEPTS_NAMES_NAVBAR\",\r\n                        payload: returndata,\r\n\r\n                    })\r\n                }\r\n            }\r\n\r\n            // if (returndata.length > 0) {\r\n            //     console.log(\"return Data\", returndata);\r\n            //     dispatch({\r\n            //         type: \"GET_RELATIONARY_SUPRA_ITEMS_NAVBAR\",\r\n            //         payload: returndata,\r\n\r\n            //     })\r\n            // }\r\n\r\n            // for (var i = 0; i < parts.length; i += 1) {\r\n            //     relationArray.push(\"\\\"\" + parts[i].relationary_supra.replaceAll(\"\\'\", \"\\\\\\'\") + \"\\\"\");\r\n            // }\r\n            // var myhtml = fs.readFileSync('splash.html');\r\n            // //console.log(termsArray);\r\n            // res.send(myhtml + \"<script>autocomplete(document.getElementById(\\\"myInput\\\"),[\" + termsArray + \"],[\" + termsArray + \"]);</script>\" + \"<script>autocomplete(document.getElementById(\\\"myAuthorInput\\\"),[\" + authorArray + \"],[\" + authorArray + \"]);</script>\" +\r\n            //     \"<script>autocomplete(document.getElementById(\\\"groupInput\\\"),[\" + groupArray + \"],[\" + valArray + \"]);</script>\" +\r\n            //     \"<script>autocomplete(document.getElementById(\\\"myListInput\\\"),[\" + listArray + \"],[\" + listArray + \"]);</script>\" +\r\n            //     \"<script>autocomplete(document.getElementById(\\\"myRelationInput\\\"),[\" + relationArray + \"],[\" + relationArray + \"]);</script>\");\r\n\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function prefetchAuthorGroupsForNavbar() {\r\n    return dispatch => {\r\n        const result = [];\r\n        axios.get('http://3.84.7.245:3000/api/rest/v1/authorGroups/all').then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const authroGroupsNavbar = data.data.data;\r\n                console.log(data.data.data)\r\n                if (authroGroupsNavbar.length > 0) {\r\n                    authroGroupsNavbar.map(conceptCluster => {\r\n                        result.push({ label: conceptCluster.name, value: conceptCluster.name, id: conceptCluster.id, category: \"Concept Cluster\", color: \"#FF0000\" })\r\n                    })\r\n                }\r\n                dispatch({\r\n                    type: \"AUTHOR_GROUPS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: result\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"AUTHOR_GROUPS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author groups for navbar', error);\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport function getAuthorGroups(name, data, callback) {\r\n\r\n    console.log(data)\r\n\r\n    if (name) {\r\n\r\n        if (data.length > 0) {\r\n            let results = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                if (data[i].label.toLowerCase().startsWith(name.toLowerCase())) {\r\n                    if (results.length < 9) {\r\n                        results.push(data[i]);\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            callback(null, results);\r\n        }\r\n        else {\r\n            callback(null, []);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function login(account) {\r\n    return (dispatch) => {\r\n        let obj = {};\r\n\r\n        obj.username = account.Email;\r\n        obj.password = account.Password\r\n\r\n        dispatch(loginRequest());\r\n\r\n        //let accountJSON = JSON.stringify(obj);\r\n        \r\n        return axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/login`, obj, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                'accept': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            let res = JSON.parse(JSON.stringify(response));\r\n            console.log(res)\r\n            console.log(res.data.success)\r\n            if (res.data.success) {\r\n                dispatch(loginSuccess(res.data.user));\r\n\r\n            } else {\r\n                dispatch(loginFailed());\r\n            }\r\n        }).catch(e => {\r\n            dispatch(loginFailed());\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function loginRequest() {\r\n    return {\r\n        type: 'LOGIN_REQUEST'\r\n    }\r\n}\r\n\r\nexport function loginSuccess(userInfo) {\r\n    return {\r\n        type: \"LOGIN_SUCCESS\",\r\n        userInfo: userInfo\r\n    }\r\n}\r\n\r\nexport function loginFailed() {\r\n    return {\r\n        type: \"LOGIN_FAILURE\"\r\n    }\r\n}\r\n\r\n//Logout \r\n\r\n\r\nexport function logout() {\r\n    return {\r\n        type: \"LOGOUT\"\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function signup(account) {\r\n    return (dispatch) => {\r\n        let obj = {};\r\n\r\n        obj.username = account.Username;\r\n        obj.email = account.Email;\r\n        obj.password = account.Password\r\n\r\n        let temp = {};\r\n        temp[\"User\"] = obj;\r\n\r\n\r\n\r\n        dispatch(signupRequest());\r\n        //console.log(accountJSON);\r\n        //let accountJSON = temp;\r\n\r\n        return axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/users`, temp, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                'accept': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            let res = JSON.parse(JSON.stringify(response));\r\n            console.log(res)\r\n            // console.log(res.data.responseType==='success')\r\n            if (res.data.responseType === 'success') {\r\n                dispatch(signupSuccess(res.data.data));\r\n            } else {\r\n                dispatch(signupFailed());\r\n            }\r\n        }).catch(e => {\r\n            dispatch(signupFailed());\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function signupRequest() {\r\n    return {\r\n        type: 'SIGNUP_REQUEST'\r\n    }\r\n}\r\n\r\n\r\nexport function signupSuccess(userInfo) {\r\n    return {\r\n        type: \"SIGNUP_SUCCESS\",\r\n        userInfo: userInfo\r\n    }\r\n}\r\n\r\nexport function signupFailed() {\r\n    return {\r\n        type: \"SIGNUP_FAILURE\"\r\n    }\r\n}\r\n","import Axios from \"axios\";\r\nexport function getAuthorGroups(filters){\r\n    let filterobj = {};\r\n    filterobj.filters = filters;\r\n    return new Promise((resolve, reject) => {\r\n        Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorGroups`, filterobj)\r\n            .then(data => {\r\n                resolve(data.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    });\r\n}","import React, { Component } from 'react';\r\n//import { ShareButton } from \"react-custom-share\";\r\nimport { FacebookProvider, Share } from 'react-facebook';\r\n\r\nimport {\r\n    FacebookIcon,\r\n} from 'react-share';\r\nimport TwitterSharedButton from './TwitterSharedButton';\r\nclass ShareButtons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n   \r\n    render() {\r\n        const { id } = this.props;\r\n        const link = `http://conceptionary-frontend.s3-website.us-east-2.amazonaws.com/perspective/${id}`\r\n        return (\r\n          <div>\r\n          <FacebookProvider appId=\"930857800581355\">\r\n            <Share href={link}>\r\n              {({ handleClick}) => (\r\n                <button type=\"button\" onClick={handleClick}>Share</button>\r\n              )}\r\n            </Share>\r\n          </FacebookProvider>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default ShareButtons;\r\n","import React, { Component } from 'react';\r\n//import { ShareButton } from \"react-custom-share\";\r\nimport ShareLink from 'react-twitter-share-link'\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport './TwitterShareButton.css'\r\nimport {\r\n    TwitterShareButton,TwitterIcon\r\n} from 'react-share';\r\nclass TwitterSharedButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n   \r\n    render() {\r\n        const { id } = this.props;\r\n        const links = `http://conceptionary-frontend.s3-website.us-east-2.amazonaws.com/perspective/${id}`\r\n        return (\r\n        //     <ShareLink link={links}>\r\n        //         {link => (\r\n        //         <a href={link} target='_blank'>Share this on Twitter</a>\r\n        //         )}\r\n        //  </ShareLink>\r\n            <div>\r\n            <Helmet>\r\n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n                <meta name=\"twitter:site\" content=\"@nytimes\" />\r\n                <meta name=\"twitter:creator\" content=\"@SarahMaslinNir\" />\r\n                <meta name=\"twitter:title\" content=\"Parade of Fans for Houston’s Funeral\" />\r\n                <meta name=\"twitter:description\" content=\"NEWARK - The guest list and parade of limousines with celebrities emerging from them seemed more suited to a red carpet event in Hollywood or New York than than a gritty stretch of Sussex Avenue near the former site of the James M. Baxter Terrace public housing project here.\" />\r\n                <meta name=\"twitter:image\" content=\"http://graphics8.nytimes.com/images/2012/02/19/us/19whitney-span/19whitney-span-articleLarge.jpg\" />\r\n            </Helmet>\r\n        <TwitterShareButton\r\n            url={links}\r\n            title=\"Hello World. \\n My name is Jennifer. \\n What is your name?\"\r\n            className=\"Demo__some-network__share-button\">\r\n            <TwitterIcon\r\n            size={32}\r\n            round />\r\n      </TwitterShareButton>\r\n      </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default TwitterSharedButton;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router'\r\nimport ShareButtons from '../../SocialShareButtons/ShareButtons';\r\nclass Context extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visibility: 'none',\r\n        }\r\n    }\r\n    render() {\r\n        const { data, authors, keywords } = this.props;\r\n        return (\r\n            <div id={authors[data.Author].lastName} className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\", textAlign:'justify'}} >\r\n                <b style={{fontSize:'18px'}}>{data.pronoun}{\" \"} {this.props.selectedOption.label}</b>{\" is \"}{data.description}\r\n                <div onClick={() => this.props.onAuthorClick({ author_first: authors[data.Author].firstName, author_last: authors[data.Author].lastName, born: authors[data.Author].dob, died: authors[data.Author].dod, auth_id: data.Author })} style={{ color: \"red\", cursor: \"pointer\" }}>{authors[data.Author].firstName}{\" \"}{authors[data.Author].lastName}</div>\r\n                <div className=\"pull-right\">\r\n                    <i style={{ color: data.isLike ? \"red\" : \"grey\",fontSize:'20px' }} className=\"fa fa-thumbs-o-up \" aria-hidden=\"true\" onClick={() => this.props.onLikeClick(data.id)}></i>&nbsp;[{data.loves ? this.props.data.loves : \"0\"}]&nbsp;&nbsp; <span className=\"contextbutton\" onClick={() => {\r\n                        this.setState({\r\n                            visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                            // id: data.id,\r\n                        })\r\n                    }} style={{ cursor: \"pointer\" }}><i className=\"fa fa-ellipsis-h\" style={{fontSize:'20px'}}></i></span>\r\n                </div>\r\n                <div id={data.id} style={{ marginTop: \"20px\", display: [this.state.visibility] }} >{this.props.data.longDescription}<div style={{ backgroundColor: \"#DCDCDC\" }}>{this.props.data.citation}</div></div>\r\n                <div>Key Note :\r\n                   {\r\n                        data.Keywords && data.Keywords.length > 0 && data.Keywords.map(k => {\r\n                            return <span style={{ color: \"red\" }}>{data.Keywords.length > 1 && (keywords[k].name + \" | \")}{data.Keywords.length < 2 && (keywords[k].name + \" \")}</span>\r\n                        })\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <ShareButtons id={data.id}></ShareButtons>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// Context.PropTypes = {\r\n//     data: PropTypes.object.isRequired,\r\n//     selectedOption: PropTypes.object.isRequired,\r\n//     onAuthorClick: PropTypes.func.isRequired,\r\n// }\r\nexport default Context;","const keywordsSorter = (a, b) => {\r\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n        return -1;\r\n    }\r\n    if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport default keywordsSorter;","const conceptsSorter = (a, b) => {\r\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n        return -1;\r\n    }\r\n    if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport default conceptsSorter;","import keywordSorterFunction from '../utils/keywordsSorterFunction';\r\nimport conceptsSorter from '../utils/conceptsSorterFunction';\r\n// export function getFilteredPerspectives(state) {\r\n//     let perspectiveids = state.concepts.perspectiveIds;\r\n//     let perspectives = state.concepts.perspectives;\r\n//     let limitedPerspectives = state.concepts.limitedPerspectives;\r\n//     let authors = state.concepts.authors;\r\n//     if (perspectiveids && perspectives && limitedPerspectives && limitedPerspectives.length) {\r\n//         let result = [];\r\n//         if (state.concepts.sortBy == 'keyword') {\r\n//             let filteredPerspectives = [];\r\n//             let nonFilteredPerspectives = [];\r\n//             limitedPerspectives.forEach(perspective => {\r\n//                 let includes = false;\r\n//                 perspectives[perspective.id].Keywords.forEach(k => {\r\n//                     if (k == state.concepts.sortByKeywordId) {\r\n//                         perspective.Author=perspectives[perspective.id].Author;\r\n//                         perspective.Keywords=perspectives[perspective.id].Keywords;\r\n//                         includes = true;\r\n//                     }\r\n//                 });\r\n//                 includes === true ? filteredPerspectives.push(perspective) : nonFilteredPerspectives.push(perspective);\r\n//             });\r\n//             result = [...filteredPerspectives, ...nonFilteredPerspectives];\r\n//             if (state.concepts.all) {\r\n//                 result = [...filteredPerspectives, ...nonFilteredPerspectives].sort(function (a, b) {\r\n//                     let authorALastName = authors[a.Author].lastName.toUpperCase();\r\n//                     let authorBLastName = authors[b.Author].lastName.toUpperCase();\r\n//                     return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n//                 });\r\n//                 return result;\r\n//             }\r\n//             else {\r\n//                 result = filteredPerspectives.sort(function (a, b) {\r\n//                     let authorALastName = authors[a.Author].lastName.toUpperCase();\r\n//                     let authorBLastName = authors[b.Author].lastName.toUpperCase();\r\n//                     return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n//                 });\r\n//                 return result;\r\n//             }\r\n//         } else {\r\n//             limitedPerspectives.forEach(perspective => {\r\n//                 perspective.Author=perspectives[perspective.id].Author;\r\n//                 perspective.Keywords=perspectives[perspective.id].Keywords;\r\n//                 result.push(perspective);\r\n//             });\r\n//             result = result.sort(function (a, b) {\r\n//                 let authorALastName = authors[a.Author].lastName.toUpperCase();\r\n//                 let authorBLastName = authors[b.Author].lastName.toUpperCase();\r\n//                 return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n//             })\r\n//             return result;\r\n//         }\r\n//     } else {\r\n//         return []\r\n//     }\r\n// }\r\nexport function getUniqueKeywords(state) {\r\n    let perspectivesRelations = state.concepts.perspectivesRelaions;\r\n    let perspectiveIds = state.concepts.perspectiveIds;\r\n    let keywords = state.concepts.keywords;\r\n    if (perspectivesRelations && perspectiveIds && perspectiveIds.length > 0 && keywords) {\r\n        const uniqueKeysWords = [];\r\n        const uniqueKeywordNamesOnly = [];\r\n        perspectiveIds.forEach(id => {\r\n            perspectivesRelations[id].Keywords.forEach(keyword => {\r\n                keywords[keyword].count = 1;\r\n                if (!uniqueKeywordNamesOnly.includes(keywords[keyword].name)) {\r\n                    uniqueKeywordNamesOnly.push(keywords[keyword].name)\r\n                    uniqueKeysWords.push(keywords[keyword])\r\n                }\r\n                else {\r\n                    for (let i = 1; i < uniqueKeysWords.length; i++) {\r\n                        if (uniqueKeysWords[i].id === keywords[keyword].id) {\r\n                            uniqueKeysWords[i].count = uniqueKeysWords[i].count + 1;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        return uniqueKeysWords.sort(keywordSorterFunction);\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nexport function getUniqueSortedAuthors(state) {\r\n    let perspectiveids = state.concepts.perspectiveIds;\r\n    let perspectivesRelations = state.concepts.perspectivesRelaions;;\r\n    let authors = state.concepts.authors;\r\n    if (perspectiveids&&perspectiveids.length>0 && authors && perspectivesRelations) {\r\n        let uniqueAuthorWithDetails = [];\r\n        let uniqueAuthorNames = [];\r\n        perspectiveids.forEach(id => {\r\n            if (!(uniqueAuthorNames.indexOf((authors[perspectivesRelations[id].Author].firstName + authors[perspectivesRelations[id].Author].lastName)) > -1)) {\r\n                uniqueAuthorNames.push((authors[perspectivesRelations[id].Author].firstName + authors[perspectivesRelations[id].Author].lastName));\r\n                uniqueAuthorWithDetails.push(authors[perspectivesRelations[id].Author]);\r\n            }\r\n        })\r\n        return uniqueAuthorWithDetails.sort(function (a, b) {\r\n            let authorALastName = a.lastName.toUpperCase();\r\n            let authorBLastName = b.lastName.toUpperCase();\r\n            return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n        });\r\n    }\r\n}\r\n\r\nexport function getUniqueConcept(state) {\r\n    let author = state.author.author;\r\n    let perspectives = state.author.authorPerspectives;\r\n    let concepts = state.author.concepts;\r\n    if (author.Perspectives && author.Perspectives.length > 0 && perspectives) {\r\n        let uniqueConcecptObjects = [];\r\n        let helperUniqueIds = [];\r\n        author.Perspectives.forEach(element => {\r\n            let count = 0;\r\n            if (!(helperUniqueIds.includes(perspectives[element].ConceptId))) {\r\n                count += 1;\r\n                let discrete_author_name_id = perspectives[element].ConceptId;\r\n                let discrete_author_name = concepts[perspectives[element].ConceptId].name;\r\n                helperUniqueIds.push(perspectives[element].ConceptId)\r\n                uniqueConcecptObjects.push({ discrete_author_name_id, discrete_author_name, count })\r\n            }\r\n            else {\r\n                uniqueConcecptObjects.forEach(object => {\r\n                    if (object.discrete_author_name_id == perspectives[element].ConceptId) {\r\n                        object.count += 1;\r\n                    }\r\n                })\r\n            }\r\n        });\r\n        uniqueConcecptObjects.sort(function (a, b) {\r\n            var textA = a.discrete_author_name.toUpperCase();\r\n            var textB = b.discrete_author_name.toUpperCase();\r\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n        });\r\n        return uniqueConcecptObjects;\r\n    }\r\n}\r\n\r\nexport function getSortedPerspectivesByConceptName(state) {\r\n    let author = state.author.author;\r\n    let perspectives = state.author.authorPerspectives;\r\n    let concepts = state.author.concepts;\r\n    if (author.Perspectives && author.Perspectives.length > 0 && perspectives) {\r\n        let tempPerspectives = [];\r\n        author.Perspectives.forEach(id => {\r\n            tempPerspectives.push(perspectives[id]);\r\n        })\r\n        return tempPerspectives.sort((a, b) => {\r\n            let conceptNameA = concepts[a.Concept].name.toLowerCase();\r\n            let conceptNameB = concepts[b.Concept].name.toLowerCase();\r\n            return conceptNameA < conceptNameB ? -1 : (conceptNameA > conceptNameB) ? 1 : 0;\r\n        })\r\n    }\r\n}\r\nexport function getUniqueAuthorBooks(state) {\r\n    let author = state.author.author;\r\n    let books = state.author.authorBooks;\r\n    if (author && author.Books && author.Books.length > 0 && books) {\r\n        let bookids = author.Books;\r\n        let uniqueBookNameWithId = [];\r\n        let uniqueBookIds = [];\r\n        bookids.forEach(bookid => {\r\n            if (!(uniqueBookIds.indexOf(books[bookid].id) > -1)) {\r\n                uniqueBookIds.push(books[bookid].id);\r\n                let discrete_book_id = books[bookid].id;\r\n                let title = books[bookid].title;\r\n                uniqueBookNameWithId.push({ discrete_book_id, title });\r\n            }\r\n        })\r\n        return uniqueBookNameWithId;\r\n    }\r\n}\r\nexport function getAuthorBioData(state) {\r\n    let authorGroups = state.author.authorGroups;\r\n    let authorBioHeadings = state.author.authorBioHeadings;\r\n    let author = state.author.author;\r\n    if (author && author.AuthorGroups && author.AuthorGroups.length > 0) {\r\n        let data = [];\r\n        let uniqueBioHeadings = [];\r\n        author.AuthorGroups.map(id => {\r\n            if (authorGroups[id].AuthorBioHeading) {\r\n                if (!uniqueBioHeadings.includes(authorBioHeadings[authorGroups[id].AuthorBioHeading].name)) {\r\n                    uniqueBioHeadings.push(authorBioHeadings[authorGroups[id].AuthorBioHeading].name);\r\n                    data.push({ heading: authorBioHeadings[authorGroups[id].AuthorBioHeading].name, values: [{ name: authorGroups[id].name, id: authorGroups[id].id }] });\r\n                }\r\n                else {\r\n                    data.forEach(element => {\r\n                        if (element.heading === authorBioHeadings[authorGroups[id].AuthorBioHeading].name) {\r\n                            element.values.push({ name: authorGroups[id].name, id: authorGroups[id].id });\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        return data;\r\n    }\r\n    return;\r\n}\r\n\r\nexport function getUniqueSortedConceptsFromConceptCluster(state) {\r\n    let conceptCluster = state.conceptClusters.conceptCluster;\r\n    let concepts = state.conceptClusters.concepts;\r\n    if (conceptCluster && conceptCluster.Concepts && conceptCluster.Concepts.length > 0 && concepts) {\r\n        let uniqueConceptNames = [];\r\n        let sortedUniqueConcepts = [];\r\n        conceptCluster.Concepts.map(id => {\r\n            if (!uniqueConceptNames.includes(concepts[id].name)) {\r\n                uniqueConceptNames.push(concepts[id].name);\r\n                sortedUniqueConcepts.push(concepts[id]);\r\n            }\r\n        })\r\n        return sortedUniqueConcepts.sort((a, b) => {\r\n            let conceptNameA = a.name.toLowerCase();\r\n            let conceptNameB = b.name.toLowerCase();\r\n            return conceptNameA < conceptNameB ? -1 : (conceptNameA > conceptNameB) ? 1 : 0;\r\n        })\r\n    }\r\n}\r\n\r\nexport function getPerspectivesFromConceptCluster(state) {\r\n    let conceptCluster = state.conceptClusters.conceptCluster;\r\n    let concepts = state.conceptClusters.concepts;\r\n    let perspective = state.conceptClusters.perspective;\r\n    let authorClicked = state.conceptClusters.authorClicked;\r\n    let conceptClicked = state.conceptClusters.conceptClicked;\r\n    let authors = state.conceptClusters.authors;\r\n    if (conceptCluster && conceptCluster.Concepts && conceptCluster.Concepts.length > 0 && concepts && perspective) {\r\n        const perspectives = [];\r\n        let conceptids = conceptCluster.Concepts;\r\n        conceptids.forEach(id => {\r\n            perspectives.push(...concepts[id].Perspectives.map(perspectiveId => {\r\n                perspective[perspectiveId].ConceptName = concepts[id].name;\r\n                return perspective[perspectiveId];\r\n            }));\r\n        })\r\n        if (authorClicked) {\r\n            perspectives.sort(function (a, b) {\r\n                var textA = authors[a.Author].lastName.toUpperCase();\r\n                var textB = authors[b.Author].lastName.toUpperCase();\r\n                return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n            });\r\n        }\r\n        else if (conceptClicked) {\r\n            perspectives.sort(function (a, b) {\r\n                var authorA = authors[a.Author].lastName.toUpperCase();\r\n                var authorB = authors[b.Author].lastName.toUpperCase();\r\n                var textA = a.ConceptName.toUpperCase();\r\n                var textB = b.ConceptName.toUpperCase();\r\n                if (textA === textB) {\r\n                    return (authorA < authorB) ? -1 : (authorA > authorB) ? 1 : 0;\r\n                }\r\n                else {\r\n                    return (textA < textB) ? -1 : 1;\r\n                }\r\n            });\r\n\r\n        }\r\n        return perspectives;\r\n    }\r\n}\r\n\r\nexport function getUniqueAuthorsFromConceptCluster(state) {\r\n    let concepts = state.conceptClusters.concepts;\r\n    let authors = state.conceptClusters.authors;\r\n    let perspective = state.conceptClusters.perspective;\r\n    let conceptCluster = state.conceptClusters.conceptCluster;\r\n    if (conceptCluster && conceptCluster.Concepts && concepts && perspective && authors) {\r\n        const conceptids = conceptCluster.Concepts;\r\n        const uniqueAuthors = [];\r\n        const uniqueAuthorNames = [];\r\n        conceptids.forEach(id => {\r\n            concepts[id].Perspectives.forEach(perspecid => {\r\n                if (!uniqueAuthorNames.includes(perspective[perspecid].AuthorId)) {\r\n                    uniqueAuthorNames.push(perspective[perspecid].AuthorId)\r\n                    uniqueAuthors.push({\r\n                        id: perspective[perspecid].AuthorId,\r\n                        firstName: authors[perspective[perspecid].Author].firstName,\r\n                        lastName: authors[perspective[perspecid].Author].lastName\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        uniqueAuthors.sort(function (a, b) {\r\n            let authorALastName = a.lastName.toUpperCase();\r\n            let authorBLastName = b.lastName.toUpperCase();\r\n            return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n        })\r\n        return uniqueAuthors;\r\n    }\r\n}\r\n\r\nexport function getUniqueSortedConceptNameFromAuthorCluster(state) {\r\n    let perspectives = state.autherCluster.perspectives;\r\n    let authorCluster = state.autherCluster.authorCluster;\r\n    if (perspectives && perspectives.length > 0 && authorCluster) {\r\n        let uniqueConceptNames = [];\r\n        let uniqueConcepts = [];\r\n        perspectives.map(conceptid => {\r\n            if (!uniqueConceptNames.includes(authorCluster[conceptid].conceptName)) {\r\n                uniqueConceptNames.push(authorCluster[conceptid].conceptName);\r\n                uniqueConcepts.push({ name: authorCluster[conceptid].conceptName, id: authorCluster[conceptid].conceptId });\r\n            }\r\n        })\r\n        return uniqueConcepts.sort(conceptsSorter);\r\n    }\r\n}\r\n\r\nexport function getDynamicSortedAuthorClusterWithDetails(state) {\r\n    let perspectives = state.autherCluster.perspectives;\r\n    let authorCluster = state.autherCluster.authorCluster;\r\n    let authorClicked = authorCluster.authorClicked;\r\n    let conceptClicked = authorCluster.conceptClicked;\r\n    if (perspectives && perspectives.length > 0 && authorCluster) {\r\n        let copyAuthorClusterWithDetails = [];\r\n        perspectives.forEach(id => {\r\n            copyAuthorClusterWithDetails.push(authorCluster[id]);\r\n        })\r\n        if (authorClicked) {\r\n            copyAuthorClusterWithDetails.sort(function (a, b) {\r\n                var textA = a.authorLastName.toUpperCase();\r\n                var textB = b.authorLastName.toUpperCase();\r\n                return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n            });\r\n        }\r\n        else if (conceptClicked) {\r\n            copyAuthorClusterWithDetails.sort(function (a, b) {\r\n                var authorA = a.authorLastName.toUpperCase();\r\n                var authorB = b.authorLastName.toUpperCase();\r\n                var textA = a.conceptName.toUpperCase();\r\n                var textB = b.conceptName.toUpperCase();\r\n                if (textA === textB) {\r\n                    return (authorA < authorB) ? -1 : (authorA > authorB) ? 1 : 0;\r\n                }\r\n                else {\r\n                    if (textA === \"CULTURE\") {\r\n                        console.log(\"not author sorting\");\r\n                    }\r\n                    else {\r\n                        if (textA === \"CULTURE\") {\r\n                            console.log(\"not author sorting\");\r\n                        }\r\n                        return (textA < textB) ? -1 : 1;\r\n                    }\r\n                    // return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n                }\r\n            });\r\n        }\r\n        return copyAuthorClusterWithDetails;\r\n    }\r\n}\r\n\r\nexport function getSortedAuthorClusterWithDetailsByAuthorLast(state) {\r\n    let clustersWithDetails = state.autherCluster.authorClustersWithDetails;\r\n    if (clustersWithDetails && clustersWithDetails.length > 0) {\r\n        let copyAuthorClusterWithDetails = [...clustersWithDetails];\r\n        copyAuthorClusterWithDetails.sort(function (a, b) {\r\n            var textA = a.authorLastName.toUpperCase();\r\n            var textB = b.authorLastName.toUpperCase();\r\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n        });\r\n        return copyAuthorClusterWithDetails;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport AdSense from 'react-adsense';\r\nimport \"./ConceptsPage.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport ReactLoading from 'react-loading';\r\nimport AdsComponent from '../AdComponent/AdComponent';\r\nimport {\r\n    flushConceptState, getListRelatedByConceptId,\r\n    getConceptFromApi,\r\n    increasePerspectiveLike,\r\n    decreasePerspectiveLike,\r\n    sortByKeyword,\r\n    showAllPerspective,\r\n    sortByAuthorLast,\r\n    getConceptPerspectivesByAuthor,\r\n    getConceptPerspectivesByKeywords,\r\n    getAllPerspectivesByConcept\r\n} from \"../../actions/conceptsActions\";\r\nimport { setSelectedCategory, setSelectedItem, addTag } from \"../../actions/navbaractions\";\r\nimport { getAuthorGroups } from \"../../utilities\";\r\nimport Context from \"./Context/Context\";\r\nimport { getUniqueKeywords, getUniqueSortedAuthors } from '../../selectors';\r\nimport queryString from \"query-string\";\r\nimport Axios from 'axios';\r\nclass ConceptsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: \"\",\r\n            filters: false,\r\n            apiLoading: this.props.concepts.apiLoading,\r\n            apiServerError: this.props.concepts.apiServerError,\r\n            apiNetworkError: this.props.concepts.apiNetworkError,\r\n            conceptWithDetails: this.props.concepts.conceptWithDetails,\r\n            listRelatedData: this.props.concepts.listRelatedData,\r\n            listRelatedLoading: this.props.concepts.listRelatedLoading,\r\n            listRelatedServerError: this.props.concepts.listRelatedServerError,\r\n            listRelatedNetworkError: this.props.concepts.listRelatedNetworkError,\r\n            selectedOption: this.props.navbar.selectedOption,\r\n            perspectives: this.props.concepts.perspectives,\r\n            keywords: this.props.concepts.keywords,\r\n            concept: this.props.concepts.concept,\r\n            authors: this.props.concepts.authors,\r\n            perspectivesRelations: this.props.concepts.perspectivesRelaions,\r\n            perspectivesDetail: this.props.concepts.perspectivesDetail,\r\n            filteredPerspectives:this.getFilteredPerspectives(\r\n            this.props.concepts.perspectivesDetail,\r\n            this.props.concepts.perspectivesRelaions,\r\n            this.props.concepts.authors,\r\n            this.props.concepts.keywords\r\n            ),\r\n            UniqueKeywords: this.props.uniqueKeyWords,\r\n            UniqueAuthors: this.props.uniqueAuthors,\r\n            visibility: \"hidden\",\r\n            keywordId: null,\r\n            authorId: null,\r\n            id: \"\",\r\n            all: false,\r\n            sortByAuthor: null,\r\n            isLike: this.props.concepts.isLike,\r\n        };\r\n        this.filterConceptDefinations = this.filterConceptDefinations.bind(this);\r\n        this.onAuthorClick = this.onAuthorClick.bind(this);\r\n        this.onListClick = this.onListClick.bind(this);\r\n        this.onListRelatedClick = this.onListRelatedClick.bind(this);\r\n        this.onRelatedClick = this.onRelatedClick.bind(this);\r\n        this.toggleListRelated = this.toggleListRelated.bind(this);\r\n        this.onLikeClick = this.onLikeClick.bind(this);\r\n        this.getFilteredPerspectives = this.getFilteredPerspectives.bind(this);\r\n        if (this.props.navbar.selectedOption) {\r\n            if (this.props.navbar.selectedOption.id) {\r\n                if (this.props.navbar.selectedOption.category == \"Concepts\") {\r\n                    let concept = {\r\n                        \"concept_id\": this.props.navbar.selectedOption.id,\r\n                        \"filters\": this.props.navbar.tags.map(tag => tag.id)\r\n                    };\r\n                    this.props.getConceptFromApi(concept);\r\n                    this.props.getListRelatedByConceptId(concept)\r\n                }\r\n            }\r\n        }\r\n        if(this.props.concepts.perspectivesRelations&&this.props.concepts.perspectivesDetail&&this.props.concepts.author){\r\n            this.getFilteredPerspectives(this.props.perspectivesRelations,this.props.perspectivesDetail);\r\n        }\r\n    }\r\n    onListRelatedClick(listRelated) {\r\n        let label = listRelated.relationary_supra;\r\n        let value = label;\r\n        let id = listRelated.relationary_thing_supra_id;\r\n        let category = \"Concept-Clusters\";\r\n        this.props.flushConceptState()\r\n        this.props.setSelectedItem({ label, value, id, category });\r\n    }\r\n    getConcept = (concept_name) => {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/concepts?name=${concept_name}`).then(data => {\r\n                if (data.data.obj) {\r\n                    let result = data.data.obj.selectedOption;\r\n                    resolve(result);\r\n                }\r\n                resolve(null);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n    async componentWillMount() {\r\n        if (this.props.match.params.name) {\r\n            if (this.props.match.params.name && queryString.parse(this.props.location.search).filters) {\r\n                let filters = [];\r\n                let queryFilters = queryString.parse(this.props.location.search).filters;\r\n                let concept_name = this.props.match.params.name;\r\n                if (typeof queryFilters === \"string\") {\r\n                    filters.push(queryFilters);\r\n                } else {\r\n                    filters = queryFilters;\r\n                }\r\n                this.setState({\r\n                    query: concept_name,\r\n                    filters: true\r\n                })\r\n                let result = await this.getConcept(concept_name);\r\n                let author_group = await getAuthorGroups(filters);\r\n                if (result) {\r\n                    this.props.addTag(author_group);\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                } else {\r\n                    this.props.history.push('/Message');\r\n                }\r\n\r\n            } else {\r\n                let concept_name = this.props.match.params.name;\r\n                this.setState({\r\n                    query: concept_name\r\n                });\r\n                let result = await this.getConcept(concept_name);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    })\r\n                } else {\r\n                    this.props.history.push('/Message');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.selectedOption != nextProps.navbar.selectedOption) {\r\n            this.props.flushConceptState();\r\n            this.setState({\r\n                apiLoading: nextProps.concepts.apiLoading,\r\n                apiServerError: nextProps.concepts.apiServerError,\r\n                apiNetworkError: nextProps.concepts.apiNetworkError,\r\n                conceptWithDetails: nextProps.concepts.conceptWithDetails,\r\n                conceptsWithDetails: nextProps.concepts.conceptsWithDetails,\r\n                orignalConceptsWithDetails: nextProps.concepts.conceptsWithDetails,\r\n                //perspectiveids: nextProps.concepts.perspectiveids,\r\n                perspectivesRelations: nextProps.concepts.perspectivesRelaions,\r\n                perspectivesDetail: nextProps.concepts.perspectivesDetail,\r\n                concept: nextProps.concepts.concept,\r\n                //perspectiveIds: nextProps.concepts.perspectiveIds,\r\n                authors: nextProps.concepts.authors,\r\n                keywords: nextProps.concepts.keywords,\r\n                UniqueKeywords: nextProps.uniqueKeyWords,\r\n                UniqueAuthors: nextProps.uniqueAuthors,\r\n                listRelatedData: nextProps.concepts.listRelatedData,\r\n                listRelatedLoading: nextProps.concepts.listRelatedLoading,\r\n                listRelatedNetworkError: nextProps.concepts.listRelatedNetworkError,\r\n                listRelatedServerError: nextProps.concepts.listRelatedServerError,\r\n                loading: nextProps.concepts.loading,\r\n            })\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Concepts\") {\r\n                this.setState({\r\n                    selectedOption: nextProps.navbar.selectedOption,\r\n                });\r\n\r\n                let concept = {\r\n                    \"concept_id\": nextProps.navbar.selectedOption.id,\r\n                    \"filters\": nextProps.navbar.tags.map(tag => tag.id)\r\n                };\r\n                this.props.getConceptFromApi(concept)\r\n                this.props.getListRelatedByConceptId(concept);\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                apiLoading: nextProps.concepts.apiLoading,\r\n                apiServerError: nextProps.concepts.apiServerError,\r\n                apiNetworkError: nextProps.concepts.apiNetworkError,\r\n                conceptWithDetails: nextProps.concepts.conceptWithDetails,\r\n                conceptsWithDetails: nextProps.concepts.conceptsWithDetails,\r\n                orignalConceptsWithDetails: nextProps.concepts.conceptsWithDetails,\r\n                perspectiveids: nextProps.concepts.perspectiveids,\r\n                keywords: nextProps.concepts.keywords,\r\n                listRelatedData: nextProps.concepts.listRelatedData,\r\n                listRelatedLoading: nextProps.concepts.listRelatedLoading,\r\n                listRelatedNetworkError: nextProps.concepts.listRelatedNetworkError,\r\n                listRelatedServerError: nextProps.concepts.listRelatedServerError,\r\n                loading: nextProps.concepts.loading,\r\n                perspectivesRelations: nextProps.concepts.perspectivesRelaions,\r\n                perspectivesDetail: nextProps.concepts.perspectivesDetail,\r\n                concept: nextProps.concepts.concept,\r\n                UniqueKeywords: nextProps.uniqueKeyWords,\r\n                UniqueAuthors: nextProps.uniqueAuthors,\r\n                authors: nextProps.concepts.authors,\r\n                isLike: nextProps.concepts.isLike\r\n            })\r\n        }\r\n         \r\n        //change content on tag change \r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption.category == \"Concepts\") {\r\n                let concept = {\r\n                    \"concept_id\": this.state.selectedOption.id,\r\n                    \"filters\": nextProps.navbar.tags.map(tag => tag.id)\r\n                };\r\n                this.props.getConceptFromApi(concept)\r\n                this.props.getListRelatedByConceptId(concept);\r\n            }\r\n\r\n        }\r\n\r\n        if(nextProps.concepts.perspectivesDetail!==this.state.perspectivesDetail){\r\n            this.setState({\r\n                filteredPerspectives:this.getFilteredPerspectives(\r\n                    nextProps.concepts.perspectivesDetail,\r\n                    nextProps.concepts.perspectivesRelaions,\r\n                    nextProps.concepts.authors,\r\n                    nextProps.concepts.keywords\r\n                    )\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleListRelated() {\r\n        this.setState({\r\n            listRelated: !this.state.listRelated,\r\n        })\r\n    }\r\n    onListClick() {\r\n        this.setState({\r\n            listRelatedRole: 'list'\r\n        })\r\n        this.toggleListRelated();\r\n    }\r\n    onRelatedClick() {\r\n        this.setState({\r\n            listRelatedRole: 'related',\r\n        })\r\n        this.toggleListRelated();\r\n    }\r\n    onLikeClick(id) {\r\n        if (this.state.perspectives[id].isLike) {\r\n            this.props.decreasePerspectiveLike(id);\r\n        }\r\n        else {\r\n            this.props.increasePerspectiveLike(id);\r\n        }\r\n    }\r\n    onAuthorClick(author) {\r\n        let label = author.author_first + \" \" + author.author_last;\r\n        let value = label;\r\n        let id = author.auth_id;\r\n        let born = author.born;\r\n        let died = author.died;\r\n        let category = \"Authors\"\r\n        this.props.flushConceptState()\r\n        this.props.setSelectedItem({ label, value, id, born, died, category });\r\n    }\r\n    filterConceptDefinations(keyword_id) {\r\n        let rtn = [];\r\n        this.state.orignalConceptsWithDetails.forEach(element => {\r\n            if (element.keywords_id == keyword_id) {\r\n                rtn.push(element);\r\n            }\r\n        });\r\n        this.setState({\r\n            conceptsWithDetails: rtn,\r\n        })\r\n    }\r\n    getFilteredPerspectives(perspectivesRelations,perspectivesDetail,authors) {\r\n        let result = [];\r\n        if (this.state.sortBy == 'keyword') {\r\n            let filteredPerspectives = [];\r\n            let nonFilteredPerspectives = [];\r\n            perspectivesDetail.forEach(perspective => {\r\n                let includes = false;\r\n                perspectivesRelations[perspective.id].Keywords.forEach(k => {\r\n                    if (k == this.state.sortByKeywordId) {\r\n                        perspective.Author = perspectivesRelations[perspective.id].Author;\r\n                        perspective.Keywords = perspectivesRelations[perspective.id].Keywords;\r\n                        includes = true;\r\n                    }\r\n                });\r\n                includes === true ? filteredPerspectives.push(perspective) : nonFilteredPerspectives.push(perspective);\r\n            });\r\n            result = filteredPerspectives.sort(function (a, b) {\r\n                let authorALastName = authors[a.Author].lastName.toUpperCase();\r\n                let authorBLastName = authors[b.Author].lastName.toUpperCase();\r\n                return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n            });\r\n            if (result.length > 0) {\r\n                return result;\r\n            }\r\n            this.props.getConceptPerspectivesByKeywords(this.state.sortByKeywordId);\r\n            return result;\r\n\r\n        }\r\n        else if(this.state.all){\r\n            this.props.getAllPerspectivesByConcept(this.state.selectedOption.id)\r\n            this.setState({\r\n                all:false,\r\n            })\r\n            return result;\r\n        }\r\n        else {\r\n            if (this.state.sortByAuthor) {\r\n                perspectivesDetail.forEach(perspective => {\r\n                    if (perspectivesRelations[perspective.id] && authors[perspectivesRelations[perspective.id].Author].lastName === this.state.sortByAuthor) {\r\n                        perspective.Author = perspectivesRelations[perspective.id].Author;\r\n                        perspective.Keywords = perspectivesRelations[perspective.id].Keywords;\r\n                        result.push(perspective);\r\n                    }\r\n                })\r\n                if (result.length > 0) {\r\n                    return result;\r\n                }\r\n                this.props.getConceptPerspectivesByAuthor(this.state.sortByAuthor);\r\n                return result;\r\n            } else {\r\n                perspectivesDetail.forEach(perspective => {\r\n                    if(perspectivesRelations[perspective.id]){\r\n                    perspective.Author = perspectivesRelations[perspective.id].Author;\r\n                    perspective.Keywords = perspectivesRelations[perspective.id].Keywords;\r\n                    result.push(perspective);\r\n                    }\r\n                });\r\n                result = result.sort(function (a, b) {\r\n                    let authorALastName = authors[a.Author].lastName.toUpperCase();\r\n                    let authorBLastName = authors[b.Author].lastName.toUpperCase();\r\n                    return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n                })\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"overflowhidden\" style={{ overflow: \"hidden\" }}>\r\n                {(this.state.selectedOption.id && this.state.selectedOption.category == \"Concepts\" || this.state.query) && < div className=\"container-fluid\">\r\n                    {this.state.apiLoading && <div style={{ width: \"100px\", margin: \"auto\", marginTop: \"30vh\" }}>\r\n                        <ReactLoading type={\"balls\"} color={\"red\"} />\r\n                    </div>}\r\n                    {!this.state.apiLoading && !this.state.apiNetworkError && !this.state.apiServerError && <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3  \" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", textTransform: 'capitalize', height: \"90vh\", overflow: \"auto\", textAlign: \"\" }}>\r\n                            <div className='' style={{ width: \"100%\", margin: \"auto\", background: \"#F6F0EF\", textAlign: '', borderRadius: '20px' }}>\r\n                                {this.state.listRelatedLoading && <div style={{ width: \"100px\", margin: \"auto\" }}>\r\n                                    <ReactLoading type=\"balls\" color=\"red\" />\r\n                                </div>}\r\n\r\n                                {!this.state.listRelatedLoading && <div>\r\n                                    <div style={{ backgroundColor: 'white', textAlign: 'center', marginTop: '10px', padding: '5px' }}><h3>{this.state.selectedOption.label}</h3></div>\r\n                                </div>}\r\n                                <div style={{ backgroundColor: 'white', marginBottom: '5px' }}>\r\n                                    {!this.state.listRelatedLoading && <div style={{ paddingLeft: '50px', marginTop: '5px', background: 'white' }}>\r\n                                        <label style={{ backgroundColor: \"\", borderRadius: \"15px\", border: '1px solid black', padding: \"5px 20px\", marginTop: \"10px\", marginLeft: \"\", marginRight: \"5px\", cursor: \"pointer\", }}\r\n                                            onClick={this.onListClick}>Lists</label>\r\n                                        <label style={{ cursor: \"pointer\", backgroundColor: \"\", borderRadius: \"15px\", border: '1px solid black', padding: \"5px 15px\", marginTop: \"10px\", marginLeft: \"5px\" }}\r\n                                            onClick={this.onRelatedClick}>Related</label>\r\n                                    </div>}\r\n                                    <div style={{ width: '200px', border: \"1px solid green\", display: [this.state.listRelated ? 'block' : 'none'], textAlign: \"center\" }}>\r\n                                        {this.state.listRelatedRole == 'list' && this.state.listRelatedData && this.state.listRelatedData.length > 0 && returnOnlyListData(this.state.listRelatedData).map(data => {\r\n                                            return <div style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => this.onListRelatedClick({ relationary_supra: data.name, relationary_thing_supra_id: data.id })}>{data.name}</div>\r\n                                        })}\r\n                                        {this.state.listRelatedRole == 'related' && this.state.listRelatedData && this.state.listRelatedData.length > 0 && returnOnlyRelationData(this.state.listRelatedData).map(data => {\r\n                                            return <div style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => this.onListRelatedClick({ relationary_supra: data.name, relationary_thing_supra_id: data.id })} >{data.name}</div>\r\n                                        })}\r\n                                    </div>\r\n                                    {/* <div onClick={() => this.props.showAllPerspective(true)}  className=\"btn btn-link text-center\">Show All</div> */}\r\n                                </div>\r\n\r\n                                {this.state.UniqueKeywords && (this.state.UniqueKeywords.length > 0 && <div style={{ width: \"100%\", margin: \"auto\" }} >\r\n                                    <div style={{ backgroundColor: 'white', width: '100%' }}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-xs-2 col-sm-2 col-md-2\">\r\n                                                <div onClick={() => this.setState({ all: true,sortBy:\"\",sortByAuthor:\"\"})} className=\"btn btn-link text-center rotate\"  ><b>Show All</b></div>\r\n                                            </div>\r\n                                            <div className=\"col-xs-8 col-sm-8 col-md-8\" style={{ backgroundColor: 'white' }}>\r\n                                                {this.state.UniqueKeywords.map(keyword => {\r\n                                                    return <a href=\"#top\" style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }} onClick={() => {\r\n                                                        this.setState({\r\n                                                            sortBy: \"keyword\",\r\n                                                            sortByKeywordId: keyword.id,\r\n                                                            all: false\r\n                                                        });\r\n                                                    }}><b style={{ color: 'black', fontWeight: '15px:', fontSize: '16px' }}>{keyword.name}</b><span style={{ color: 'gray' }}>{\" (\" + keyword.count + \")\"}</span></a>\r\n\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n                                </div>)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"90vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                            <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                <div id=\"img\" style={{ width: \"398px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                    <h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                </div>\r\n                                <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"398px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Positive\r\n                                        </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Critical\r\n                                        </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Funny\r\n                                        </label>\r\n                                </div>\r\n                                {\r\n                                    <div id=\"top\"></div>\r\n                                }\r\n                                {\r\n                                    this.state.selectedOption && this.state.perspectivesDetail && this.state.perspectivesDetail.length > 0 && this.getFilteredPerspectives().map(data => {\r\n                                        return (\r\n                                            <div>\r\n                                                <Context data={data} authors={this.state.authors} selectedOption={this.state.selectedOption} keywords={this.state.keywords} onAuthorClick={this.onAuthorClick} onLikeClick={this.onLikeClick} isLike={this.state.isLike} />\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-2\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"90vh\", overflow: \"auto\", border: \"1px solid #a5a5a5\", borderLeft: '1px solid black' }}>\r\n                            {this.state.UniqueAuthors && this.state.UniqueAuthors.length > 0 && this.state.UniqueAuthors.map(data => {\r\n                                return (\r\n                                    <div style={{ width: \"150px\", margin: \"auto\" }}><a onClick={() => {\r\n                                        this.setState({\r\n                                            sortByAuthor: data.lastName,\r\n                                            sortBy: \"\",\r\n                                            all:false\r\n                                        });\r\n                                    }} style={{ color: \"black\", textDecoration: \"none\", cursor: \"pointer\" }} href={`#${data.lastName}`}><b>{(data.lastName && data.firstName) ? (data.lastName + \", \" + data.firstName) : (data.lastName ? data.lastName : (data.firstName ? data.firstName : \"\"))}</b></a></div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"90vh\", overflow: \"auto\", borderLeft: \"0px\", borderRight: \"3px  solid pink\", borderTop: \"3px  solid pink\", borderBottom: \"3px  solid pink\", textAlign: \"center\" }}>\r\n                            <div className=\"text-center\">\r\n                                <AdsComponent></AdsComponent>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //getConceptDetails: bindActionCreators(getConceptDetails, dispatch),\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        flushConceptState: bindActionCreators(flushConceptState, dispatch),\r\n        getListRelatedByConceptId: bindActionCreators(getListRelatedByConceptId, dispatch),\r\n        getConceptFromApi: bindActionCreators(getConceptFromApi, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        increasePerspectiveLike: bindActionCreators(increasePerspectiveLike, dispatch),\r\n        decreasePerspectiveLike: bindActionCreators(decreasePerspectiveLike, dispatch),\r\n        sortByAuthorLast: bindActionCreators(sortByAuthorLast, dispatch),\r\n        sortByKeyword: bindActionCreators(sortByKeyword, dispatch),\r\n        showAllPerspective: bindActionCreators(showAllPerspective, dispatch),\r\n        getConceptPerspectivesByAuthor: bindActionCreators(getConceptPerspectivesByAuthor, dispatch),\r\n        getConceptPerspectivesByKeywords: bindActionCreators(getConceptPerspectivesByKeywords, dispatch),\r\n        getAllPerspectivesByConcept: bindActionCreators(getAllPerspectivesByConcept, dispatch)\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        navbar: state.navbar,\r\n        concepts: state.concepts,\r\n        uniqueKeyWords: getUniqueKeywords(state),\r\n        uniqueAuthors: getUniqueSortedAuthors(state)\r\n    }\r\n}\r\n// const renderConceptsDetails = (data) => {\r\n//     if (data.length > 0) {\r\n//         data.map(item => {\r\n//             return (<h1>{item.description}</h1>);\r\n//         })\r\n//     }\r\n// }\r\nconst returnOnlyListData = (listRelatedData) => {\r\n    let listData = [];\r\n    listRelatedData.forEach(element => {\r\n        if (element.type == 'list of') {\r\n            listData.push(element);\r\n        }\r\n    })\r\n    return listData;\r\n}\r\nconst returnOnlyRelationData = (listRelatedData) => {\r\n    let listData = [];\r\n    listRelatedData.forEach(element => {\r\n        if (element.type == 'dictionary of') {\r\n            listData.push(element);\r\n        }\r\n    })\r\n    return listData;\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ConceptsPage));","import {schema} from 'normalizr';\r\nconst author=new schema.Entity(\"authors\");\r\nconst keyword=new schema.Entity(\"keywords\");\r\nconst perspective=new schema.Entity(\"perspectives\",{\r\n    Author:author,\r\n    Keywords:[keyword]\r\n});\r\nconst concept=new schema .Entity(\"concepts\",{\r\n    Perspectives:[perspective]\r\n})\r\nexport const conceptClusterSchema=new schema.Entity(\"conceptCluster\",{\r\n    Concepts:[concept]\r\n});","\r\nimport {normalize} from 'normalizr';\r\nimport {conceptClusterSchema} from '../schema/conceptClusterSchema';\r\nconst axios = require('axios');\r\nexport function flushConceptClusterState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_CONCEPT_CLUSTER\",\r\n        })\r\n    }\r\n}\r\nexport function increasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"increase\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = true;\r\n                dispatch({\r\n                    type: 'CONCEPT_CLUSTER_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function decreasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"decrease\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = false;\r\n                dispatch({\r\n                    type: 'CONCEPT_CLUSTER_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function setClickedState(obj){\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:'CLICKED_STATE',\r\n            payload:obj\r\n        })\r\n    }\r\n}\r\nexport function getConceptClusterFromApi(id) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REQUEST_STARTED\"\r\n        })\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/conceptClusters/${id}?relationships=true`).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n                const conceptDetailsFromApi = data.data.data;\r\n                const normalizedData=normalize(conceptDetailsFromApi,conceptClusterSchema)\r\n                dispatch({\r\n                    type: \"REQUEST_SUCCESSFUL\",\r\n                    payload: conceptDetailsFromApi,\r\n                })\r\n                dispatch({\r\n                    type:'CONCEPT_CLUSTER_DETAIL',\r\n                    payload:normalizedData.entities\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"SERVER_ERROR\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"NETWORK_ERROR\"\r\n            })\r\n            console.log('Error While fetching concept details from api', error);\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass Context extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visibility: 'none',\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {authors,data}=this.props;\r\n        return (\r\n            <div id={data.ConceptId}>\r\n                <div id={authors[data.Author].lastName} className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\" }} >\r\n                    <b style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                        onClick={() => {\r\n                            this.props.flushConceptClusterState();\r\n                            this.props.setSelectedItem({ label: data.ConceptName, value: data.ConceptName, id: data.ConceptId, category: \"Concepts\" })\r\n                        }}>{data.pronoun}{\" \"} {data.ConceptName}</b>{\" is \"}{data.description}\r\n                    <div onClick={() => this.props.onAuthorClick({ auth_id: data.AuthorId, author_first: authors[data.Author].firstName, author_last: authors[data.Author].lastName, born: authors[data.Author].dob, died: authors[data.Author].dod })} style={{ color: \"red\", cursor: \"pointer\" }}>{authors[data.Author].firstName}{\" \"}{authors[data.Author].lastName}</div>\r\n                    <div className=\"pull-right\">\r\n                        <i style={{ color: data.isLike?\"red\":\"grey\"}} className=\"fa fa-heart \" onClick={()=>{this.props.onLikeClick(data.id)}}></i>&nbsp;[{data.loves?data.loves:0}]&nbsp;&nbsp; <span className=\"contextbutton\" onClick={() => {\r\n                            this.setState({\r\n                                visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                            })\r\n                        }} style={{ cursor: \"pointer\" }}>Context</span>\r\n                    </div>\r\n                    <div id={data.id} style={{ marginTop: \"20px\", display: [this.state.visibility] }} >{data.longDescription}<div style={{ backgroundColor: \"#DCDCDC\" }}>{data.citation}</div></div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n// Context.PropTypes = {\r\n//     data: PropTypes.object.isRequired,\r\n//     flushConceptClusterState: PropTypes.func.isRequired,\r\n//     setSelectedItem: PropTypes.func.isRequired,\r\n//     onAuthorClick: PropTypes.func.isRequired,\r\n// }\r\nexport default Context;","import React, { Component } from 'react';\r\nimport \"./ConceptClustersPage.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { flushConceptClusterState,\r\n     getConceptClusterFromApi,\r\n     setClickedState,\r\n     increasePerspectiveLike,\r\n     decreasePerspectiveLike } from \"../../actions/conceptClustersActions\";\r\nimport { setSelectedCategory, setSelectedItem, flushState, addTag } from \"../../actions/navbaractions\";\r\nimport{\r\n    getUniqueSortedConceptsFromConceptCluster,\r\n    getPerspectivesFromConceptCluster,\r\n    getUniqueAuthorsFromConceptCluster\r\n} from '../../selectors';\r\nimport { getAuthorGroups } from \"../../utilities\";\r\nimport Context from './Context';\r\nimport ReactLoading from 'react-loading';\r\nimport queryString from \"query-string\";\r\nimport Axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom'\r\nclass ConceptClustersPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedOption: this.props.navbar.selectedOption,\r\n            apiLoading: this.props.conceptClusters.apiLoading,\r\n            apiServerError: this.props.conceptClusters.apiServerError,\r\n            apiNetworkError: this.props.conceptClusters.apiNetworkError,\r\n            /**\r\n             * normalized states\r\n             */\r\n            authors:this.props.conceptClusters.authors,\r\n            keywords:this.props.conceptClusters.keywords,\r\n            sortedConcepts:this.props.sortedConcepts,\r\n            sortedPerspectives:this.props.sortedPerspectives,\r\n            uniqueAuthors:this.props.uniqueAuthors,\r\n            perspectives:this.props.conceptClusters.perspective\r\n             /**\r\n             * end of normalized states\r\n             */\r\n        }\r\n        this.onAuthorClick = this.onAuthorClick.bind(this);\r\n        this.onLikeClick=this.onLikeClick.bind(this);\r\n        if (this.props.navbar.selectedOption) {\r\n            if (this.props.navbar.selectedOption.id) {\r\n                if (this.props.navbar.selectedOption.category == \"Concept-Clusters\"){\r\n                    this.props.getConceptClusterFromApi(this.props.navbar.selectedOption.id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getConceptCluster(cluster) {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/conceptCluster`, { cluster }).then(data => {\r\n                if(data.data.obj){\r\n                    let result = data.data.obj.selectedOption;\r\n                    resolve(result);\r\n                }\r\n                resolve(null);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n    async componentWillMount() {\r\n        if (this.props.match.params.name) {\r\n            if (this.props.match.params.name && queryString.parse(this.props.location.search).filters) {\r\n                let filters = [];\r\n                let queryFilters = queryString.parse(this.props.location.search).filters;\r\n                if (typeof queryFilters === \"string\") {\r\n                    filters.push(queryFilters);\r\n                } else {\r\n                    filters = queryFilters;\r\n                }\r\n                let author_group = await getAuthorGroups(filters);\r\n                let cluster = {};\r\n                cluster.name = this.props.match.params.name;\r\n                cluster.groupIds = author_group.map(group => group.id);\r\n                let result = await this.getConceptCluster(cluster);\r\n                if (result) {\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.addTag(author_group);\r\n                    this.props.setSelectedItem(result);\r\n                } else {\r\n                    return <Redirect to='/Message' />\r\n                }\r\n            } else {\r\n                let cluster = {};\r\n                cluster.name = this.props.match.params.name;\r\n                cluster.groupIds = [];\r\n                let result = await this.getConceptCluster(cluster);\r\n                this.props.setSelectedItem(result);\r\n                this.setState({\r\n                    selectedOption: result\r\n                });\r\n                this.props.getConceptClusterFromApi(this.state.selectedOption.id);\r\n            }\r\n        }\r\n    }\r\n    async componentWillReceiveProps(nextProps) {\r\n        if (this.state.selectedOption != nextProps.navbar.selectedOption) {\r\n            this.props.flushConceptClusterState();\r\n            this.setState({\r\n                selectedOption: nextProps.navbar.selectedOption,\r\n                apiLoading: nextProps.conceptClusters.apiLoading,\r\n                apiServerError: nextProps.conceptClusters.apiServerError,\r\n                apiNetworkError: nextProps.conceptClusters.apiNetworkError,\r\n            /**\r\n             * normalized states\r\n             */\r\n                authors:nextProps.conceptClusters.authors,\r\n                keywords:nextProps.conceptClusters.keywords,\r\n                sortedConcepts:nextProps.sortedConcepts,\r\n                sortedPerspectives:nextProps.sortedPerspectives,\r\n                uniqueAuthors:nextProps.uniqueAuthors,\r\n                perspectives:nextProps.conceptClusters.perspective\r\n             /**\r\n             * end of normalized states\r\n             */\r\n\r\n            })\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Concept-Clusters\") {\r\n                this.props.getConceptClusterFromApi(nextProps.navbar.selectedOption.id);\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                apiLoading: nextProps.conceptClusters.apiLoading,\r\n                apiServerError: nextProps.conceptClusters.apiServerError,\r\n                apiNetworkError: nextProps.conceptClusters.apiNetworkError,\r\n                /**\r\n             * normalized states\r\n             */\r\n                authors:nextProps.conceptClusters.authors,\r\n                keywords:nextProps.conceptClusters.keywords,\r\n                sortedConcepts:nextProps.sortedConcepts,\r\n                sortedPerspectives:nextProps.sortedPerspectives,\r\n                uniqueAuthors:nextProps.uniqueAuthors,\r\n                perspectives:nextProps.conceptClusters.perspective\r\n            /**\r\n             * end of normalized states\r\n             */\r\n            })\r\n        }\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption.category == \"Concept-Clusters\") {\r\n                let cluster = {};\r\n                cluster.name = nextProps.navbar.selectedOption.value;\r\n                cluster.groupIds = nextProps.navbar.tags.map(group => group.id);\r\n                let result = await this.getConceptCluster(cluster);\r\n                if (result) {\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getConceptClusterFromApi(nextProps.navbar.selectedOption.id);\r\n                } else {\r\n                   \r\n                   this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    onLikeClick(id) {\r\n        if (this.state.perspectives[id].isLike) {\r\n            this.props.decreasePerspectiveLike(id);\r\n        }\r\n        else {\r\n            this.props.increasePerspectiveLike(id);\r\n        }\r\n    }\r\n    onAuthorClick(author) {\r\n        let label = author.author_first + \" \" + author.author_last;\r\n        let value = label;\r\n        let id = author.auth_id;\r\n        let born = author.born;\r\n        let died = author.died;\r\n        let category = \"Authors\";\r\n        this.props.flushConceptClusterState()\r\n        this.props.setSelectedItem({ label, value, id, born, died, category });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"overflowhidden\" style={{ overflow: \"hidden\" }}>\r\n                {this.state.selectedOption.id && this.state.selectedOption.category == \"Concept-Clusters\" && <div className=\"container-fluid\">\r\n                    {this.state.apiLoading && <div style={{ width: \"100px\", margin: \"auto\", marginTop: \"30vh\" }}>\r\n                        <ReactLoading type={\"balls\"} color={\"red\"} />\r\n                    </div>}\r\n                    {!this.state.apiLoading && !this.state.apiNetworkError && !this.state.apiServerError && <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px  solid pink\", textAlign: \"\" }}>\r\n                            {this.state.sortedConcepts&&this.state.sortedConcepts.length > 0 && <div style={{ width: \"150px\", margin: \"auto\" }}>\r\n                                { this.state.sortedConcepts.map(concept => {\r\n                                    if (concept.name != undefined) {\r\n                                        return <a onClick={() => {\r\n                                            this.props.setClickedState(\r\n                                                {\r\n                                                    conceptClicked: true,\r\n                                                    authorClicked: false,\r\n                                                }\r\n                                            )\r\n                                        }} href={\"#\" + concept.id} style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }}>{concept.name}</a>\r\n                                    }\r\n                                })}\r\n                            </div>}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                            <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                <div id=\"img\" style={{ width: \"458px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                    <h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                </div>\r\n                                <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"458px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Positive\r\n                                        </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Critical\r\n                                        </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Funny\r\n                                        </label>\r\n                                </div>\r\n                                {\r\n                                    this.state.sortedPerspectives && this.state.sortedPerspectives.length > 0 && this.state.sortedPerspectives.map(data => {\r\n\r\n                                        return (\r\n                                            <Context\r\n                                                data={data}\r\n                                                onAuthorClick={this.onAuthorClick}\r\n                                                flushConceptClusterState={this.props.flushConceptClusterState}\r\n                                                setSelectedItem={this.props.setSelectedItem}\r\n                                                authors={this.state.authors}\r\n                                                onLikeClick={this.onLikeClick}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-2\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px solid pink\", textAlign: \"\" }}>\r\n                            {this.state.uniqueAuthors && this.state.uniqueAuthors.length > 0 && this.state.uniqueAuthors.map(data => {\r\n                                return (\r\n                                    <div style={{ padding: \" 0px 10px\", width: \"150px\", margin: \"auto\" }}><a onClick={() => {\r\n                                        this.props.setClickedState(\r\n                                            {\r\n                                                authorClicked: true,\r\n                                                conceptClicked: false,\r\n                                            }\r\n                                        )\r\n                                    }} style={{ color: \"black\", textDecoration: \"none\", cursor: \"pointer\" }} href={\"#\" + data.lastName}>{(data.lastName && data.firstName) ? (data.lastName + \", \" + data.firstName) : (data.lastName ? data.lastName : (data.firstName ? data.firstName : \"\"))}</a></div>\r\n                                );\r\n\r\n                            })}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", borderLeft: \"0px\", borderRight: \"3px  solid pink\", borderTop: \"3px  solid pink\", borderBottom: \"3px  solid pink\", textAlign: \"center\" }}>\r\n                            <div className=\"text-center\">\r\n                                This place is for adds\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        flushConceptClusterState: bindActionCreators(flushConceptClusterState, dispatch),\r\n        getConceptClusterFromApi: bindActionCreators(getConceptClusterFromApi, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        setClickedState:bindActionCreators(setClickedState,dispatch),\r\n        increasePerspectiveLike:bindActionCreators(increasePerspectiveLike,dispatch),\r\n        decreasePerspectiveLike:bindActionCreators(decreasePerspectiveLike,dispatch)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        navbar: state.navbar,\r\n        conceptClusters: state.conceptClusters,\r\n        sortedConcepts:getUniqueSortedConceptsFromConceptCluster(state),\r\n        sortedPerspectives:getPerspectivesFromConceptCluster(state),\r\n        uniqueAuthors:getUniqueAuthorsFromConceptCluster(state)\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ConceptClustersPage));","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nclass Message extends Component{\r\n    render(){\r\n        return(\r\n            <div style={{margin:\"100px auto\",textAlign:\"center\"}}>\r\n                <h1>\r\n                    Try a search...\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","import {schema} from 'normalizr';\r\nconst authorGroup=new schema.Entity(\"authorGroups\");\r\n//,{idAttribute:'conceptId'}\r\nexport const authorClusterSchema=new schema.Entity(\"authorCluster\",[])","import axios from 'axios';\r\nimport {normalize} from 'normalizr';\r\nimport{authorClusterSchema} from '../schema/authorClusterSchema';\r\nexport function flushAuthorClusterState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_AUTHOR_CLUSTER\",\r\n        })\r\n    }\r\n}\r\n\r\n// export function getAutherClusterDetailsViaSupra(id) {\r\n//     // console.log('get author cluster details via supra ', id);\r\n//     let query = `SELECT * from concept_discrete join __perspectives on\r\n//     concept_discrete.discrete_concept_name_id=__perspectives.concept_id\r\n//     join __author on\r\n//     __author.auth_id=__perspectives.auth_id join\r\n//     author_relationary_author_with_distinct_grouping on\r\n//     author_relationary_author_with_distinct_grouping.auth_id=__author.auth_id\r\n//     join author_relationary_distinct_groupings on\r\n//     author_relationary_distinct_groupings.distinct_grouping_id =author_relationary_author_with_distinct_grouping.distinct_grouping_id\r\n//     join author_relationary_distinct_grouping_with_supra on\r\n//     author_relationary_distinct_grouping_with_supra.distinct_grouping_id=author_relationary_distinct_groupings.distinct_grouping_id\r\n//     join author_relationary_supra on\r\n//     author_relationary_supra.author_supra_id=author_relationary_distinct_grouping_with_supra.supra_id\r\n//     where author_relationary_supra.author_supra_id=${id} order by concept_discrete.discrete_concept_name`\r\n\r\n//     var options = {\r\n//         method: 'POST',\r\n//         url: 'https://cors-anywhere.herokuapp.com/' + 'http://ec2-18-220-90-81.us-east-2.compute.amazonaws.com:8126/',\r\n//         headers:\r\n//         {\r\n//             'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n//             'cache-control': 'no-cache',\r\n//             'content-type': 'application/x-www-form-urlencoded'\r\n//         },\r\n//         form: { query: query }\r\n//     };\r\n//     return dispatch => {\r\n//         request(options, function (error, response, body) {\r\n//             let data = JSON.parse(body);\r\n//             // console.log(data);\r\n//             dispatch({\r\n//                 type: \"GET_AUTHOR_CLUSTER_DETAILS\",\r\n//                 payload: data\r\n//             })\r\n\r\n//             if (data.length > 0) {\r\n//                 let uniqueConceptsDiscrete = [];\r\n//                 let uniqueConceptsIds = [];\r\n//                 data.forEach(element => {\r\n//                     if (!(uniqueConceptsIds.includes(element.discrete_concept_name_id))) {\r\n//                         let discrete_concept_name = element.discrete_concept_name;\r\n//                         let discrete_concept_name_id = element.discrete_concept_name_id;\r\n//                         uniqueConceptsIds.push(element.discrete_concept_name_id);\r\n//                         uniqueConceptsDiscrete.push({ discrete_concept_name_id, discrete_concept_name });\r\n//                     }\r\n//                     else {\r\n//                     }\r\n//                 });\r\n//                 // uniqueConceptsDiscrete.sort((a, b) => (a.discrete_concept_name > b.discrete_concept_name) ? 1 : ((b.discrete_concept_name > a.discrete_concept_name) ? -1 : 0))\r\n//                 // console.log(\"Author Cluster before dispatch only concept names\", uniqueConceptsDiscrete.discrete_concept_name)\r\n//                 dispatch({\r\n//                     type: \"GET_AUTHOR_CLUSTER_CONCEPTS_DISCRETE\",\r\n//                     payload: uniqueConceptsDiscrete,\r\n//                 })\r\n\r\n//             }\r\n//         });\r\n//     }\r\n// }\r\n// export function getAutherClusterDetails(id) {\r\n//     let query = `SELECT * from concept_discrete join __perspectives on\r\n//     concept_discrete.discrete_concept_name_id=__perspectives.concept_id\r\n//     join __author on\r\n//     __author.auth_id=__perspectives.auth_id join\r\n//     author_relationary_author_with_distinct_grouping on\r\n//     author_relationary_author_with_distinct_grouping.auth_id=__author.auth_id\r\n//     join author_relationary_distinct_groupings on\r\n//     author_relationary_distinct_groupings.distinct_grouping_id =author_relationary_author_with_distinct_grouping.distinct_grouping_id\r\n//     where author_relationary_distinct_groupings.distinct_grouping_id=${id} order by concept_discrete.discrete_concept_name`\r\n\r\n//     var options = {\r\n//         method: 'POST',\r\n//         url: 'https://cors-anywhere.herokuapp.com/' + 'http://ec2-18-220-90-81.us-east-2.compute.amazonaws.com:8126/',\r\n//         headers:\r\n//         {\r\n//             'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n//             'cache-control': 'no-cache',\r\n//             'content-type': 'application/x-www-form-urlencoded'\r\n//         },\r\n//         form: { query: query }\r\n//     };\r\n//     return dispatch => {\r\n//         request(options, function (error, response, body) {\r\n//             let data = JSON.parse(body);\r\n//             // console.log(data);\r\n//             dispatch({\r\n//                 type: \"GET_AUTHOR_CLUSTER_DETAILS\",\r\n//                 payload: data\r\n//             })\r\n\r\n//             if (data.length > 0) {\r\n\r\n//                 let uniqueConceptsDiscrete = [];\r\n//                 let uniqueConceptsIds = [];\r\n//                 data.forEach(element => {\r\n//                     if (!(uniqueConceptsIds.includes(element.discrete_concept_name_id))) {\r\n//                         let discrete_concept_name = element.discrete_concept_name;\r\n//                         let discrete_concept_name_id = element.discrete_concept_name_id;\r\n//                         uniqueConceptsIds.push(element.discrete_concept_name_id);\r\n//                         uniqueConceptsDiscrete.push({ discrete_concept_name_id, discrete_concept_name });\r\n//                     }\r\n//                     else {\r\n\r\n//                     }\r\n//                 });\r\n\r\n//                 // uniqueConceptsDiscrete.sort((a, b) => (a.discrete_concept_name > b.discrete_concept_name) ? 1 : ((b.discrete_concept_name > a.discrete_concept_name) ? -1 : 0))\r\n//                 // console.log(\"2Author Cluster before dispatch only concept names\", uniqueConceptsDiscrete)\r\n//                 dispatch({\r\n//                     type: \"GET_AUTHOR_CLUSTER_CONCEPTS_DISCRETE\",\r\n//                     payload: uniqueConceptsDiscrete,\r\n//                 })\r\n\r\n//             }\r\n\r\n//         });\r\n//     }\r\n// }\r\n\r\nexport function getAuthorCluster(id, via) {\r\n    // console.log('Get Author Cluster action', id, via);\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REQUEST_STARTED\"\r\n        })\r\n        getAuthorClusterHelper(id, via).then(data => {\r\n            let normalizedData=normalize(data,[authorClusterSchema]);\r\n            normalizedData.data=data;\r\n            console.log(normalizedData)\r\n            dispatch({\r\n                type: \"GET_AUTHOR_CLUSTER_DETAILS\",\r\n                payload: normalizedData,\r\n            })\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"NETWORK_ERROR\"\r\n            })\r\n            console.log('Error while getting detailed author cluster', error);\r\n        })\r\n    }\r\n}\r\nfunction getAuthorClusterHelper(id, via) {\r\n    // alert(via)\r\n    return new Promise(async (res, rej) => {\r\n        let result = [];\r\n        try {\r\n            let result1 = {};\r\n            if (via === 'Author Clusters') {\r\n                //alert(\"getting data cluster\");\r\n                result1 = await axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorClusters/${id}/perspectives?relationships=true`);\r\n            }\r\n            else if (via === 'Author Groups') {\r\n                result1 = await axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorGroups/${id}/perspectives?relationships=true`);\r\n            }\r\n            if (result1.data.responseType == 'success') {\r\n                console.log(\"getting data response\");\r\n                result = result1.data.data;\r\n            }\r\n            res(result);\r\n        } catch (e) {\r\n            console.log('getting detailed author cluster error', e);\r\n            rej(result);\r\n        }\r\n    })\r\n}\r\n\r\nexport function setClickedState(obj){\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:'CLICKED_STATE',\r\n            payload:obj\r\n        })\r\n    }\r\n}\r\n\r\nexport function increasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"increase\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = true;\r\n                dispatch({\r\n                    type: 'AUTHOR_CLUSTER_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function decreasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"decrease\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = false;\r\n                dispatch({\r\n                    type: 'AUTHOR_CLUSTER_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport conceptsSorter from \"../../utils/conceptsSorterFunction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactLoading from 'react-loading';\r\nimport Axios from 'axios';\r\nimport queryString from \"query-string\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { getAutherClusterDetailsViaSupra,\r\n     getAutherClusterDetails,\r\n      flushAuthorClusterState,\r\n       getAuthorCluster,\r\n       setClickedState,\r\n       increasePerspectiveLike,\r\n       decreasePerspectiveLike\r\n    } from \"../../actions/autherCluster\";\r\nimport { setSelectedCategory, setSelectedItem, flushState, addTag } from \"../../actions/navbaractions\";\r\nimport {\r\n    getUniqueSortedConceptNameFromAuthorCluster,\r\n    getDynamicSortedAuthorClusterWithDetails,\r\n    getSortedAuthorClusterWithDetailsByAuthorLast\r\n} from '../../selectors';\r\nclass AutherCluster extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedOption: this.props.navbar.selectedOption,\r\n            //authorClustersWithDetails: this.props.autherCluster.authorClustersWithDetails,\r\n            // authorClusterConceptsDiscrete: this.props.autherCluster.authorClusterConceptsDiscrete,\r\n            apiLoading: this.props.autherCluster.apiLoading,\r\n            apiServerError: this.props.autherCluster.apiServerError,\r\n            apiNetworkError: this.props.autherCluster.apiNetworkError,\r\n            // authorClicked: false,\r\n            // conceptClicked: true,\r\n            //Normalized states\r\n            sortedConceptsNames: this.props.sortedConceptsNames,\r\n            dynamicSortedAuthorCluster: this.props.dynamicSortedAuthorCluster,\r\n            sortedAuthorClusterDetail: this.props.sortedAuthorClusterDetail,\r\n            perspectives:this.props.autherCluster.authorCluster,\r\n            //End of normalized staes\r\n        }\r\n        this.onAuthorClick = this.onAuthorClick.bind(this);\r\n        this.onLikeClick=this.onLikeClick.bind(this);\r\n        //this.getDynamicSortedAuthorClusterWithDetails = this.getDynamicSortedAuthorClusterWithDetails.bind(this);\r\n        if (this.props.navbar.selectedOption) {\r\n            if (this.props.navbar.selectedOption.id) {\r\n                if (this.props.navbar.selectedOption.category == \"Author-Clusters\") {\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Clusters\")\r\n                    // if (this.props.navbar.selectedOption.via) {\r\n                    //     // console.log(\"Helo\");\r\n                    //     this.props.getAutherClusterDetailsViaSupra(this.props.navbar.selectedOption.id);\r\n                    // }\r\n                    // this.props.getAutherClusterDetails(this.props.navbar.selectedOption.id);\r\n                }\r\n                if (this.props.navbar.selectedOption.category == \"Author-Groups\") {\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Groups\")\r\n                    // if (this.props.navbar.selectedOption.via) {\r\n                    //     // console.log(\"Helo\");\r\n                    //     this.props.getAutherClusterDetailsViaSupra(this.props.navbar.selectedOption.id);\r\n                    // }\r\n                    // this.props.getAutherClusterDetails(this.props.navbar.selectedOption.id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getAutherCluster(cluster) {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorClusters`, { cluster }).then(data => {\r\n                if (data.data.obj) {\r\n                    let result = data.data.obj.selectedOption;\r\n                    resolve(result);\r\n                }\r\n\r\n                resolve(\"\");\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n    getAuthorGroups = (filters) => {\r\n        let filterobj = {};\r\n        filterobj.filters = filters;\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorGroups`, filterobj)\r\n                .then(data => {\r\n                    resolve(data.data);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        });\r\n    }\r\n   async getAuthorGroupByName(name){\r\n       let filters=[this.props.match.params.name];\r\n       let authorGroup=await this.getAuthorGroups(filters);\r\n       if(authorGroup[0]){\r\n           authorGroup=authorGroup[0]\r\n           this.props.setSelectedItem({\r\n               label:authorGroup.label,\r\n               value:authorGroup.value,\r\n               id:authorGroup.id,\r\n               category:'Author-Groups'\r\n           });\r\n       }\r\n   }\r\n    async componentWillMount() { \r\n        let url=this.props.location.pathname.split('/')[1];\r\n        if (this.props.match.params.name) {\r\n            if (this.props.match.params.name && queryString.parse(this.props.location.search).filters) {\r\n                let filters = [];\r\n                if(url==\"author-groups\"||url==\"Author-Groups\"){\r\n                    this.getAuthorGroupByName();\r\n                  }else{\r\n                    let queryFilters = queryString.parse(this.props.location.search).filters;\r\n                    if (typeof queryFilters === \"string\") {\r\n                        filters.push(queryFilters);\r\n                    } else {\r\n                        filters = queryFilters;\r\n                    }\r\n                    let author_group = await this.getAuthorGroups(filters);\r\n                    let cluster = {};\r\n                    cluster.name = this.props.match.params.name;\r\n                    cluster.groupIds = author_group.map(group => group.id);\r\n                    let result = await this.getAutherCluster(cluster);\r\n                    if (result) {\r\n                        this.props.addTag(author_group);\r\n                        this.props.setSelectedItem(result);\r\n                        this.setState({\r\n                            selectedOption: result\r\n                        });\r\n                    } else {\r\n                        this.props.history.push(\"/Message\");\r\n                    }\r\n                  }\r\n            }\r\n            else {\r\n                if(url==\"author-groups\"||url==\"Author-Groups\"){\r\n                  this.getAuthorGroupByName();\r\n                }\r\n                let cluster = {};\r\n                cluster.name = this.props.match.params.name;\r\n                cluster.groupIds = [];\r\n                let result = await this.getAutherCluster(cluster);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Clusters\");\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    async componentWillReceiveProps(nextProps) {\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption && nextProps.navbar.selectedOption.category == \"Author-Clusters\") {\r\n                let cluster = {};\r\n                cluster.name = nextProps.navbar.selectedOption.value;\r\n                cluster.groupIds = nextProps.navbar.tags.map(group => group.id);\r\n                let result = await this.getAutherCluster(cluster);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Clusters\");\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption && nextProps.navbar.selectedOption.category == \"Author-Groups\") {\r\n                let cluster = {};\r\n                cluster.name = nextProps.navbar.selectedOption.value;\r\n                cluster.groupIds = nextProps.navbar.tags.map(group => group.id);\r\n                let result = await this.getAutherCluster(cluster);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Groups\");\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        if (this.state.selectedOption != nextProps.navbar.selectedOption) {\r\n            this.setState({\r\n                selectedOption: nextProps.navbar.selectedOption,\r\n                //authorClustersWithDetails: nextProps.autherCluster.authorClustersWithDetails,\r\n                apiLoading: nextProps.autherCluster.apiLoading,\r\n                apiServerError: nextProps.autherCluster.apiServerError,\r\n                apiNetworkError: nextProps.autherCluster.apiNetworkError,\r\n                // authorClusterConceptsDiscrete: nextProps.autherCluster.authorClusterConceptsDiscrete,\r\n                //Normalized states\r\n                sortedConceptsNames: nextProps.sortedConceptsNames,\r\n                dynamicSortedAuthorCluster: nextProps.dynamicSortedAuthorCluster,\r\n                sortedAuthorClusterDetail: nextProps.sortedAuthorClusterDetail,\r\n                perspectives:nextProps.autherCluster.authorCluster,\r\n                //End of normalized staes\r\n            })\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Author-Clusters\") {\r\n                this.props.getAuthorCluster(nextProps.navbar.selectedOption.id, \"Author Clusters\")\r\n            }\r\n\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Author-Groups\") {\r\n                this.props.getAuthorCluster(nextProps.navbar.selectedOption.id, \"Author Groups\")\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                //authorClustersWithDetails: nextProps.autherCluster.authorClustersWithDetails,\r\n                apiLoading: nextProps.autherCluster.apiLoading,\r\n                apiServerError: nextProps.autherCluster.apiServerError,\r\n                apiNetworkError: nextProps.autherCluster.apiNetworkError,\r\n                //authorClusterConceptsDiscrete: nextProps.autherCluster.authorClusterConceptsDiscrete,\r\n                //Normalized states\r\n                sortedConceptsNames: nextProps.sortedConceptsNames,\r\n                dynamicSortedAuthorCluster: nextProps.dynamicSortedAuthorCluster,\r\n                sortedAuthorClusterDetail: nextProps.sortedAuthorClusterDetail,\r\n                perspectives:nextProps.autherCluster.authorCluster\r\n                //End of normalized staes\r\n            })\r\n        }\r\n        // console.log(\"author clusters State\", this.state);\r\n    }\r\n    onAuthorClick(author) {\r\n        let label = author.author_first + \" \" + author.author_last;\r\n        let value = label;\r\n        let id = author.auth_id;\r\n        let born = author.born;\r\n        let died = author.died;\r\n        let category = \"Authors\"\r\n        this.props.flushAuthorClusterState()\r\n        this.props.setSelectedItem({ label, value, id, born, died, category });\r\n    }\r\n    onLikeClick(id) {\r\n        if (this.state.perspectives[id].isLike) {\r\n            this.props.decreasePerspectiveLike(id);\r\n        }\r\n        else {\r\n            this.props.increasePerspectiveLike(id);\r\n        }\r\n    }\r\n    // getSortedAuthorClusterWithDetailsByAuthorLast(AuthorClusterWithDetails) {\r\n    //     let copyAuthorClusterWithDetails = [...AuthorClusterWithDetails];\r\n    //     copyAuthorClusterWithDetails.sort(function (a, b) {\r\n    //         var textA = a.authorLastName.toUpperCase();\r\n    //         var textB = b.authorLastName.toUpperCase();\r\n    //         return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n    //     });\r\n    //     return copyAuthorClusterWithDetails;\r\n    // }\r\n    // getDynamicSortedAuthorClusterWithDetails(AuthorClusterWithDetails) {\r\n    //     let copyAuthorClusterWithDetails = [...AuthorClusterWithDetails];\r\n    //     if (this.state.authorClicked) {\r\n    //         copyAuthorClusterWithDetails.sort(function (a, b) {\r\n    //             var textA = a.authorLastName.toUpperCase();\r\n    //             var textB = b.authorLastName.toUpperCase();\r\n    //             return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n    //         });\r\n    //     }\r\n    //     else if (this.state.conceptClicked) {\r\n    //         copyAuthorClusterWithDetails.sort(function (a, b) {\r\n    //             var authorA = a.authorLastName.toUpperCase();\r\n    //             var authorB = b.authorLastName.toUpperCase();\r\n    //             var textA = a.conceptName.toUpperCase();\r\n    //             var textB = b.conceptName.toUpperCase();\r\n    //             if (textA === textB) {\r\n    //                 return (authorA < authorB) ? -1 : (authorA > authorB) ? 1 : 0;\r\n    //             }\r\n    //             else {\r\n    //                 if (textA === \"CULTURE\") {\r\n    //                     console.log(\"not author sorting\");\r\n    //                 }\r\n    //                 return (textA < textB) ? -1 : 1;\r\n    //             }\r\n    //             // return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n    //         });\r\n    //     }\r\n    //     return copyAuthorClusterWithDetails;\r\n    // }\r\n    render() {\r\n        let arr = [];\r\n        return (\r\n            <div className=\"overflowhidden\" style={{ overflow: \"hidden\" }}>\r\n                {this.state.selectedOption.id && (this.state.selectedOption.category == \"Author-Clusters\" || this.state.selectedOption.category == \"Author-Groups\") && <div className=\"container-fluid\">\r\n                    {this.state.apiLoading && <div style={{ width: \"100px\", margin: \"auto\", marginTop: \"30vh\" }}>\r\n                        <ReactLoading type={\"balls\"} color={\"red\"} />\r\n                    </div>}\r\n                    {!this.state.apiLoading && !this.state.apiNetworkError && !this.state.apiServerError && <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px  solid pink\", textAlign: \"\" }}>\r\n                            {this.state.sortedConceptsNames && (this.state.sortedConceptsNames.length > 0 && <div style={{ width: \"150px\", margin: \"auto\" }}>\r\n                                {this.state.sortedConceptsNames.map(concept => {\r\n                                    if (concept.name != undefined) {\r\n                                        return <a onClick={() => {\r\n                                            this.props.setClickedState(\r\n                                                {\r\n                                                    authorClicked: false,\r\n                                                    conceptClicked: true,\r\n                                                }\r\n                                            )\r\n\r\n                                        }} href={\"#\" + concept.id} style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }} >{concept.name}</a>\r\n                                    }\r\n                                })}\r\n                            </div>)}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                            <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                <div id=\"img\" style={{ width: \"398px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                    <h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                </div>\r\n                                <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"398px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Positive\r\n                                    </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Critical\r\n                                    </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Funny\r\n                                    </label>\r\n                                </div>\r\n                                {\r\n                                    this.state.dynamicSortedAuthorCluster && this.state.dynamicSortedAuthorCluster.length > 0 && this.state.dynamicSortedAuthorCluster.map(data => {\r\n                                        return (<div id={data.concept_id}><div id={data.authorLastName} className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\" }} >\r\n                                            <b style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => {\r\n                                                this.props.flushAuthorClusterState();\r\n                                                this.props.setSelectedItem({ label: data.conceptName, value: data.conceptName, id: data.conceptId, category: \"Concepts\" })\r\n                                            }}>{data.pronoun}{\" \"} {data.conceptName}</b>{\" is \"}{data.description}\r\n                                            <div onClick={() => this.onAuthorClick({ auth_id: data.authorId, author_first: data.authorFirstName, author_last: data.authorLastName, born: \"1885\", died: \"1960\" })} style={{ color: \"red\", cursor: \"pointer\" }}>{data.authorFirstName}{\" \"}{data.authorLastName}</div>\r\n                                            <div className=\"pull-right\">\r\n                                                <i style={{ color:data.isLike?\"red\":\"grey\"}} className=\"fa fa-heart\" onClick={()=>{this.onLikeClick(data.id)}}></i>&nbsp;[{data.loves ? data.loves : 0}]&nbsp;&nbsp; <span className=\"contextbutton\" onClick={() => {\r\n                                                    this.setState({\r\n                                                        visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                                                        id: data.id,\r\n                                                    })\r\n                                                }} style={{ cursor: \"pointer\" }}>Context</span>\r\n                                            </div>\r\n                                            <div id={data.id} style={{ marginTop: \"20px\", display: [data.id == this.state.id ? this.state.visibility : \"none\"] }} >{data.long_description}<div style={{ backgroundColor: \"#DCDCDC\" }}>{data.citation}</div></div>\r\n                                        </div></div>);\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-2\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px solid pink\", textAlign: \"\" }}>\r\n                            {this.state.sortedAuthorClusterDetail && this.state.sortedAuthorClusterDetail.length > 0 && this.state.sortedAuthorClusterDetail.map(data => {\r\n                                if (!(arr.includes(data.authorId))) {\r\n                                    arr.push(data.authorId);\r\n                                    return (\r\n                                        <div style={{ padding: \" 0px 10px\", width: \"160px\", margin: \"auto\" }}><a onClick={() => {\r\n                                            this.props.setClickedState(\r\n                                                {\r\n                                                    authorClicked: true,\r\n                                                    conceptClicked: false\r\n                                                }\r\n                                            )\r\n\r\n                                        }} style={{ color: \"black\", textDecoration: \"none\", cursor: \"pointer\" }} href={\"#\" + data.authorLastName}>{(data.authorLastName && data.authorFirstName) ? (data.authorLastName + \", \" + data.authorFirstName) : (data.authorLastName ? data.authorFirstName : (data.authorFirstName ? data.authorFirstName : \"\"))}</a></div>\r\n                                    );\r\n                                }\r\n                            })}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", borderLeft: \"0px\", borderRight: \"3px  solid pink\", borderTop: \"3px  solid pink\", borderBottom: \"3px  solid pink\", textAlign: \"center\" }}>\r\n                            <div className=\"text-center\">\r\n                                This place is for adds\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// const getUniqueSortedConceptNameFromClusterDetails = (clustersWithDetails) => {\r\n//     let uniqueConceptNames = [];\r\n//     let uniqueConcepts = [];\r\n//     clustersWithDetails.map(clusterWithDetails => {\r\n//         if (!uniqueConceptNames.includes(clusterWithDetails.conceptName)) {\r\n//             uniqueConceptNames.push(clusterWithDetails.conceptName);\r\n//             uniqueConcepts.push({ name: clusterWithDetails.conceptName, id: clusterWithDetails.conceptId });\r\n//         }\r\n//     })\r\n//     return uniqueConcepts.sort(conceptsSorter);\r\n// }\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //getAutherClusterDetails: bindActionCreators(getAutherClusterDetails, dispatch),\r\n        //getAutherClusterDetailsViaSupra: bindActionCreators(getAutherClusterDetailsViaSupra, dispatch),\r\n        flushAuthorClusterState: bindActionCreators(flushAuthorClusterState, dispatch),\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        getAuthorCluster: bindActionCreators(getAuthorCluster, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        setClickedState: bindActionCreators(setClickedState, dispatch),\r\n        increasePerspectiveLike:bindActionCreators(increasePerspectiveLike,dispatch),\r\n        decreasePerspectiveLike:bindActionCreators(decreasePerspectiveLike,dispatch)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    // console.log(\"state in mapStateToProps\", state);\r\n    return {\r\n        navbar: state.navbar,\r\n        autherCluster: state.autherCluster,\r\n        sortedConceptsNames: getUniqueSortedConceptNameFromAuthorCluster(state),\r\n        dynamicSortedAuthorCluster: getDynamicSortedAuthorClusterWithDetails(state),\r\n        sortedAuthorClusterDetail: getSortedAuthorClusterWithDetailsByAuthorLast(state)\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AutherCluster));","import {schema} from 'normalizr';\r\nconst authorBioHeading=new schema.Entity('AuthorBioHeadings')\r\nconst authorGroup= new schema.Entity('AuthorGroups',{\r\n    AuthorBioHeading:authorBioHeading\r\n});\r\nconst book=new schema.Entity(\"books\")\r\nconst concept=new schema.Entity('concepts');\r\nconst perspective=new schema.Entity('perspectives',{\r\n    Concept:concept\r\n})\r\nexport const authorSchema=new schema.Entity(\"authors\",{\r\n    Perspectives:[perspective],\r\n    AuthorGroups:[authorGroup],\r\n    Books:[book]\r\n});","import { bindActionCreators } from \"redux\";\r\nimport {normalize} from 'normalizr';\r\nimport {authorSchema} from '../schema/authorSchema';\r\nimport axios from 'axios';\r\nlet request = require(\"request\");\r\nexport function flushAuthorState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_AUTHOR\",\r\n        })\r\n    }\r\n}\r\nexport function increasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"increase\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = true;\r\n                dispatch({\r\n                    type: 'AUTHOR_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function decreasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"decrease\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = false;\r\n                dispatch({\r\n                    type: 'AUTHOR_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function getAuthorInfluencedByAuthors(id) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"GET_AUTHOR_AUTHORS_PENDING\"\r\n        })\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authors/${id}?relationships=true&withSelfAssociationsOnly=true`).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n               // getPictureLinks(data.data.data);\r\n                const author_authors_details =data.data.data;\r\n                dispatch({\r\n                    type: \"GET_AUTHOR_AUTHORS_SUCCESS\",\r\n                    payload: author_authors_details,\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"GET_AUTHOR_AUTHORS_SERVER_ERROR\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"GET_AUTHOR_AUTHORS_NETWORK_ERROR\"\r\n            })\r\n            console.log('Error While fetching author_author details from api', error);\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction getPictureLinks(data){\r\n    let author_lastName=(((data.lastName).split(\" \")).join(\"+\")).toLowerCase();\r\n    let author_firstName=(((data.firstName).split(\" \")).join(\"+\")).toLowerCase();\r\n    author_firstName=((author_firstName).split(\".\")).join(\"\");\r\n    let author_image=author_lastName.concat(\"+\"+author_firstName+\".jpg\");\r\n    data.pictureLink=`https://conceptionary-images.s3.amazonaws.com/${author_image}`;\r\n    return data;\r\n}\r\n\r\nexport function getAuthorDetails(id) {\r\n    \r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REQUEST_STARTED\"\r\n        })\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authors/${id}?relationships=true`).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n                const authorDetailsFromApi =getPictureLinks( data.data.data);\r\n                const normalizedData =normalize(authorDetailsFromApi,authorSchema)\r\n                console.log(normalizedData)\r\n                dispatch({\r\n                    type: \"GET_AUTHOR_DETAILS\",\r\n                    payload: authorDetailsFromApi,\r\n                })\r\n                dispatch({\r\n                    type:'AUTHOR_DETAILS',\r\n                    payload:normalizedData.entities\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"SERVER_ERROR\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"NETWORK_ERROR\"\r\n            })\r\n            console.log('Error While fetching author details from api', error);\r\n        })\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport \"./AuthorPage.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { setSelectedCategory, setSelectedItem, flushState, addTag } from \"../../actions/navbaractions\";\r\nimport { flushAuthorClusterState } from '../../actions/autherCluster';\r\nimport { getAuthorGroups } from \"../../utilities\";\r\nimport { getUniqueConcept, getSortedPerspectivesByConceptName, getAuthorBioData, getUniqueAuthorBooks } from '../../selectors';\r\nimport queryString from \"query-string\";\r\nimport Axios from 'axios';\r\nimport ReactLoading from \"react-loading\";\r\nimport { getAuthorDetails, getAuthorInfluencedByAuthors,flushAuthorState,increasePerspectiveLike,decreasePerspectiveLike } from \"../../actions/authorActions\";\r\nclass AuthorPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: \"\",\r\n            selectedOption: this.props.navbar.selectedOption,\r\n            // apiLoading: this.props.author.apiLoading,\r\n            // apiServerError: this.props.author.apiServerError,\r\n            // apiNetworkError: this.props.author.apiNetworkError,\r\n            //authorsWithDetails: this.props.author.authorsWithDetails,\r\n            // author_authors_apiLoading: this.props.author.author_authors_apiLoading,\r\n            // author_authors_apiServerError: this.props.author.author_authors_apiServerError,\r\n            // author_authors_apiNetworkError: this.props.author.author_authors_apiNetworkError,\r\n            author_authors: this.props.author.author_authors,\r\n            authorInfluencedByAuthors: this.props.author.authorInfluencedByAuthors,\r\n            authorInfluencedOnAuthors: this.props.author.author_authors.AuthorInfluenceAuthors,\r\n            authorConvoWithAuthors: this.props.author.author_authors.AuthorConvoAuthors,\r\n            id: \"\",\r\n            visibility: \"none\",\r\n            showBooks: false,\r\n            sortedAuthorInfluencedByAuthors: setInitialsortedAuthorInfluencedByAuthors(this.props.author.authorInfluencedByAuthors),\r\n            sortedAuthorInfluencedOnAuthors: setInitialsortedAuthorInfluencedOnAuthors(this.props.author.author_authors.AuthorInfluenceAuthors),\r\n            sortedAuthorConvoWithAuthors: setInitialsortedAuthorConvoWithAuthors(this.props.author.author_authors.AuthorConvoAuthors),\r\n            index: 0,\r\n            index1: 0,\r\n            index2: 0,\r\n            loading: this.props.author.loading,\r\n            //normalized states\r\n            //authorBioHeadings: this.props.author.authorBioHeadings,\r\n            //authorGroups: this.props.author.authorGroups,\r\n            authorPerspectives: this.props.author.authorPerspectives,\r\n            author: this.props.author.author,\r\n            concepts: this.props.author.concepts,\r\n            UniqueConcepts: this.props.uniqueconcepts,\r\n            sortedPerspectives: this.props.sortedperpectives,\r\n            authorBio: this.props.authorBio,\r\n            authorBooksById: this.props.authorBooksById,\r\n            authorBooks: this.props.author.authorBooks\r\n            //authorOnConcepts:this.props.author.concept\r\n            //end normalized states\r\n        }\r\n        this.getSortedAuthorInfluencedByAuthors = this.getSortedAuthorInfluencedByAuthors.bind(this);\r\n        //this.getSortedAuthorInfluencedOnAuthors = this.getSortedAuthorInfluencedOnAuthors.bind(this);\r\n        //this.getSortedAuthorConvoWithAuthors = this.getSortedAuthorConvoWithAuthors.bind(this);\r\n        this.reverse = this.reverse.bind(this);\r\n        this.forward = this.forward.bind(this);\r\n        this.reverse1 = this.reverse1.bind(this);\r\n        this.forward1 = this.forward1.bind(this);\r\n        this.reverse2 = this.reverse2.bind(this);\r\n        this.forward2 = this.forward2.bind(this);\r\n        this.onAuthorClick = this.onAuthorClick.bind(this);\r\n        this.onConceptClick = this.onConceptClick.bind(this);\r\n        this.onBioClick = this.onBioClick.bind(this);\r\n        this.onLikeClick=this.onLikeClick.bind(this);\r\n        if (this.props.navbar.selectedOption) {\r\n            if (this.props.navbar.selectedOption.id) {\r\n                if (this.props.navbar.selectedOption.category == \"Authors\") {\r\n                    this.props.getAuthorDetails(this.props.navbar.selectedOption.id);\r\n                    this.props.getAuthorInfluencedByAuthors(this.props.navbar.selectedOption.id);\r\n                    //  this.props.getAuthorInfluencedOnAuthors(this.props.navbar.selectedOption.id);\r\n                    //  this.props.getAuthorConvoWithAuthors(this.props.navbar.selectedOption.id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getAuthor = (author) => {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/author`, { author }).then(data => {\r\n                if (data.data.obj) {\r\n                    let result = data.data.obj.selectedOption;\r\n                    resolve(result);\r\n                }\r\n                resolve(null);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n    async componentWillMount() {\r\n        if (this.props.match.params.name) {\r\n            if (this.props.match.params.name && queryString.parse(this.props.location.search).filters) {\r\n                let filters = [];\r\n                let queryFilters = queryString.parse(this.props.location.search).filters;\r\n                if (typeof queryFilters === \"string\") {\r\n                    filters.push(queryFilters);\r\n                } else {\r\n                    filters = queryFilters;\r\n                }\r\n                let author_group = await getAuthorGroups(filters);\r\n                let author = {};\r\n                author.name = this.props.match.params.name;\r\n                author.groupIds = author_group.map(group => group.id);\r\n                let result = await this.getAuthor(author);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.addTag(author_group);\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n            } else {\r\n                let author = {};\r\n                author.name = this.props.match.params.name;\r\n                author.groupIds = [];\r\n                let result = await this.getAuthor(author);\r\n                this.props.setSelectedItem(result);\r\n                this.setState({\r\n                    selectedOption: result\r\n                });\r\n                this.props.getAuthorDetails(this.state.selectedOption.id);\r\n                this.props.getAuthorInfluencedByAuthors(this.state.selectedOption.id);\r\n\r\n            }\r\n        }\r\n    }\r\n    async componentWillReceiveProps(nextProps) {\r\n\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption != undefined) {\r\n                let author = {};\r\n                author.name = nextProps.navbar.selectedOption.value;\r\n                author.groupIds = nextProps.navbar.tags.map(x => x.id);\r\n                let result = await this.getAuthor(author);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getAuthorDetails(this.state.selectedOption.id);\r\n                    this.props.getAuthorInfluencedByAuthors(this.state.selectedOption.id);\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n        if (this.state.selectedOption != nextProps.navbar.selectedOption) {\r\n            this.props.flushAuthorState();\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Authors\") {\r\n                this.props.getAuthorDetails(nextProps.navbar.selectedOption.id);\r\n                //this.props.getAuthorBio(nextProps.navbar.selectedOption.id);\r\n                //this.props.getAuthorBooks(nextProps.navbar.selectedOption.id);\r\n                this.props.getAuthorInfluencedByAuthors(nextProps.navbar.selectedOption.id);\r\n                //  this.props.getAuthorInfluencedOnAuthors(nextProps.navbar.selectedOption.id);\r\n                //  this.props.getAuthorConvoWithAuthors(nextProps.navbar.selectedOption.id);\r\n            }\r\n            this.setState({\r\n                selectedOption: nextProps.navbar.selectedOption,\r\n                apiLoading: nextProps.author.apiLoading,\r\n                apiServerError: nextProps.author.apiServerError,\r\n                apiNetworkError: nextProps.author.apiNetworkError,\r\n                //authorsWithDetails: nextProps.author.authorsWithDetails,\r\n                author_authors_apiLoading: nextProps.author.author_authors_apiLoading,\r\n                author_authors_apiServerError: nextProps.author.author_authors_apiServerError,\r\n                author_authors_apiNetworkError: nextProps.author.author_authors_apiNetworkError,\r\n                author_authors: nextProps.author.author_authors,\r\n                authorInfluencedByAuthors: nextProps.author.authorInfluencedByAuthors,\r\n                authorInfluencedOnAuthors: nextProps.author.author_authors.AuthorInfluenceAuthors,\r\n                authorConvoWithAuthors: nextProps.author.author_authors.AuthorConvoAuthors,\r\n                sortedAuthorInfluencedByAuthors: setInitialsortedAuthorInfluencedByAuthors(nextProps.author.authorInfluencedByAuthors),\r\n                sortedAuthorInfluencedOnAuthors: setInitialsortedAuthorInfluencedOnAuthors(nextProps.author.author_authors.AuthorInfluenceAuthors),\r\n                sortedAuthorConvoWithAuthors: setInitialsortedAuthorConvoWithAuthors(nextProps.author.author_authors.AuthorConvoAuthors),\r\n                //normalized states\r\n                //authorBioHeadings: nextProps.author.authorBioHeadings,\r\n                //authorGroups: nextProps.author.authorGroups,\r\n                authorPerspectives: nextProps.author.authorPerspectives,\r\n                author: nextProps.author.author,\r\n                concepts: nextProps.author.concepts,\r\n                //authorOnConcepts:nextProps.author.concept\r\n                UniqueConcepts: nextProps.uniqueconcepts,\r\n                sortedPerspectives: nextProps.sortedperpectives,\r\n                authorBio: nextProps.authorBio,\r\n                authorBooksById: nextProps.authorBooksById,\r\n                authorBooks: nextProps.author.authorBooks\r\n                //end normalized states\r\n\r\n            })\r\n            // console.log(\"Here i m\")\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                //authorsWithDetails: nextProps.author.authorsWithDetails,\r\n                apiLoading: nextProps.author.apiLoading,\r\n                apiServerError: nextProps.author.apiServerError,\r\n                apiNetworkError: nextProps.author.apiNetworkError,\r\n                author_authors_apiLoading: nextProps.author.author_authors_apiLoading,\r\n                author_authors_apiServerError: nextProps.author.author_authors_apiServerError,\r\n                author_authors_apiNetworkError: nextProps.author.author_authors_apiNetworkError,\r\n                author_authors: nextProps.author.author_authors,\r\n                authorInfluencedByAuthors: nextProps.author.authorInfluencedByAuthors,\r\n                authorInfluencedOnAuthors: nextProps.author.author_authors.AuthorInfluenceAuthors,\r\n                authorConvoWithAuthors: nextProps.author.author_authors.AuthorConvoAuthors,\r\n                //sortedAuthorInfluencedByAuthors: setInitialsortedAuthorInfluencedByAuthors(nextProps.author.authorInfluencedByAuthors),\r\n                sortedAuthorInfluencedOnAuthors: setInitialsortedAuthorInfluencedOnAuthors(nextProps.author.author_authors.AuthorInfluenceAuthors),\r\n                sortedAuthorConvoWithAuthors: setInitialsortedAuthorConvoWithAuthors(nextProps.author.author_authors.AuthorConvoAuthors),\r\n                //normalized states\r\n                //authorBioHeadings: nextProps.author.authorBioHeadings,\r\n                //authorGroups: nextProps.author.authorGroups,\r\n                authorPerspectives: nextProps.author.authorPerspectives,\r\n                author: nextProps.author.author,\r\n                concepts: nextProps.author.concepts,\r\n                UniqueConcepts: nextProps.uniqueconcepts,\r\n                sortedPerspectives: nextProps.sortedperpectives,\r\n                authorBio: nextProps.authorBio,\r\n                authorBooksById: nextProps.authorBooksById,\r\n                authorBooks: nextProps.author.authorBooks\r\n                //authorOnConcepts:nextProps.author.concept\r\n                //end normalized states\r\n\r\n            })\r\n        }\r\n        // console.log(\"Author State\", this.state);\r\n\r\n    }\r\n    onLikeClick(data) {\r\n        if (this.state.authorPerspectives[data.id].isLike) {\r\n            this.props.decreasePerspectiveLike(data.id);\r\n        }\r\n        else {\r\n            this.props.increasePerspectiveLike(data.id);\r\n        }\r\n    }\r\n    onAuthorClick(author) {\r\n        let label = author.firstName + \" \" + author.lastName;\r\n        let value = label;\r\n        let id = author.id;\r\n        let born = author.dob;\r\n        let died = author.dod;\r\n        let category = \"Authors\";\r\n        this.props.flushAuthorState();\r\n        console.log(category);\r\n        this.props.setSelectedItem({ label, value, id, born, died, category });\r\n\r\n    }\r\n    onBioClick(bio) {\r\n        let label = bio.distinct_grouping;\r\n        let value = label;\r\n        let id = bio.distinct_grouping_id;\r\n        let category = \"Author-Groups\"\r\n        this.props.flushAuthorState();\r\n        this.props.flushAuthorClusterState();\r\n        this.props.setSelectedItem({ label, value, id, category, via: \"group\" });\r\n    }\r\n    onConceptClick(concept) {\r\n\r\n        let label = this.state.concepts[concept.Concept].name;\r\n        let value = label;\r\n        let id = concept.ConceptId;\r\n        let category = \"Concepts\"\r\n        this.props.flushAuthorState();\r\n        this.props.setSelectedItem({ label, value, id, category });\r\n    }\r\n    // getSortedAuthorConvoWithAuthors(index) {\r\n    //     let rtnArray = [];\r\n    //     rtnArray = this.state.authorConvoWithAuthors.slice(index, index + 3);\r\n    //     // console.log(\"Slice params\", index, index + 3);\r\n    //     // console.log(\"Rtn array i\", rtnArray);\r\n    //     this.setState({\r\n    //         sortedAuthorConvoWithAuthors: rtnArray,\r\n    //     })\r\n    // }\r\n    getSortedAuthorInfluencedByAuthors(index) {\r\n        let rtnArray = [];\r\n        rtnArray = this.state.authorInfluencedByAuthors.slice(index, index + 3);\r\n        // console.log(\"Slice params\", index, index + 3);\r\n        // console.log(\"Rtn array i\", rtnArray);\r\n        this.setState({\r\n            sortedAuthorInfluencedByAuthors: rtnArray,\r\n        })\r\n    }\r\n    // getSortedAuthorInfluencedOnAuthors(index) {\r\n    //     let rtnArray = [];\r\n    //     rtnArray = this.state.authorInfluencedOnAuthors.slice(index, index + 3);\r\n    //     // console.log(\"Slice params\", index, index + 3);\r\n    //     // console.log(\"Rtn array i\", rtnArray);\r\n    //     this.setState({\r\n    //         sortedAuthorInfluencedOnAuthors: rtnArray,\r\n    //     })\r\n    // }\r\n    reverse() {\r\n        let index = this.state.index;\r\n        // console.log(\"Index reverse\", index);\r\n        if (index >= 3) {\r\n            this.setState({ index: (index - 3) })\r\n            this.getSortedAuthorInfluencedByAuthors(index - 3);\r\n        }\r\n\r\n    }\r\n    reverse1() {\r\n        let index = this.state.index1;\r\n        // console.log(\"Index reverse\", index);\r\n        if (index >= 3) {\r\n            this.setState({ index1: (index - 3) })\r\n            this.getSortedAuthorInfluencedOnAuthors(index - 3);\r\n        }\r\n\r\n    }\r\n    reverse2() {\r\n        let index = this.state.index2;\r\n        // console.log(\"Index reverse\", index);\r\n        if (index >= 3) {\r\n            this.setState({ index2: (index - 3) })\r\n            this.getSortedAuthorConvoWithAuthors(index - 3);\r\n        }\r\n\r\n    }\r\n    forward() {\r\n        let totalLength = this.state.authorInfluencedByAuthors.length;\r\n        let index = this.state.index;\r\n        // console.log(\"Index forward\", index);\r\n        if (index + 3 < totalLength) {\r\n            this.setState({ index: (index + 3) })\r\n            this.getSortedAuthorInfluencedByAuthors(index + 3);\r\n        }\r\n\r\n    }\r\n    forward1() {\r\n        let totalLength = this.state.authorInfluencedOnAuthors.length;\r\n        let index = this.state.index1;\r\n        // console.log(\"Index forward\", index);\r\n        if (index + 3 < totalLength) {\r\n            this.setState({ index1: (index + 3) })\r\n            this.getSortedAuthorInfluencedOnAuthors(index + 3);\r\n        }\r\n\r\n    }\r\n    forward2() {\r\n        let totalLength = this.state.authorConvoWithAuthors.length;\r\n        let index = this.state.index2;\r\n        // console.log(\"Index forward\", index);\r\n        if (index + 3 < totalLength) {\r\n            this.setState({ index2: (index + 3) })\r\n            this.getSortedAuthorConvoWithAuthors(index + 3);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"overflowhidden \" style={{ overflow: \"hidden\" }}>\r\n                {this.state.selectedOption.id && this.state.selectedOption.category == \"Authors\" && <div className=\"container-fluid\">\r\n                    {this.state.apiLoading && <div style={{ width: \"100px\", margin: \"auto\", marginTop: \"30vh\" }}>\r\n                        <ReactLoading type={\"balls\"} color={\"red\"} />\r\n                    </div>}\r\n                    {!this.state.apiLoading && <div>\r\n                        {!this.state.showBooks && <div className=\"row\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px  solid pink\", textAlign: \"\" }}>\r\n                                <div style={{ width: \"50px\", margin: \"auto\" }}><button className=\"btn btn-link\" style={{ cursor: \"pointer\" }} onClick={() => this.setState({ showBooks: true })} >Books</button></div>\r\n                                {\r\n                                    <div style={{ width: \"150px\", margin: \"auto\" }}>\r\n                                        {this.state.UniqueConcepts && this.state.UniqueConcepts.length > 0 && this.state.UniqueConcepts.map(concept => {\r\n                                            if (concept.discrete_author_name != undefined) {\r\n                                                return <a href={\"#\" + concept.discrete_author_name_id} style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }} onClick={() => {\r\n                                                }}>{concept.discrete_author_name}</a>\r\n                                            }\r\n\r\n                                        })}\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                                <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                    <div id=\"img\" style={{ width: \"398px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                        {/*<h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                        <h5 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\", display: \"inline-block\" }} className=\"float-right\">{(this.state.selectedOption.born && this.state.selectedOption.died) ? this.state.selectedOption.born + \" - \" + this.state.selectedOption.died : \"HUL\"}</h5>\r\n                                        */}\r\n                                        <img src={this.state.author.pictureLink} alt={this.state.selectedOption.label} style={{ width: \"100%\", objectFit: \"cover\" }} ></img>\r\n                                    </div>\r\n                                    <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"398px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Positive\r\n                                        </label>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Critical\r\n                                        </label>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Funny\r\n                                        </label>\r\n                                    </div>\r\n                                    {\r\n                                        this.state.sortedPerspectives && this.state.sortedPerspectives.length > 0 && this.state.sortedPerspectives.map(data => {\r\n                                            return (<div id={data.ConceptId}><div className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\" }} >\r\n                                                <b style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => this.onConceptClick(data)}>{data.pronoun}{\" \"} {this.state.concepts[data.Concept].name}</b>{\" is \"}{data.description}\r\n                                                <div style={{ color: \"red\" }}>{this.state.author.firstName}{\" \"}{this.state.author.lastName}</div>\r\n                                                <div className=\"pull-right\">\r\n                                                    <i style={{ color:data.isLike?\"red\":\"grey\" }} className=\"fa fa-heart \" onClick={() => { this.onLikeClick(data) }}></i>&nbsp;[{data.loves ? data.loves : \"0\"}]&nbsp;&nbsp; <span className=\"contextbutton\" onClick={() => {\r\n                                                        this.setState({\r\n                                                            visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                                                            id: data.id,\r\n                                                        })\r\n                                                    }} style={{ cursor: \"pointer\" }}>Context</span>\r\n                                                </div>\r\n                                                <div id={data.id} style={{ marginTop: \"20px\", display: [data.id == this.state.id ? this.state.visibility : \"none\"] }} >{data.longDescription}<div style={{ backgroundColor: \"#DCDCDC\" }}>{data.citation}</div></div>\r\n                                            </div></div>);\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px solid pink\" }}>\r\n                                {this.state.authorBio && this.state.authorBio.length > 0 && this.state.authorBio.map(item => {\r\n                                    return (<div style={{ width: \"340px\", margin: \"auto\" }}><h6 style={{ color: \"red\" }}>{item.heading.charAt(0).toUpperCase() + item.heading.slice(1)}:</h6>\r\n                                        {item.values.map(v => {\r\n\r\n                                            return <span style={{ display: \"inline-block\" }}><Link style={{ cursor: \"pointer\" }} to=\"author-clusters\" onClick={() => this.onBioClick({ distinct_grouping: v.name, distinct_grouping_id: v.id })}>{v.name}</Link>&nbsp;&nbsp;</span>\r\n                                        })}\r\n\r\n                                    </div>);\r\n                                })\r\n                                }\r\n                                <div id=\"authorInfluencedByAuthors\" style={{ width: \"340px\", margin: \"auto\" }}>\r\n                                    {/*this.state.sortedAuthorInfluencedByAuthors && this.state.sortedAuthorInfluencedByAuthors.length > 0 && <div>\r\n                                        <h6 style={{ color: \"red\" }}>Influenced By:</h6>\r\n                                        <div className=\"dytb\" >\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.reverse()} className=\"fa fa-angle-left dytbc\" />\r\n                                            {this.state.sortedAuthorInfluencedByAuthors.map(author => {\r\n                                                return (\r\n                                                    <div onClick={() => this.onAuthorClick(author)} style={{ marginRight: \"8px\", display: \"inline-block\", marginLeft: \"8px\", width: \"85px\", maxHeight: \"180px\", border: \"1px solid white\", borderRadius: \"3px\", cursor: \"pointer\" }}>\r\n                                                        <div style={{ width: \"83px\", minHeight: \"70px\", backgroundColor: \"yellow\" }}></div>\r\n                                                        <div style={{ fontSize: \"13px\", width: \"83px\", overflow: \"hidden\", textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{author.author_first + author.author_last}</div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.forward()} className=\"fa fa-angle-right dytbc\" ></i>\r\n                                        </div>\r\n                                    </div>*/\r\n                                    }\r\n                                    {this.state.sortedAuthorInfluencedOnAuthors && this.state.sortedAuthorInfluencedOnAuthors.length > 0 && <div>\r\n                                        <h6 style={{ color: \"red\" }}>Influenced On:</h6>\r\n                                        <div className=\"dytb\">\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.reverse1()} className=\"fa fa-angle-left dytbc\" />\r\n                                            {this.state.sortedAuthorInfluencedOnAuthors.map(author => {\r\n                                                return (\r\n                                                    <div onClick={() => this.onAuthorClick(author)} style={{ marginRight: \"8px\", display: \"inline-block\", marginLeft: \"8px\", width: \"85px\", maxHeight: \"180px\", border: \"1px solid white\", borderRadius: \"3px\", cursor: \"pointer\" }}>\r\n                                                        <div style={{ width: \"83px\", minHeight: \"70px\", backgroundColor: \"yellow\" }}>\r\n                                                            <img src={`https://conceptionary-images.s3.amazonaws.com/${author.lastName}+${author.firstName}.jpg`} alt={author.firstName + \" \" + author.lastName}></img>\r\n                                                        </div>\r\n                                                        <div style={{ fontSize: \"13px\", width: \"83px\", overflow: \"hidden\", textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{author.firstName + author.lastName}</div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.forward1()} className=\"fa fa-angle-right dytbc\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    }\r\n                                    {this.state.sortedAuthorConvoWithAuthors && this.state.sortedAuthorConvoWithAuthors.length > 0 && <div>\r\n                                        <h6 style={{ color: \"red\" }}>In Conversation with:</h6>\r\n                                        <div className=\"dytb\">\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.reverse2()} className=\"fa fa-angle-left dytbc\" />\r\n                                            {this.state.sortedAuthorConvoWithAuthors.map(author => {\r\n\r\n                                                return (\r\n                                                    <div onClick={() => this.onAuthorClick(author)} style={{ marginRight: \"8px\", display: \"inline-block\", marginLeft: \"8px\", width: \"85px\", maxHeight: \"180px\", border: \"1px solid white\", borderRadius: \"3px\", cursor: \"pointer\" }}>\r\n                                                        <div style={{ width: \"83px\", minHeight: \"70px\", backgroundColor: \"yellow\" }}>\r\n                                                            <img src={`https://conceptionary-images.s3.amazonaws.com/${author.lastName}+${author.firstName}.jpg`} alt={author.firstName + \" \" + author.lastName}></img>\r\n                                                        </div>\r\n                                                        <div style={{ fontSize: \"13px\", width: \"83px\", overflow: \"hidden\", textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{author.firstName + author.lastName}</div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.forward2()} className=\"fa fa-angle-right dytbc\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-1\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", borderLeft: \"0px\", borderRight: \"3px  solid pink\", borderTop: \"3px  solid pink\", borderBottom: \"3px  solid pink\", textAlign: \"center\", cursor: \"pointer\" }}>\r\n                                <div className=\"text-center\">\r\n                                    This place is for adds\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                        {/* new row for books */}\r\n                        {this.state.showBooks && <div className=\"row\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px  solid pink\", textAlign: \"\" }}>\r\n                                <div style={{ width: \"150px\", margin: \"auto\", marginTop: \"10px\" }}>\r\n                                    <div style={{ cursor: \"pointer\" }} onClick={() => this.setState({ showBooks: false })}><i style={{ width: \"16px\" }} className=\"fa  fa-arrow-left\" />&nbsp;&nbsp;<span style={{ fontSize: \"16px\" }} >Go Back</span></div>\r\n                                    <h3>Books</h3>\r\n                                    {this.state.authorBooksById && this.state.authorBooksById.length > 0 && this.state.authorBooksById.map(book => {\r\n                                        return (\r\n                                            <a href={\"#\" + book.discrete_book_id} style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }} onClick={() => {\r\n                                            }}>{book.title}</a>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                                <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                    <div id=\"img\" style={{ width: \"398px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                        <h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                        <h5 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\", display: \"inline-block\" }} className=\"float-right\">{(this.state.selectedOption.born && this.state.selectedOption.died) ? this.state.selectedOption.born + \" - \" + this.state.selectedOption.died : \"HUL\"}</h5>\r\n                                    </div>\r\n                                    <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"398px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Positive\r\n                                    </label>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Critical\r\n                                    </label>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Funny\r\n                                    </label>\r\n                                    </div>\r\n                                    {this.state.author && this.state.author.Books && this.state.author.Books.length > 0 && this.state.author.Books.map(book => {\r\n                                        {\r\n                                            return this.state.authorBooks[book].BookDescriptions && this.state.authorBooks[book].BookDescriptions.length > 0 && this.state.authorBooks[book].BookDescriptions.map(bookDescription => {\r\n                                                return (<div id={book} className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\" }} >\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col col-md-2\">\r\n                                                            <div style={{ width: \"60px\", minHeight: \"80px\", background: \"red\" }}></div>\r\n                                                        </div>\r\n                                                        <div className=\"col col-md-10\">\r\n                                                            <h6>{this.state.authorBooks[book].title}</h6>\r\n                                                            <div style={{ color: \"black\" }}>{bookDescription.description}</div>\r\n                                                            <div className=\"pull-right\">\r\n                                                                <a className=\"contextbutton\" onClick={() => {\r\n                                                                    this.setState({\r\n                                                                        visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                                                                        id: book.id,\r\n                                                                    })\r\n                                                                }} style={{ cursor: \"pointer\" }}>Context</a>\r\n                                                            </div>\r\n                                                            <div id={book} style={{ marginTop: \"20px\", display: [book == this.state.id ? this.state.visibility : \"none\"] }} >{bookDescription.source}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>);\r\n                                            })\r\n                                        }\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    }\r\n                </div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst setInitialsortedAuthorInfluencedByAuthors = (data) => {\r\n    if (data) {\r\n        if (data.length > 0) {\r\n            if (data.length > 3) {\r\n                return data.slice(0, 3);\r\n            }\r\n            else {\r\n                return data\r\n            }\r\n        }\r\n    }\r\n}\r\nconst setInitialsortedAuthorInfluencedOnAuthors = (data) => {\r\n    if (data) {\r\n        if (data.length > 0) {\r\n            if (data.length > 3) {\r\n                return data.slice(0, 3);\r\n            }\r\n            else {\r\n                return data\r\n            }\r\n        }\r\n    }\r\n}\r\nconst setInitialsortedAuthorConvoWithAuthors = (data) => {\r\n    // console.log('Here get me ', data);\r\n    if (data) {\r\n        if (data.length > 0) {\r\n            if (data.length > 3) {\r\n                return data.slice(0, 3);\r\n            }\r\n            else {\r\n                return data\r\n            }\r\n        }\r\n    }\r\n}\r\n// const renderAuthorBio = (authorBio) => {\r\n//     let desiredArray = [];\r\n//     let uniqueSupraIds = [];\r\n//     authorBio.forEach(element => {\r\n//         if (!(uniqueSupraIds.includes(element.supra_id))) {\r\n//             uniqueSupraIds.push(element.supra_id);\r\n//             // console.log(\"Here is element--------------------->\", element);\r\n//             desiredArray.push({ supra_id: element.supra_id, heading: element.author_supra, values: [{ distinct_grouping: element.distinct_grouping, distinct_grouping_id: element.distinct_grouping_id }] })\r\n//         }\r\n//         else {\r\n//             // console.log(\"Here in else\")\r\n//             for (let i = 0; i < desiredArray.length; i++) {\r\n//                 if (desiredArray[i].supra_id === element.supra_id) {\r\n//                     desiredArray[i].values.push({ distinct_grouping: element.distinct_grouping, distinct_grouping_id: element.distinct_grouping_id });\r\n//                 }\r\n//             }\r\n//         }\r\n//     })\r\n//     return desiredArray;\r\n// }\r\n// const getUniqueBookNamesWithIds = (authorBooks) => {\r\n//     // console.log(\"Recievce author books\", authorBooks)\r\n//     let uniqueBookNameWithId = [];\r\n//     let uniqueBookIds = [];\r\n//     authorBooks.forEach(e => {\r\n//         if (!(uniqueBookIds.indexOf(e.id) > -1)) {\r\n//             uniqueBookIds.push(e.id);\r\n//             let discrete_book_id = e.id;\r\n//             let title = e.title;\r\n//             uniqueBookNameWithId.push({ discrete_book_id, title });\r\n//         }\r\n//     })\r\n//     return uniqueBookNameWithId;\r\n// }\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        getAuthorDetails: bindActionCreators(getAuthorDetails, dispatch),\r\n        // getAuthorBio: bindActionCreators(getAuthorBio, dispatch),\r\n        //getAuthorBooks: bindActionCreators(getAuthorBooks, dispatch),\r\n        getAuthorInfluencedByAuthors: bindActionCreators(getAuthorInfluencedByAuthors, dispatch),\r\n        // getAuthorInfluencedOnAuthors: bindActionCreators(getAuthorInfluencedOnAuthors, dispatch),\r\n        //getAuthorConvoWithAuthors: bindActionCreators(getAuthorConvoWithAuthors, dispatch),\r\n        flushAuthorState: bindActionCreators(flushAuthorState, dispatch),\r\n        flushAuthorClusterState: bindActionCreators(flushAuthorClusterState, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        increasePerspectiveLike:bindActionCreators(increasePerspectiveLike,dispatch),\r\n        decreasePerspectiveLike:bindActionCreators(decreasePerspectiveLike,dispatch)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        navbar: state.navbar,\r\n        author: state.author,\r\n        uniqueconcepts: getUniqueConcept(state),\r\n        sortedperpectives: getSortedPerspectivesByConceptName(state),\r\n        authorBio: getAuthorBioData(state),\r\n        authorBooksById: getUniqueAuthorBooks(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorPage);","import axios from 'axios';\r\nexport default function setAuthorizationToken(token) {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\r\n    }\r\n    else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n}","import axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport setAuthorizationToken from \"../utils/setAuthorizationToken\";\r\nexport function setCurrentUser(user) {\r\n    return {\r\n        type: \"SET_CURRENT_USER\",\r\n        user\r\n    }\r\n}\r\nexport function logOut() {\r\n    return dispatch => {\r\n        localStorage.removeItem('jwtToken');\r\n        setAuthorizationToken(false);\r\n        dispatch({\r\n            type: \"LOG_OUT\",\r\n        })\r\n    }\r\n}\r\n\r\n// new implementation\r\n\r\nexport function userLoginRequest(userData) {\r\n\r\n    return dispatch => {\r\n        return axios.post(\"http://localhost:3002/api/rest/v1/login\", userData, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        })\r\n            .then(res => {\r\n                const token = res.data.token;\r\n                localStorage.setItem('jwtToken', token);\r\n                setAuthorizationToken(token);\r\n                dispatch(setCurrentUser(jwt.decode(token)));\r\n            });\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport validateLogin from \"../../helpers/validateLogin\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport classnames from \"classnames\";\r\nimport { userLoginRequest } from \"../../actions/loginActions\";\r\nimport \"./Login.css\";\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {},\r\n            isLoading: false,\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n    isValid(data) {\r\n        const { errors, isValid } = validateLogin(data);\r\n        if (!isValid) {\r\n            this.setState({ errors })\r\n        }\r\n        return isValid;\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isValid(this.state)) {\r\n            this.setState({ errors: {}, isLoading: true });\r\n            this.props.userLoginRequest({ username: this.state.username, password: this.state.password, call: \"signin\" }).then(\r\n                (data) => { this.props.history.push(\"/command-center\"); console.log(\"Data after succeful response login\", data) },\r\n                (data) => { this.setState({ errors: data.response.data, isLoading: false }); console.log(\"data after error login\", data); console.log(\"stategkkfhjllllllllll\", this.state); }\r\n            );\r\n        }\r\n    }\r\n    render() {\r\n        const { username, password, isLoading, errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"back\">\r\n                    <div className=\"col col-md-4 offset-md-4 div-center\" style={{ marginTop: 70 }}>\r\n                        <div className=\"loginCenter\">\r\n                            <h3>Login</h3>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                {errors.form && <div className=\"alert alert-danger\">{errors.form}</div>}\r\n                                <div className={classnames(\"form-group\", { \"has-error\": errors.username })}>\r\n                                    {errors.username && <span className=\"help-block\">{errors.username}</span>}\r\n                                    {!errors.username && <label >Username</label>}\r\n                                    <input type=\"username\" class=\"form-control\" name=\"username\" value={this.state.username} placeholder=\"username\" onChange={this.onChange} />\r\n                                </div>\r\n                                <div className={classnames(\"form-group\", { \"has-error\": errors.password })}>\r\n                                    {errors.password && <span className=\"help-block\">{errors.password}</span>}\r\n                                    {!errors.password && <label >Password</label>}\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\" onChange={this.onChange} placeholder=\"Password\" />\r\n                                </div>\r\n                                <button style={{ backgroundColor: '#009dd6' }} type=\"submit\" disabled={this.state.isLoading} class=\"btn \">Login</button>\r\n                                <hr />\r\n                                <a href=\"/signup\" class=\"btn btn-link\">Signup</a>\r\n                                <button disabled={isLoading} type=\"button\" class=\"btn btn-link\">Reset Password</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userLoginRequest: bindActionCreators(userLoginRequest, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","import validator from \"validator\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nexport default function (loginData) {\r\n    let errors = {};\r\n    if (validator.isEmpty(loginData.email)) {\r\n        errors.email = \"*Email is required!\";\r\n    }\r\n    if (validator.isEmpty(loginData.password)) {\r\n        errors.password = \"*Password is required!\"\r\n    }\r\n\r\n    return {\r\n        errors,\r\n        isValid: isEmpty(errors),\r\n    }\r\n}","import axios from \"axios\";\r\nexport function userSignupRequest(userData) {\r\n    return dispatch => {\r\n        return axios.post(\"https://8xzajgtd2e.execute-api.us-east-1.amazonaws.com/dev/signup\", userData, {\r\n            headers: {\r\n\r\n            }\r\n        });\r\n    }\r\n}","import validator from \"validator\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nexport default function (signupData) {\r\n    let errors = {};\r\n    if (validator.isEmpty(signupData.firstname)) {\r\n        errors.firstname = \"*First Name is required!\";\r\n    }\r\n    if (validator.isEmpty(signupData.lastname)) {\r\n        errors.lastname = \"*Last Name is required!\";\r\n    }\r\n    if (validator.isEmpty(signupData.email)) {\r\n        errors.email = \"*Email is required!\";\r\n    }\r\n    if (!validator.isEmail(signupData.email)) {\r\n        errors.email = \"*Email is invalid!\"\r\n    }\r\n    return {\r\n        errors,\r\n        isValid: isEmpty(errors),\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport \"./Signup.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { userSignupRequest } from \"../../actions/signupActions\";\r\nimport classnames from \"classnames\";\r\nimport { Redirect } from \"react-router\";\r\nimport validateSignup from \"../../helpers/validateSignup\";\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            errors: {},\r\n            isLoading: false,\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        // console.log(\"Errors in Signup State\", this.state.errors);\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n    isValid(data) {\r\n        const { errors, isValid } = validateSignup(data);\r\n        if (!isValid) {\r\n            this.setState({ errors })\r\n        }\r\n        return isValid;\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isValid(this.state)) {\r\n            this.setState({ errors: {}, isLoading: true });\r\n            this.props.userSignupRequest({\r\n                fname: this.state.firstname, lname: this.state.lastname, email: this.state\r\n                    .email\r\n                , call: \"signup\"\r\n            }).then(\r\n                ({ data }) => { this.props.history.push(\"/login\"); console.log(\"**********first Function*******:\", data.body); console.log(\"State in good 200 request\", this.state); },\r\n                (data) => {\r\n                    // console.log(\"**********second Function*******:\", data.response.data);\r\n                    this.setState({ errors: data.response.data, isLoading: false })\r\n                    // console.log(\"State in bad request\", this.state);\r\n                }\r\n            );\r\n        }\r\n    }\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"back\">\r\n\r\n\r\n                    <div className=\"col col-md-6 offset-md-3 div-center\" style={{ marginTop: '50px' }}>\r\n                        <div className=\"loginCenter\">\r\n                            <h3>Signup</h3>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className={classnames(\"form-group\", { \"has-error\": errors.firstname })}>\r\n                                    {errors.firstname && <span className=\"help-block\">{errors.firstname}</span>}\r\n                                    {!errors.firstname && <label >Name</label>}\r\n                                    <input type=\"text\" class=\"form-control\" value={this.state.firstname} onChange={this.onChange} name=\"firstname\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {errors.lastname && <span className=\"help-block\">{errors.lastname}</span>}\r\n                                    {!errors.lastname && <label >Last Name</label>}\r\n                                    <input type=\"text\" class=\"form-control\" value={this.state.lastname} onChange={this.onChange} name=\"lastname\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {errors.email && <span className=\"help-block\">{errors.email}</span>}\r\n                                    {!errors.email && <label>Email</label>}\r\n                                    <input type=\"email\" class=\"form-control\" value={this.state.email} onChange={this.onChange} name=\"email\" email=\"email\" />\r\n                                </div>\r\n                                <button className=\"pull-right\" disabled={this.state.isLoading} style={{ backgroundColor: '#009dd6' }} type=\"submit\" class=\"btn\">Get Verified</button>\r\n                                <a href=\"/login\" class=\"btn text-center btn-link\">Already have and account ?</a>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userSignupRequest: bindActionCreators(userSignupRequest, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Signup);\r\n","import React, { Component } from 'react';\r\nimport \"./TopNavBar.css\";\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { bindActionCreators } from 'redux';\r\nimport \"./ReactSelect.css\";\r\nimport \"react-virtualized/styles.css\";\r\nimport \"react-virtualized-select/styles.css\";\r\nimport chroma from 'chroma-js'\r\nimport AsyncSelect from 'react-select/lib/Async';\r\nimport { setSelectedCategory, setSelectedItem, login, logout, signup, flushState, getAllAsync, setAutherClusterSelectedItems, prefetchConceptsForNavbar, prefetchConceptClustersForNavbar, prefetchAuthorsForNavbar, prefetchAuthorClustersForNavbar, prefetchAuthorGroupsForNavbar, getAuthorGroups, addTag, removeTag } from \"../../actions/navbaractions\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Modal from 'react-responsive-modal';\r\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap';\r\nimport Loader from 'react-loader-spinner'\r\nimport Joi from 'joi-browser/dist/joi-browser'\r\nimport axios from 'axios';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n} from 'reactstrap';\r\n\r\nconst server = process.env.REACT_APP_SERVER;\r\nclass TopNavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTag: [],\r\n            searchCategory: this.props.navbar.searchCategory,\r\n            seletedSearch: \"\",\r\n            selectedOption: {},\r\n            authorClusterSelectedOptions: \"\",\r\n            concepts: this.props.navbar.concepts,\r\n            conceptClusters: this.props.navbar.conceptClusters,\r\n            authors: this.props.navbar.authors,\r\n            authorClusters: this.props.navbar.authorClusters,\r\n            authorGroups: this.props.navbar.authorGroups,\r\n            dropdownData: [],\r\n            tags: this.props.navbar.tags,\r\n            labelsArray: [],\r\n            loadOptionsData: [],\r\n            suggestions: [],\r\n            modalOpen: false,\r\n            modalSignupOpen: false,\r\n            account: {\r\n                Email: '',\r\n                Password: '',\r\n                Username: ''\r\n            },\r\n            errors: [],\r\n            loginRequestStatus_admin: true,\r\n            loginStatus_admin: true,\r\n            userAccount: []\r\n        }\r\n\r\n        // console.log(\"Top Navbar state in Constructor\", this.props)\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.loadOptions = this.loadOptions.bind(this);\r\n        this.renderRedirect = this.renderRedirect.bind(this);\r\n        this.onSelectedCatagoryChange = this.onSelectedCatagoryChange.bind(this);\r\n        //this.renderRedirectCategory = this.renderRedirectCategory.bind(this);\r\n        this.searchAllConceptionary = this.searchAllConceptionary.bind(this);\r\n    }\r\n    schema = {\r\n        Email: Joi.string()\r\n            .required()\r\n            .label(\"Email\"),\r\n        Password: Joi.string()\r\n            .label(\"Password\")\r\n            .required(),\r\n        Username: Joi.string().allow('', null)\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.loginStatus_admin) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    shuffle(a) {\r\n        // for (let i = a.length - 1; i > 0; i--) {\r\n        //     const j = Math.floor(Math.random() * (i + 1));\r\n        //     [a[i], a[j]] = [a[j], a[i]];\r\n        // }\r\n        return a;\r\n    }\r\n\r\n    toggleModalOpen = () => {\r\n        this.setState(prevState => ({ modalOpen: !(prevState.modalOpen) }));\r\n    }\r\n\r\n    toggleModalSignupOpen = () => {\r\n        this.setState(prevState => ({ modalSignupOpen: !(prevState.modalSignupOpen) }));\r\n    }\r\n\r\n\r\n\r\n\r\n    // Login Actions\r\n\r\n\r\n    validateProperty(input) {\r\n        const obj = { [input.name]: input.value };\r\n        const schema = { [input.name]: this.schema[input.name] };\r\n        const { error } = Joi.validate(obj, schema);\r\n        if (!error) return null;\r\n        return error.details[0].message;\r\n    }\r\n\r\n    /* *********************************************** HANDLE INPUT CHANGE EVENT *************************************** */\r\n\r\n    validate = () => {\r\n        const result = Joi.validate(this.state.account, this.schema, {\r\n            abortEarly: false\r\n        });\r\n        if (!result.error) return null;\r\n\r\n        const errors = [];\r\n\r\n        for (let item of result.error.details) errors[item.path[0]] = item.message;\r\n        return errors;\r\n    };\r\n\r\n    handleLoginChange = ({ currentTarget: input }) => {\r\n        const errors = [...this.state.errors];\r\n\r\n        const errorMessage = this.validateProperty(input);\r\n\r\n        if (errorMessage)\r\n            errors[input.name] = errorMessage;\r\n        else\r\n            delete errors[input.name];\r\n\r\n        const account = { ...this.state.account };\r\n\r\n        account[input.name] = input.value;\r\n        this.setState({ account, errors });\r\n\r\n    };\r\n\r\n\r\n    handleSubmit = (e, isSignup) => {\r\n        e.preventDefault();\r\n        // this.setState({loginRequestStatus_admin:false})\r\n        const errors = this.validate();\r\n\r\n        if (!errors) {\r\n            if (isSignup) this.props.signup(this.state.account)\r\n            else this.props.login(this.state.account);\r\n        }\r\n        if (this.props.loginStatus_admin) {\r\n            this.setState({ errors: errors || {} });\r\n        }\r\n    }\r\n\r\n    // end login actions\r\n\r\n\r\n    searchAllConceptionary(inputValue, callback) {\r\n\r\n        axios.get(`${server}/api/rest/v1/home/all/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                let suggestions = [...this.state.suggestions];\r\n\r\n                selectedOption.forEach(x => {\r\n                    let obj = {};\r\n                    obj.id = x.id.toString();\r\n                    obj.label = x.label;\r\n                    suggestions.push(obj);\r\n                })\r\n                this.setState({ suggestions });\r\n\r\n\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author groups for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    searchAuthors(inputValue, callback) {\r\n        axios.get(`${server}/api/rest/v1/authors/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                this.setState({ selectedOption });\r\n\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching authors for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    searchConcepts(inputValue, callback) {\r\n        axios.get(`${server}/api/rest/v1/concepts/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                this.setState({ selectedOption });\r\n\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching concepts for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    searchConceptClusters(inputValue, callback) {\r\n\r\n        axios.get(`${server}/api/rest/v1/conceptClusters/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                // this.setState({selectedOption});\r\n\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n\r\n            console.log('Error while prefetching concept clusters for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    searchAuthorClusters(inputValue, callback) {\r\n        axios.get(`${server}/api/rest/v1/authorClusters/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                this.setState({ selectedOption });\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author clusters for navbar', error);\r\n        });\r\n    }\r\n\r\n    searchAuthorGroupsNav(inputValue, callback) {\r\n        axios.get(`${server}/api/rest/v1/authorGroups/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                this.setState({ selectedOption });\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author groups for navbar', error);\r\n        });\r\n    }\r\n\r\n    searchAuthorGroups(labels, callback) {\r\n        axios.post(`${server}/api/rest/v1/authors/search`, labels).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author groups for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    onTagsChanged = (tag) => {\r\n        this.props.addTag(tag);\r\n        if (this.state.tags.length > 0) {\r\n            this.setState({\r\n                searchCategory: 'AuthorGroups'\r\n            });\r\n            this.props.setSelectedCategory(\"AuthorGroups\");\r\n        }\r\n        if (this.state.tags.length <= 0) {\r\n            this.setState({\r\n                searchCategory: this.props.navbar.searchCategory\r\n            });\r\n            this.props.setSelectedCategory(\"All\");\r\n        }\r\n\r\n\r\n        this.setState({ suggestions: [] })\r\n\r\n    };\r\n\r\n    onInputChanged = (e) => {\r\n        //console.log(`input value is now: ${e.target.value}`);\r\n    }\r\n\r\n    handleDelete = (i) => {\r\n        const tags = this.state.tags.slice(0)\r\n        tags.splice(i, 1)\r\n        this.setState({ tags }, function () {\r\n            if (this.state.tags.length > 0) {\r\n                this.props.setSelectedCategory(\"AuthorGroups\");\r\n            }\r\n            if (this.state.tags.length <= 0) {\r\n                this.props.setSelectedCategory(\"All\");\r\n            }\r\n        })\r\n        this.setState({ suggestions: [] })\r\n\r\n\r\n    }\r\n\r\n    handleAddition = (tag) => {\r\n        let tags = [...this.state.tags];\r\n        tags.push({\r\n            id: tag.id.toString(),\r\n            label: tag.label,\r\n            type: tag.type\r\n        });\r\n        this.setState({ tags }, function () {\r\n            if (this.state.tags.length > 0) {\r\n                this.props.setSelectedCategory(\"AuthorGroups\");\r\n            }\r\n            if (this.state.tags.length <= 0) {\r\n                this.props.setSelectedCategory(\"All\");\r\n            }\r\n        });\r\n        this.setState({ suggestions: [] })\r\n\r\n        //console.log(this.state.tags);\r\n    }\r\n    loadTags = (input, cb) => {\r\n        axios.post(`${server}/api/rest/v1/authorGroups/search`, input).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                let suggestions = [];\r\n                selectedOption.forEach(x => {\r\n                    let obj = {};\r\n                    obj.id = x.id.toString();\r\n                    obj.label = x.label;\r\n                    obj.value = x.label;\r\n                    obj.type = x.type;\r\n                    suggestions.push(obj);\r\n                })\r\n                this.setState({ suggestions });\r\n                cb(null, suggestions);\r\n            }\r\n            else {\r\n                console.log(\"\");\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching suggestions for navbar', error);\r\n        });\r\n    }\r\n    loadSuggestions = (label) => {\r\n        let tagsObject = {};\r\n        if (this.state.tags.length < 1) {\r\n            tagsObject = {};\r\n            tagsObject.type = \"both\";\r\n            tagsObject.labels = label;\r\n        } else {\r\n            tagsObject = {};\r\n            tagsObject.labels = label;\r\n            tagsObject.type = \"group\";\r\n            tagsObject.id = this.state.tags.map(x => x.id);\r\n\r\n        }\r\n        let query = {};\r\n        query.tagsObject = tagsObject;\r\n        return new Promise((resolve, reject) => {\r\n            this.loadTags(query, function (err, suggestions) {\r\n\r\n                resolve(suggestions);\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    handleChange = (selectedOption) => {\r\n        if (selectedOption.label !== undefined) {\r\n            this.props.setSelectedItem(selectedOption);\r\n            this.setState({\r\n                selectedOption\r\n            });\r\n        }\r\n    }\r\n\r\n    handleTagChange = (selectedTag) => {\r\n        if (selectedTag.label !== undefined) {\r\n            this.state.tags.push(selectedTag);\r\n            this.setState({ tags: this.state.tags });\r\n        }\r\n    }\r\n\r\n    onSelectedCatagoryChange(e) {\r\n        if (this.props.navbar.tags.length > 0) {\r\n            this.setState({\r\n                searchCategory: \"AuthorGroups\",\r\n                seletedSearch: e\r\n            });\r\n            this.props.flushState();\r\n            this.props.setSelectedCategory(\"AuthorGroups\");\r\n        } else {\r\n            this.setState({\r\n                seletedSearch: e\r\n            });\r\n            this.props.flushState();\r\n            this.props.setSelectedCategory(e);\r\n        }\r\n    }\r\n    loadOptions(inputValue) {\r\n        if (this.state.searchCategory === \"Concept\") {\r\n\r\n            return new Promise(resolve => {\r\n                this.searchConcepts(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n        else if (this.state.searchCategory === \"Concept Clusters\") {\r\n\r\n            return new Promise(resolve => {\r\n                this.searchConceptClusters(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n\r\n        else if (this.state.searchCategory === \"AuthorGroups\") {\r\n            let obj = {};\r\n            obj.labels = this.state.tags;\r\n            obj.category = this.state.seletedSearch;\r\n            obj.label = inputValue;\r\n\r\n            return new Promise(resolve => {\r\n                this.searchAuthorGroups(obj, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n\r\n        else if (this.state.searchCategory === \"Author\") {\r\n            return new Promise(resolve => {\r\n                this.searchAuthors(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n        else if (this.state.searchCategory === \"Author Clusters\") {\r\n            return new Promise(resolve => {\r\n                this.searchAuthorClusters(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n        else if (this.state.searchCategory === \"Author Groups\") {\r\n            return new Promise(resolve => {\r\n                this.searchAuthorGroupsNav(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n        else if (this.state.searchCategory === \"All\") {\r\n\r\n            return new Promise(resolve => {\r\n                this.searchAllConceptionary(inputValue, function (err, results) {\r\n\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n    };\r\n    renderRedirect = () => {\r\n        if (this.state.selectedOption) {\r\n            if (this.state.selectedOption.category) {\r\n                switch (this.state.selectedOption.category) {\r\n                    case \"Concepts\":\r\n                        return <Redirect to='/concepts' />\r\n                    case \"Concept-Clusters\":\r\n                        return <Redirect to='/concept-clusters' />\r\n                    case \"Authors\":\r\n                        return <Redirect to='/authors' />\r\n                    case \"Author-Clusters\":\r\n                        return <Redirect to='/author-clusters' />\r\n                    case \"Author-Groups\":\r\n                        return <Redirect to='/author-groups' />\r\n                    default:\r\n                        return null\r\n                }\r\n            }\r\n        }\r\n    }\r\n    removeTag = id => {\r\n        this.props.removeTag(id);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.selectedOption !== nextProps.navbar.selectedOption && nextProps.navbar.selectedOption) {\r\n            this.setState({ selectedOption: nextProps.navbar.selectedOption });\r\n        }\r\n\r\n        // if ( this.props.loginStatus_admin !=nextProps.loginStatus_admin  && nextProps.loginStatus_admin) {\r\n\r\n        // }\r\n        if (nextProps.navbar.SIGNUP_SUCCESS) {\r\n            let account = {\r\n                Email: '',\r\n                Password: '',\r\n                Username: ''\r\n            };\r\n            this.setState({\r\n                account\r\n\r\n            });\r\n        }\r\n        if (this.props.loginStatus_admin != nextProps.loginStatus_admin && !nextProps.invalidLogin && nextProps.loginStatus_admin) {\r\n            this.setState({ modalOpen: false })\r\n        }\r\n\r\n\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n\r\n            if (nextProps.navbar.tags.length > 0) {\r\n                this.props.setSelectedCategory(\"AuthorGroups\");\r\n            }\r\n            if (nextProps.navbar.tags.length <= 0) {\r\n                this.props.setSelectedCategory(this.state.seletedSearch ? this.state.seletedSearch : 'All');\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            searchCategory: nextProps.navbar.searchCategory,\r\n            concepts: nextProps.navbar.concepts,\r\n            conceptClusters: nextProps.navbar.conceptClusters,\r\n            authors: nextProps.navbar.authors,\r\n            authorClusters: nextProps.navbar.authorClusters,\r\n            authorGroups: nextProps.navbar.authorGroups,\r\n            selectedOption: nextProps.navbar.selectedOption,\r\n            tags: nextProps.navbar.tags\r\n\r\n        });\r\n        if (nextProps.navbar.selectedOption.label !== undefined) {\r\n            if (nextProps.navbar.tags.length > 0) {\r\n                let filters = nextProps.navbar.tags.map(x => x.label);\r\n                let name = nextProps.navbar.selectedOption.value;\r\n                let category = nextProps.navbar.selectedOption.category;\r\n                let url = `/${category}/${name}?`;\r\n                for (let i = 0; i < filters.length; i++) {\r\n                    if (i == 0) {\r\n                        url = url.concat(`filters=${filters[i]}`);\r\n                    } else {\r\n                        url = url.concat(`&filters=${filters[i]}`);\r\n                    }\r\n\r\n                }\r\n                window.history.pushState(null, null, url);\r\n            } else {\r\n                let name = nextProps.navbar.selectedOption.value;\r\n                let category = nextProps.navbar.selectedOption.category;\r\n                let url = `/${category}/${name}`;\r\n                  window.history.pushState(null, null, url);\r\n                //this.props.history.push(url);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderRedirect()}\r\n                <Navbar style={{ backgroundColor: [getBackgroudColor(this.state.selectedOption.page)] }} light expand=\"md\">\r\n                    <NavbarBrand href=\"/\">Conceptionary</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <form className=\"form-inline\">\r\n                                <span style={{ display: \"inline-block\" }}>\r\n                                    <select style={{ padding: \"5px 3px\", borderRadius: \"3px\", border: \"1px solid white\" }} onChange={(e) => this.onSelectedCatagoryChange(e.target.value)} value={this.state.seletedSearch}>\r\n                                        <option selected={this.state.searchCategory === \"All\"} value=\"All\">All</option>\r\n                                        <option selected={this.state.searchCategory === \"Concept\"} value=\"Concept\">Concepts</option>\r\n                                        <option selected={this.state.searchCategory === \"Author\"} value=\"Author\">Authors</option>\r\n                                        <option selected={this.state.searchCategory === \"Concept Clusters\"} value=\"Concept Clusters\">Concept Clusters</option>\r\n                                        <option selected={this.state.searchCategory === \"Author Groups\"} value=\"Author Groups\">Author Groups</option>\r\n                                    </select>\r\n                                </span>\r\n                                <span style={{ display: \"inline-block\" }}>\r\n                                    <AsyncSelect className=\"width-300\"\r\n                                        value={this.state.selectedOption}\r\n                                        loadOptions={this.loadOptions}\r\n                                        onChange={this.handleChange}\r\n                                        styles={colourStyles}\r\n                                    />\r\n\r\n                                </span>\r\n\r\n                                <span style={{ display: \"inline-block\" }}>\r\n                                    <AsyncSelect className=\"width-300\"\r\n                                        value={this.state.selectedTag}\r\n                                        loadOptions={this.loadSuggestions}\r\n                                        onChange={this.onTagsChanged}\r\n                                        // styles={colourStyles}\r\n                                        isDisabled={this.state.tags.length >= 2 ? true : false || this.state.searchCategory === \"Author Groups\"}\r\n                                    />\r\n\r\n                                </span>\r\n                                <span style={{ display: \"inline-block\" }}>\r\n                                    <ul>\r\n                                        {this.state.tags.map(tag => {\r\n                                            return <li style={{ display: 'inline-block', background: 'purple', color: \"#fff\", borderRadius: '8px', padding: '5px', fontSize: '13px', marginLeft: '2px' }}>{tag.label}\r\n                                                <span style={{ marginLeft: '5px' }} className=\"badge\" id=\"tag\" onClick={() => { this.removeTag(tag.id) }}>X</span>\r\n                                            </li>\r\n                                        })}\r\n                                    </ul>\r\n                                </span>\r\n\r\n                            </form>\r\n                            &nbsp;\r\n                            &nbsp;\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            {\r\n                                this.props.loginStatus_admin ?\r\n                                    <React.Fragment>\r\n                                        <span style={{ padding: '0 5px' }}>\r\n                                            <NavItem style={{ cursor: 'pointer' }}>\r\n                                                {this.props.loggedInUserAccount_admin.username}\r\n\r\n                                            </NavItem>\r\n                                        </span>\r\n                                        <span style={{ padding: '0 5px' }}>\r\n                                            <NavItem style={{ cursor: 'pointer' }}>\r\n                                                <span onClick={() => { this.props.logout() }}>Logout</span>\r\n                                            </NavItem>\r\n                                        </span>\r\n                                        <span style={{ padding: '0 5px' }}>\r\n\r\n                                            <button\r\n                                                style={\r\n                                                    {\r\n                                                        border: '1px solid',\r\n                                                        marginRight: '5px',\r\n                                                        borderRadius: '50%',\r\n                                                        color: 'black',\r\n                                                        fontWeight: 'bold',\r\n                                                        background: 'white'\r\n                                                    }\r\n                                                }\r\n                                            >+</button>\r\n                                        </span>\r\n\r\n                                    </React.Fragment>\r\n                                    :\r\n\r\n                                    <span>\r\n                                        <NavItem style={{ cursor: 'pointer' }}>\r\n                                            <NavLink onClick={this.toggleModalOpen} >Log-in</NavLink>\r\n                                        </NavItem>\r\n                                    </span>\r\n\r\n                            }\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n\r\n                <Modal open={this.state.modalOpen} onClose={this.toggleModalOpen} center>\r\n                    <h4 style={{ textAlign: \"center\" }}>Log in to your account</h4>\r\n\r\n                    <div style={{ padding: '50px' }}>\r\n                        <Form style={{ margin: 'auto', width: '300px', padding: '20px 30px', background: '#fff', boxShadow: '0 0 20px #ccc' }}>\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Email\">Email</Label> */}\r\n                                <Input type=\"text\" name=\"Email\" id=\"Email\" onChange={(e) => this.handleLoginChange(e)} placeholder=\"username\" />\r\n                                {this.state.errors.Email && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Email}</p>\r\n                                )}\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Password\">Password</Label> */}\r\n                                <Input type=\"Password\" name=\"Password\" id=\"Password\" onChange={(e) => this.handleLoginChange(e)} placeholder=\"Password\" />\r\n                                {this.state.errors.Password && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Password}</p>\r\n                                )}\r\n                            </FormGroup>\r\n                            {\r\n                                this.props.invalidLogin ? <p className=\"alert alert-info\">Invalid username/password</p> : null\r\n                            }\r\n\r\n                            <p style={{ color: '#641E89', textDecoration: 'underline', cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    this.toggleModalOpen();\r\n                                    this.toggleModalSignupOpen();\r\n                                }}\r\n                            >Don't have an account? signup</p>\r\n                            <Button onClick={(e) => this.handleSubmit(e)}\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    height: \"40px\",\r\n                                    backgroundColor: \"#641E89\",\r\n                                    color: \"#fff\",\r\n                                    border: \"1px solid white\"\r\n                                }} className=\"btn form-control\">{this.state.loginRequestStatus_admin ? \"Login\" :\r\n                                    <Loader\r\n                                        type=\"Puff\"\r\n                                        color=\"#FFF\"\r\n                                        height=\"30\"\r\n                                        width=\"30\"\r\n                                    />}\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.modalSignupOpen} onClose={this.toggleModalSignupOpen} center>\r\n                    <h4 style={{ textAlign: \"center\" }}>Sign up for a new account</h4>\r\n                    {\r\n                        this.props.navbar.SIGNUP_SUCCESS &&\r\n\r\n                        (\r\n                            <div class=\"alert alert-success alert-dismissible\">\r\n                                <span href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</span>\r\n                                <strong>Success!</strong> user created please login.\r\n                        </div>\r\n                        )\r\n                    }\r\n                    <div style={{ padding: '50px' }}>\r\n                        <Form style={{ margin: 'auto', width: '300px', padding: '20px 30px', background: '#fff', boxShadow: '0 0 20px #ccc' }}>\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Email\">Email</Label> */}\r\n                                <Input type=\"text\" name=\"Email\" id=\"Email\" value={this.state.account.Email} onChange={(e) => this.handleLoginChange(e)} placeholder=\"Email\" />\r\n                                {this.state.errors.Email && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Email}</p>\r\n                                )}\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Password\">Password</Label> */}\r\n                                <Input type=\"Username\" name=\"Username\" id=\"Username\" value={this.state.account.Username} onChange={(e) => this.handleLoginChange(e)} placeholder=\"Username\" />\r\n                                {this.state.errors.Username && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Username}</p>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Password\">Password</Label> */}\r\n                                <Input type=\"Password\" name=\"Password\" id=\"Password\" value={this.state.account.Password} onChange={(e) => this.handleLoginChange(e)} placeholder=\"Password\" />\r\n                                {this.state.errors.Password && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Password}</p>\r\n                                )}\r\n                            </FormGroup>\r\n\r\n                            <p style={{ color: '#641E89', textDecoration: 'underline', cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    this.toggleModalSignupOpen();\r\n                                    this.toggleModalOpen();\r\n                                }}\r\n                            >Already have an account? login</p>\r\n                            {/* <p style={{color:'#641E89',textDecoration:'underline', cursor:'pointer'}}>Forgot Password ?</p> */}\r\n                            <Button onClick={(e) => this.handleSubmit(e, true)}\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    height: \"40px\",\r\n                                    backgroundColor: \"#641E89\",\r\n                                    color: \"#fff\",\r\n                                    border: \"1px solid white\"\r\n                                }} className=\"btn form-control\">{this.state.loginRequestStatus_admin ? \"Signup\" :\r\n                                    <Loader\r\n                                        type=\"Puff\"\r\n                                        color=\"#FFF\"\r\n                                        height=\"30\"\r\n                                        width=\"30\"\r\n                                    />}\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst dot = (color = '#ccc') => ({\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n\r\n    ':before': {\r\n        backgroundColor: color,\r\n        borderRadius: 10,\r\n        content: '\" \"',\r\n        display: 'block',\r\n        marginRight: 8,\r\n        height: 10,\r\n        width: 10,\r\n    },\r\n});\r\nconst colourStyles = {\r\n    control: styles => ({ ...styles, backgroundColor: 'white' }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        const color = chroma(data.color);\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isDisabled\r\n                ? null\r\n                : isSelected ? data.color : isFocused ? color.alpha(0.1).css() : null,\r\n            color: isDisabled\r\n                ? '#ccc'\r\n                : isSelected\r\n                    ? chroma.contrast(color, 'white') > 2 ? 'white' : 'black'\r\n                    : data.color,\r\n            cursor: isDisabled ? 'not-allowed' : 'default',\r\n        };\r\n    },\r\n    input: styles => ({ ...styles, ...dot() }),\r\n    placeholder: styles => ({ ...styles, ...dot() }),\r\n    singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\r\n};\r\nconst getBackgroudColor = (page) => {\r\n    switch (page) {\r\n        case 'Concepts':\r\n            return \"#696969\";\r\n        case 'Concept Clusters':\r\n            return \"#CD5C5C\";\r\n        case 'Authors':\r\n            return \"#A52A2A\";\r\n        case 'Author Clusters':\r\n            return \"#800080\";\r\n        default:\r\n            return \"#a4b2b7\";\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        flushState: bindActionCreators(flushState, dispatch),\r\n        setAutherClusterSelectedItems: bindActionCreators(setAutherClusterSelectedItems, dispatch),\r\n        getAuthorGroups: bindActionCreators(getAuthorGroups, dispatch),\r\n        login: bindActionCreators(login, dispatch),\r\n        signup: bindActionCreators(signup, dispatch),\r\n        logout: bindActionCreators(logout, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        removeTag: bindActionCreators(removeTag, dispatch)\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        navbar: state.navbar,\r\n        userExist_admin: state.navbar.userExist_admin,\r\n        loginRequestStatus_admin: state.navbar.loginRequestStatus_admin,\r\n        loginStatus_admin: state.navbar.loginStatus_admin,\r\n        invalidLogin: state.navbar.invalidLogin,\r\n        loggedInUserAccount_admin: state.navbar.loggedInUserAccount_admin\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TopNavBar));","import React, { Component } from 'react';\r\nimport conceptionary_svg from \"../../images/conceptionary.svg\";\r\nimport \"./HomePage.css\";\r\nimport{getAuthorGroups} from \"../../utilities\";\r\nimport queryString from \"query-string\";\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    async componentWillMount(){\r\n    //     if (queryString.parse(this.props.location.search).filters) {\r\n    //         let filters = [];\r\n    //         let queryFilters = queryString.parse(this.props.location.search).filters;\r\n    //         if (typeof queryFilters === \"string\") {\r\n    //             filters.push(queryFilters);\r\n    //         } else {\r\n    //             filters = queryFilters;\r\n    //         }\r\n    //         let author_group = await getAuthorGroups(filters);\r\n    //         this.props.addTag(author_group);\r\n    // }\r\n}\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: \"5%\" }} className=\"text-center\">\r\n                <img src={conceptionary_svg} width=\"80%\" alt=\"\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport './style.css';\r\nimport Axios from 'axios';\r\nclass FileUpload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null,\r\n            msg: \"\",\r\n            skip: [],\r\n            wait:false\r\n        }\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n    }\r\n\r\n    onChangeHandler(event) {\r\n        this.setState({\r\n            selectedFile: event.target.files[0],\r\n        });\r\n    }\r\n    async onClickHandler() {\r\n        this.setState({\r\n            wait:true\r\n        })\r\n        const data = new FormData();\r\n        data.append('file', this.state.selectedFile);\r\n        let response = await Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspectives/upload`, data);\r\n        if (response.data.msg) {\r\n            this.setState({\r\n                msg: response.data.msg,\r\n                wait:false\r\n            })\r\n        }\r\n        if (response.data.skip.length > 0) {\r\n            this.setState({\r\n                skip: response.data.skip\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"container\" style={{ marginTop: \"5px\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"offset-md-3 col-md-6\">\r\n                        <div class=\"form-group files\">\r\n                            <label><b>Upload Your File </b></label>\r\n                            <input type=\"file\" name=\"file\" class=\"form-control\" multiple onChange={this.onChangeHandler} /><br></br>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            {/*<ToastContainer />\r\n                <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>*/}\r\n\r\n                        </div>\r\n                        <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler} disabled={(this.state.selectedFile?false:true)||(this.state.wait?true:false)}>Upload</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style={{ display: this.state.msg ? 'block' : 'none' }}>\r\n                    <div class=\"offset-md-3 col-md-6\" style={{ marginTop: '50px' }}>\r\n                        <div class=\"alert alert-info alert-dismissible fade show\" role=\"alert\">\r\n                            <strong>{this.state.msg}</strong>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style={{ marginTop: '50px' }}>\r\n                    <div class=\"class=offset-md-3 col-md-6\">\r\n                        {\r\n                            this.state.wait&&(\r\n                                <h2>please wait......</h2>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style={{ marginTop: '50px' }}>\r\n                    <div class=\"class=offset-md-2 col-md-6\">\r\n                        <ul style={{listStyleType:'none'}}>\r\n                           {\r\n                               this.state.skip.length>0&&(\r\n                                   this.state.skip.map(i=>{\r\n                                       return <li>row:{i} not saved from file</li>\r\n                                   })\r\n                               )\r\n                           }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUpload\r\n\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport MetaTags from 'react-meta-tags';\r\nimport { Helmet } from \"react-helmet\";\r\nclass PerspectiveDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Perspective: null,\r\n            Concept: null,\r\n            Author: null\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        let data = await axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/detail/${id}`)\r\n        if (data.data.responseType == \"success\") {\r\n            this.setState({\r\n                Perspective: data.data.data,\r\n                Concept: data.data.data.Concept,\r\n                Author: data.data.data.Author\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\" style={{ marginTop: '50px' }}>\r\n                {/* {this.state.Perspective && this.state.Concept && this.state.Author &&\r\n                    <React.Fragment>\r\n                        <MetaTags>\r\n                            <meta property=\"og:url\" content={\"http://conceptionary-frontend.s3-website.us-east-2.amazonaws.com/perspective/\" + this.state.Perspective.id} />\r\n                            <meta property=\"og:type\" content=\"website\" />\r\n                            <meta property=\"og:title\" content=\"Your Website Title\" />\r\n                            <meta property=\"og:description\" content=\"Your description\" />\r\n                            <meta property=\"og:image\" content=\"https://www.recordedbooks.com/RBDigital/media/site/new%20stuff/Authors%20600%20X%20600/Authors_Stephen-King_600x600_1.jpg?ext=.jpg\" />\r\n                        </MetaTags>\r\n                        <div>\r\n                            <img src=\"https://www.recordedbooks.com/RBDigital/media/site/new%20stuff/Authors%20600%20X%20600/Authors_Stephen-King_600x600_1.jpg?ext=.jpg\" style={{ width: '200px', height: '200px' }}></img>\r\n                            <h3>{this.state.Concept.name}</h3>\r\n                            <hr></hr>\r\n                            <p><b>{this.state.Concept.name}</b> {this.state.Perspective.description}</p>\r\n                            <h5>{this.state.Author.firstName + \" \" + this.state.Author.lastName}</h5>\r\n                        </div>\r\n                    </React.Fragment>\r\n                } */}\r\n                <Helmet>\r\n                    <meta property=\"og:url\" content={`http://conceptionary-frontend.s3-website.us-east-2.amazonaws.com/perspective/${this.state.Perspective.id}`} />\r\n                    <meta property=\"og:type\" content=\"website\" />\r\n                    <meta property=\"fb:app_id\" content=\"930857800581355\" />\r\n                    <meta property=\"og:title\" content={this.state.Concept.name} />\r\n                    <meta property=\"og:description\" content={this.state.Perspective.description} />\r\n                    <meta property=\"og:image\" content=\"https://www.recordedbooks.com/RBDigital/media/site/new%20stuff/Authors%20600%20X%20600/Authors_Stephen-King_600x600_1.jpg?ext=.jpg\" />\r\n                </Helmet>\r\n                <div>\r\n                    <img alt=\"\" src=\"https://www.recordedbooks.com/RBDigital/media/site/new%20stuff/Authors%20600%20X%20600/Authors_Stephen-King_600x600_1.jpg?ext=.jpg\" style={{ width: '200px', height: '200px' }}></img>\r\n                    <h3>{this.state.Concept.name}</h3>\r\n                    <hr></hr>\r\n                    <p><b>{this.state.Concept.name}</b> {this.state.Perspective.description}</p>\r\n                    <h5>{this.state.Author.firstName + \" \" + this.state.Author.lastName}</h5>\r\n                    <p>conceptionary site</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PerspectiveDetail","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Router, Route, Link, Switch, Redirect } from 'react-router-dom';\r\nimport ConceptsPage from \"./components/ConceptsPage/ConceptsPage\";\r\nimport ConceptClustersPage from \"./components/ConceptClustersPage/ConceptClustersPage\";\r\nimport Message from \"./components/Messages/Message\";\r\nimport AuthorCluster from \"./components/AutherCluster/AutherCluster\";\r\nimport AuthorPage from \"./components/AuthorPage/AutherPage\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Signup from \"./components/Signup/Signup\";\r\nimport TopNavBar from \"./components/TopNavBar/TopNavBar\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport FileUpload from './components/FileUpload/FileUpload';\r\nimport PerspectiveDetail from './components/perspectiveDetail/perspective';\r\nimport { connect } from 'react-redux';\r\nimport { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory()\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuthenticated: false,\r\n      user: this.props.auth.user,\r\n    }\r\n  }\r\n  render() {\r\n    const { isAuthenticated } = this.props.auth;\r\n    // const { id, username, email } = this.props.auth.user;\r\n    const PrivateRoute = ({ component: Component, ...rest }) => {\r\n      // console.log(\"...Rest\", rest);\r\n      return <Route {...rest} render={(props) => {\r\n        // console.log(\"Props in Private Route\", props);\r\n        return isAuthenticated === true ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }} />\r\n    };\r\n    return (\r\n       <Router history={history}>\r\n        <div>\r\n          <TopNavBar />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/signup\" exact component={Signup} />\r\n            <Route path=\"/concepts\" exact component={ConceptsPage} />\r\n            <Route path=\"/concepts/:name\" exact component={ConceptsPage} />\r\n            <Route path=\"/concept-clusters\" exact component={ConceptClustersPage} />\r\n            <Route path=\"/concept-clusters/:name\" exact component={ConceptClustersPage} />\r\n            <Route path=\"/authors\" exact component={AuthorPage} />\r\n            <Route path=\"/authors/:name\" exact component={AuthorPage} />\r\n            <Route path=\"/author-clusters\" exact component={AuthorCluster} />\r\n            <Route path=\"/author-groups\" exact component={AuthorCluster} />\r\n            <Route path=\"/author-groups/:name\" exact component={AuthorCluster} />\r\n            <Route path=\"/author-clusters/:name\" exact component={AuthorCluster} />\r\n            <Route path=\"/Message\" exact component={Message} />\r\n            <Route path=\"/Fileupload\" exact component={FileUpload}/>\r\n            <Route path=\"/perspective/:id\" exact component={PerspectiveDetail}/>\r\n          </Switch>\r\n        </div>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\nfunction mapStatToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  }\r\n}\r\nexport default connect(mapStatToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS } from \"constants\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case \"SET_CURRENT_USER\":\r\n            return {\r\n                isAuthenticated: !isEmpty(action.user),\r\n                user: action.user,\r\n            }\r\n        case \"LOG_OUT\":\r\n            return {\r\n                isAuthenticated: false,\r\n                user: {}\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nconst initialState = {\r\n    // searchSuggestions: [],\r\n    tags: [],\r\n    selectedOption: \"\",\r\n    authorClusterSelectedOptions: \"\",\r\n    searchCategory: \"All\",\r\n    concepts: [],\r\n    authors: [],\r\n    conceptClusters: [],\r\n    authorClusters: [],\r\n    authorGroups: [],\r\n    loading: true,\r\n    userExist_admin: false,\r\n    loginStatus_admin: false,\r\n    loggedInUserAccount_admin: {},\r\n    loginRequestStatus_admin: true,\r\n    invalidLogin: false,\r\n    SIGNUP_SUCCESS: false,\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case \"GET_CONCEPTS_NAMES_NAVBAR\":\r\n            // console.log(\"GET_CONCEPTS_NAMES_NAVBAR\");\r\n            return {\r\n                ...state,\r\n                searchSuggestions: action.payload,\r\n            }\r\n        case \"SET_SEARCH_CATEGORY\":\r\n            // console.log(\"SET_SEARCH_CATEGORY \");\r\n            return {\r\n                ...state,\r\n                searchCategory: action.payload,\r\n            }\r\n        case \"SET_SELECTED_OPTION\":\r\n            // console.log(\"SET_SELECTED_OPTION\");\r\n            return {\r\n                ...state,\r\n                selectedOption: action.payload\r\n            }\r\n        case \"FLUSH_NAV_BAR\":\r\n            return {\r\n                ...state,\r\n                selectedOption: \"\",\r\n            }\r\n        case \"SET_AUTHOR_CLUSTER_SELECTED_OPTIONS\":\r\n            return {\r\n                ...state,\r\n                authorClusterSelectedOptions: action.payload,\r\n            }\r\n        case \"CONCEPTS_TRIMMED_FOR_NAVBAR\":\r\n            // console.log(action.payload);\r\n            // console.log(\"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\")\r\n            return {\r\n                ...state,\r\n                concepts: action.payload,\r\n            }\r\n        case \"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\":\r\n            // console.log(\"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\")\r\n            return {\r\n                ...state,\r\n                conceptClusters: action.payload,\r\n            }\r\n        case \"AUTHORS_TRIMMED_FOR_NAVBAR\":\r\n            // console.log(\"AUTHORS_TRIMMED_FOR_NAVBAR\")\r\n            return {\r\n                ...state,\r\n                authors: action.payload,\r\n            }\r\n        case \"AUTHOR_CLUSTERS_TRIMMED_FOR_NAVBAR\":\r\n            // console.log(\"AUTHOR_CLUSTERS_TRIMMED_FOR_NAVBAR\")\r\n            return {\r\n                ...state,\r\n                authorClusters: action.payload,\r\n            }\r\n\r\n        case \"AUTHOR_GROUPS_TRIMMED_FOR_NAVBAR\":\r\n            return {\r\n                ...state,\r\n                authorGroups: action.payload,\r\n            }\r\n\r\n        case \"LOGIN_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loginRequestStatus_admin: false,\r\n                invalidLogin: false,\r\n                loginStatus_admin: false\r\n\r\n            }\r\n\r\n        case \"LOGIN_SUCCESS\":\r\n            // return state;\r\n            return {\r\n                ...state,\r\n                userExist_admin: true,\r\n                loggedInUserAccount_admin: action.userInfo,\r\n                loginRequestStatus_admin: true,\r\n                loginStatus_admin: true,\r\n                invalidLogin: false\r\n\r\n            }\r\n\r\n        case \"LOGIN_FAILURE\":\r\n            return {\r\n                ...state,\r\n                loginRequestStatus_admin: true,\r\n                loginStatus_admin: false,\r\n                invalidLogin: true\r\n            }\r\n\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                loginStatus_admin: false,\r\n                loggedInUserAccount_admin: {},\r\n                loginRequestStatus_admin: false,\r\n                userExist_admin: false,\r\n            }\r\n        case \"SIGNUP_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                SIGNUP_SUCCESS: true\r\n            }\r\n        case \"ADD_TAG\": {\r\n            let tags = [...state.tags]\r\n            if(Array.isArray(action.payload)){\r\n                tags.push(...action.payload)\r\n            }else{\r\n                tags.push(action.payload)\r\n            }\r\n            return {\r\n                ...state,\r\n                tags: tags\r\n            }\r\n        }\r\n        case \"REMOVE_TAG\":\r\n            let tags = [...state.tags];\r\n            for (let i = 0; i < tags.length; i++) {\r\n                if (tags[i].id == action.payload) {\r\n                    tags.splice(i, 1);\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                tags: tags\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    listRelatedData: [],\r\n    loading: true,\r\n    apiLoading: false,\r\n    apiServerError: false,\r\n    apiNetworkError: false,\r\n    conceptWithDetails: {},\r\n    perspectiveIds: [],\r\n    perspectivesRelaions: {},\r\n    perspectivesDetail:{},\r\n    authors: {},\r\n    concept: {},\r\n    keywordIds: [],\r\n    keywords: {},\r\n    all: true,\r\n    sortByKeywordId: \"\",\r\n    sortBy: \"authorLast\",\r\n    isLike: false,\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case 'SERVER_ERROR':\r\n            return {\r\n                apiServerError: true,\r\n            }\r\n        case 'NETWORK_ERROR':\r\n            return {\r\n                apiNetworkError: true,\r\n            }\r\n        case 'REQUEST_STARTED':\r\n            return {\r\n                apiLoading: true,\r\n            }\r\n        case 'REQUEST_SUCCESSFUL':\r\n            return {\r\n                ...state,\r\n                conceptWithDetails: action.payload,\r\n                apiLoading: false,\r\n                apiServerError: false,\r\n                apiNetworkError: false,\r\n            }\r\n        case 'SET_CONCEPT_DETAILS': {\r\n            return {\r\n                ...state,\r\n                perspectivesRelaions: action.payload.perspectivesRelaions,\r\n                authors: action.payload.authors,\r\n                concept: action.payload.concepts,\r\n                keywords: action.payload.keywords,\r\n                perspectivesDetail:action.payload.perspectivesDetail\r\n                //keywordIds:\r\n            }\r\n        }\r\n        case 'SET_DETAILED_PERSPECTIVE':{\r\n            return{\r\n                ...state,\r\n                perspectivesDetail:action.payload\r\n            }\r\n        }\r\n        case 'setPerspectiveIds': {\r\n            return {\r\n                ...state,\r\n                perspectiveIds: action.payload\r\n            }\r\n        }\r\n        case 'sortByAuthorLast': {\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload\r\n            }\r\n        }\r\n        case 'sortByKeyword': {\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload.sortBy,\r\n                sortByKeywordId: action.payload.sortByKeywordId,\r\n                all: action.payload.all\r\n\r\n            }\r\n        }\r\n        case 'SHOW_ALL_PERSPECTIVE': {\r\n            return {\r\n                ...state,\r\n                all: action.payload\r\n            }\r\n        }\r\n        case 'SET_PERSPECTIVE_LIKE': {\r\n            let perspectives = state.perspectives;\r\n            perspectives[action.payload.id].loves = action.payload.loves;\r\n            perspectives[action.payload.id].isLike = action.payload.isLike;\r\n            return {\r\n                ...state,\r\n                perspectives: perspectives\r\n            }\r\n        }\r\n        case 'SET_IS_LIKE': {\r\n            return {\r\n                ...state,\r\n                isLike: action.payload\r\n            }\r\n        }\r\n\r\n        // case \"GET_CONCEPT_DETAILS\":\r\n        //     // console.log(\"Dispatch Called!\");\r\n        //     return {\r\n        //         ...state,\r\n        //         conceptsWithDetails: [...action.payload]\r\n        //     }\r\n        // case \"GET_CONCEPT_KEYWORDS\":\r\n        //     return {\r\n        //         ...state,\r\n        //         keywords: [...action.payload],\r\n        //     }\r\n        // case \"GET_CONCEPT_PERSPECTIVEIDS\":\r\n        //     return {\r\n        //         ...state,\r\n        //         perspectiveids: [...action.payload]\r\n        //     }\r\n        // case \"REFRESH_CONCEPT_PAGE\":\r\n        //     return {\r\n        //         ...state,\r\n\r\n        //     }\r\n        // case 'FLUSH_CONCEPT':\r\n        //     return {\r\n        //         loading: true\r\n        //     }\r\n        case 'GET_LIST_RELATED':\r\n            return {\r\n                ...state,\r\n                listRelatedData: action.payload,\r\n            }\r\n        // case 'LOADING_FALSE':\r\n        //     console.log(\"Loading False\")\r\n        //     return {\r\n        //         ...state,\r\n        //         loading: false\r\n        //     }\r\n        // case 'LOADING_TRUE':\r\n        //     console.log(\"Loaing True\")\r\n        //     return {\r\n        //         loading: true,\r\n        //     }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    conceptClustersWithDetails: [],\r\n    conceptClusterConceptsDiscrete: [],\r\n    authors:{},\r\n    concepts:{},\r\n    perspective:{},\r\n    keywords:{},\r\n    conceptCluster:{},\r\n    authorClicked: false,\r\n    conceptClicked: true,\r\n    loading: true,\r\n    apiLoading: false,\r\n    apiServerError: false,\r\n    apiNetworkError: false,\r\n    conceptClusterWithDetails: {}\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case 'CONCEPT_CLUSTER_DETAIL':{\r\n            let conceptCluster=action.payload.conceptCluster[Object.keys(action.payload.conceptCluster)[0]]\r\n            return{\r\n                ...state,\r\n                authors:action.payload.authors,\r\n                concepts:action.payload.concepts,\r\n                perspective:action.payload.perspectives,\r\n                conceptCluster:conceptCluster,\r\n                keywords:action.payload.keywords\r\n            }\r\n        }\r\n        case 'CLICKED_STATE':{\r\n            return{\r\n                ...state,\r\n                authorClicked:action.payload.authorClicked,\r\n                conceptClicked:action.payload.conceptClicked\r\n            }\r\n        }\r\n        case 'CONCEPT_CLUSTER_PERSPECTIVE_LIKE':{\r\n            let perspectives = state.perspective;\r\n            perspectives[action.payload.id].loves = action.payload.loves;\r\n            perspectives[action.payload.id].isLike = action.payload.isLike;\r\n            return{\r\n                ...state,\r\n                perspective: perspectives\r\n            }\r\n        }\r\n        case 'SERVER_ERROR':\r\n            return {\r\n                apiServerError: true,\r\n            }\r\n        case 'NETWORK_ERROR':\r\n            return {\r\n                apiNetworkError: true,\r\n            }\r\n        case 'REQUEST_STARTED':\r\n            return {\r\n                apiLoading: true,\r\n            }\r\n        case 'REQUEST_SUCCESSFUL':\r\n            return {\r\n                ...state,\r\n                conceptClusterWithDetails: action.payload,\r\n                apiLoading: false,\r\n                apiServerError: false,\r\n                apiNetworkError: false,\r\n            }\r\n        case \"GET_CONCEPT_CLUSTER_DETAILS\":\r\n            // console.log(\"Dispatch Called!\");\r\n            return {\r\n                ...state,\r\n                conceptClustersWithDetails: [...action.payload]\r\n            }\r\n        case \"GET_CONCEPT_CLUSTER_CONCEPTS_DISCRETE\":\r\n            return {\r\n                ...state,\r\n                conceptClusterConceptsDiscrete: [...action.payload],\r\n            }\r\n        case 'FLUSH_CONCEPT_CLUSTER':\r\n            return {\r\n                loading: true,\r\n            }\r\n        // case \"GET_CONCEPT_PERSPECTIVEIDS\":\r\n        //     return {\r\n        //         ...state,\r\n        //         perspectiveids: [...action.payload]\r\n        //     }\r\n        case \"LOADING_FALSE\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { stat } from \"fs\";\r\n\r\nconst initialState = {\r\n    authorsWithDetails: {},\r\n    authorBioHeadings: {},\r\n    authorBooks: {},\r\n    authorPerspectives:{},\r\n    authorGroups:{},\r\n    concepts:{},\r\n    author:{},\r\n    apiLoading: false,\r\n    apiServerError: false,\r\n    apiNetworkError: false,\r\n    author_authors_apiLoading: false,\r\n    author_authors_apiServerError: false,\r\n    author_authors_apiNetworkError: false,\r\n    author_authors: {\r\n    AuthorInfluenceAuthors: [],\r\n    AuthorConvoAuthors: [],\r\n    }\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case 'AUTHOR_DETAILS':{\r\n            let author=action.payload.authors[Object.keys(action.payload.authors)[0]]\r\n            return{\r\n                ...state,\r\n                authorPerspectives:action.payload.perspectives,\r\n                authorBioHeadings:action.payload.AuthorBioHeadings,\r\n                authorGroups:action.payload.AuthorGroups,\r\n                author:author,\r\n                concepts:action.payload.concepts,\r\n                authorBooks:action.payload.books\r\n            }\r\n        }\r\n        case 'AUTHOR_PERSPECTIVE_LIKE':{\r\n            let perspectives = state.authorPerspectives;\r\n            perspectives[action.payload.id].loves = action.payload.loves;\r\n            perspectives[action.payload.id].isLike = action.payload.isLike;\r\n            return{\r\n                ...state,\r\n                authorPerspectives: perspectives\r\n            }\r\n        }\r\n        case 'SERVER_ERROR':\r\n            return {\r\n                ...state,\r\n                apiServerError: true,\r\n            }\r\n        case 'NETWORK_ERROR':\r\n            return {\r\n                ...state,\r\n                apiNetworkError: true,\r\n            }\r\n        case 'REQUEST_STARTED':\r\n            return {\r\n                ...state,\r\n                apiLoading: true,\r\n            }\r\n        case \"GET_AUTHOR_DETAILS\":\r\n            return {\r\n                ...state,\r\n                authorsWithDetails: action.payload,\r\n                apiLoading: false,\r\n                apiServerError: false,\r\n                apiNetworkError: false,\r\n            }\r\n        case \"GET_AUTHOR_AUTHORS_PENDING\":\r\n            return {\r\n                ...state,\r\n                author_authors_apiLoading: true,\r\n            }\r\n        case 'GET_AUTHOR_AUTHORS_SUCCESS':\r\n            // console.log('reducer get author success')\r\n            return {\r\n                ...state,\r\n                author_authors_apiLoading: false,\r\n                author_authors_apiServerError: false,\r\n                author_authors_apiNetworkError: false,\r\n                author_authors: action.payload\r\n            }\r\n        case 'GET_AUTHOR_AUTHORS_SERVER_ERROR':\r\n            return {\r\n                ...state,\r\n                author_authors_apiServerError: true,\r\n                author_authors_apiLoading: false,\r\n            }\r\n        case 'GET_AUTHOR_AUTHORS_NETWORK_ERROR':\r\n            return {\r\n                ...state,\r\n                author_authors_apiNetworkrError: true,\r\n                author_authors_apiLoading: false,\r\n            }\r\n        case \"GET_AUTHOR_BIO\":\r\n            // console.log(\"Get AuthorBio dispatch called in reducer catching\");\r\n            return {\r\n                ...state,\r\n                authorBioData: [...action.payload]\r\n            }\r\n        case \"GET_AUTHOR_BOOKS\":\r\n            // console.log(\"Get AuthorBooks dispatch called in reducer catching\");\r\n            return {\r\n                ...state,\r\n                authorBooks: [...action.payload]\r\n            }\r\n        case 'GET_AUTHOR_INFLUENCED_BY_AUTHORS':\r\n            return {\r\n                ...state,\r\n                authorInfluencedByAuthors: [...action.payload]\r\n            }\r\n        case 'GET_AUTHOR_INFLUENCED_ON_AUTHORS':\r\n            return {\r\n                ...state,\r\n                authorInfluencedOnAuthors: [...action.payload]\r\n            }\r\n        case 'GET_AUTHOR_CONVO_WITH_AUTHORS':\r\n            return {\r\n                ...state,\r\n                authorConvoWithAuthors: [...action.payload]\r\n            }\r\n        case 'FLUSH_AUTHOR':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case 'LOADING_FALSE':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    keywordsForPerspectiveId: [],\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case \"GET_SINGLE_CONCEPT_KEYWORDS\":\r\n            return {\r\n                ...state,\r\n                keywordsForPerspectiveId: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    authorClustersWithDetails: [],\r\n    authorClusterConceptsDiscrete: [],\r\n    authorCluster: {},\r\n    perspectives: [],\r\n    authorClicked: false,\r\n    conceptClicked: true,\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case 'CLICKED_STATE': {\r\n            return {\r\n                ...state,\r\n                authorClicked: action.payload.authorClicked,\r\n                conceptClicked: action.payload.conceptClicked\r\n            }\r\n        }\r\n        case 'AUTHOR_CLUSTER_PERSPECTIVE_LIKE': {\r\n            let perspectives = state.authorCluster;\r\n            perspectives[action.payload.id].loves = action.payload.loves;\r\n            perspectives[action.payload.id].isLike = action.payload.isLike;\r\n            return {\r\n                ...state,\r\n                authorCluster: perspectives\r\n            }\r\n        }\r\n        case \"GET_AUTHOR_CLUSTER_DETAILS\":\r\n            return {\r\n                ...state,\r\n                authorClustersWithDetails: [...action.payload.data],\r\n                authorCluster: action.payload.entities.authorCluster,\r\n                perspectives: [...action.payload.result]\r\n            }\r\n        case \"GET_AUTHOR_CLUSTER_CONCEPTS_DISCRETE\":\r\n            return {\r\n                ...state,\r\n                authorClusterConceptsDiscrete: [...action.payload],\r\n            }\r\n\r\n        case 'FLUSH_AUTHOR_CLUSTER':\r\n            return {\r\n\r\n            }\r\n        case \"GET_CONCEPT_PERSPECTIVEIDS\":\r\n            return {\r\n                ...state,\r\n                perspectiveids: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from \"./auth\";\r\nimport navbar from \"./navbar\";\r\nimport concepts from \"./concepts\";\r\nimport conceptClusters from \"./conceptClusters\";\r\nimport author from \"./author\";\r\nimport keyword from './keyword';\r\nimport autherCluster from \"./autherCluster\";\r\nexport default combineReducers({\r\n    auth,\r\n    concepts,\r\n    navbar,\r\n    keyword,\r\n    author,\r\n    conceptClusters,\r\n    autherCluster,\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport setAuthorizationToken from \"./utils/setAuthorizationToken\";\r\nimport combineReducers from \"./reducers\";\r\nimport { setCurrentUser } from './actions/loginActions';\r\nimport jwt from \"jsonwebtoken\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n//import { PersistGate } from 'redux-persist/integration/react';\r\n//import configureStore from './store/configureStore';\r\n//const {store,persistor}=configureStore();\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(combineReducers, composeEnhancers(applyMiddleware(thunk)));\r\nif (localStorage.jwtToken) {\r\n    setAuthorizationToken(localStorage.jwtToken);\r\n    store.dispatch(setCurrentUser(jwt.decode(localStorage.jwtToken)));\r\n}\r\n\r\nReactDOM.render(<Provider store={store}>\r\n    <Router>\r\n    {/*<PersistGate loading={null} persistor={persistor}>*/}\r\n        <App />\r\n   {/* </PersistGate>*/}\r\n    </Router>\r\n</Provider>, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}