{"version":3,"sources":["images/conceptionary.svg","components/AdComponent/AdComponent.js","schema/conceptSchema.js","actions/conceptsActions.js","actions/navbaractions.js","utilities/index.js","components/SocialShareButtons/ShareButtons.js","components/SocialShareButtons/TwitterSharedButton.js","components/ConceptsPage/Context/Context.js","utils/keywordsSorterFunction.js","utils/conceptsSorterFunction.js","selectors/index.js","components/ConceptsPage/ConceptsPage.js","schema/conceptClusterSchema.js","actions/conceptClustersActions.js","components/ConceptClustersPage/Context.js","components/ConceptClustersPage/ConceptClustersPage.js","components/Messages/Message.js","schema/authorClusterSchema.js","actions/autherCluster.js","components/AutherCluster/AutherCluster.js","schema/authorSchema.js","actions/authorActions.js","components/AuthorPage/AutherPage.js","utils/setAuthorizationToken.js","actions/loginActions.js","components/Login/Login.js","helpers/validateLogin.js","actions/signupActions.js","helpers/validateSignup.js","components/Signup/Signup.js","components/TopNavBar/TopNavBar.js","components/HomePage/HomePage.js","components/FileUpload/FileUpload.js","components/perspectiveDetail/perspective.js","App.js","serviceWorker.js","reducers/auth.js","reducers/navbar.js","reducers/concepts.js","reducers/conceptClusters.js","reducers/author.js","reducers/keyword.js","reducers/autherCluster.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","AdsComponent","react_default","a","createElement","class","style","display","textAlign","data-ad-format","data-ad-layout","data-ad-client","data-ad-slot","React","Component","author","schema","Entity","keyword","perspective","Author","Keywords","conceptSchema","Perspectives","axios","require","flushConceptState","dispatch","type","getAllPerspectivesByConcept","conceptId","get","concat","process","then","data","responseType","payload","perspectives","getConceptPerspectivesByKeywords","keywordId","getConceptPerspectivesByAuthor","author_lastName","catch","err","console","log","increasePerspectiveLike","id","like","post","res","isLike","decreasePerspectiveLike","sortByAuthorLast","sortBy","showAllPerspective","value","sortByKeyword","getConceptFromApi","concept","obj","Conceptobj","conceptDetailsFromApi","perspectivesRelations","normalizedData","normalize","entities","perspectivesDetail","concepts","result","error","getListRelatedByConceptId","listRelatedData","ConceptClusters","flushState","setAutherClusterSelectedItems","selectedItems","setSelectedItem","selectedItem","setSelectedCategory","selectedCategory","addTag","tag","removeTag","getAuthorGroups","name","callback","length","results","i","label","toLowerCase","startsWith","push","login","account","username","Email","password","Password","headers","Content-Type","accept","response","JSON","parse","stringify","success","userInfo","user","e","logout","signup","Username","email","temp","filters","filterobj","Promise","resolve","reject","Axios","ShareButtons","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","link","react_facebook_lib","appId","href","_ref","handleClick","onClick","backgroundColor","border","FacebookIcon","size","round","_ref2","TwitterIcon","Context","_this","state","visibility","_this2","_this$props","authors","keywords","lastName","className","marginTop","padding","borderRadius","fontSize","textTransform","pronoun","selectedOption","description","onAuthorClick","author_first","firstName","author_last","born","dob","died","dod","auth_id","color","cursor","map","k","SocialShareButtons_ShareButtons","aria-hidden","onLikeClick","loves","setState","longDescription","citation","keywordsSorter","b","conceptsSorter","getUniqueKeywords","perspectiveIds","uniqueKeysWords","uniqueKeywordNamesOnly","forEach","count","includes","sort","keywordSorterFunction","getUniqueSortedAuthors","perspectiveids","uniqueAuthorWithDetails","uniqueAuthorNames","indexOf","authorALastName","toUpperCase","authorBLastName","getUniqueConcept","authorPerspectives","uniqueConcecptObjects","helperUniqueIds","element","ConceptId","object","discrete_author_name_id","discrete_author_name","textA","textB","getSortedPerspectivesByConceptName","tempPerspectives","conceptNameA","Concept","conceptNameB","getUniqueAuthorBooks","books","authorBooks","Books","bookids","uniqueBookNameWithId","uniqueBookIds","bookid","discrete_book_id","title","getAuthorBioData","authorGroups","authorBioHeadings","AuthorGroups","uniqueBioHeadings","AuthorBioHeading","heading","values","getUniqueSortedConceptsFromConceptCluster","conceptCluster","conceptClusters","Concepts","uniqueConceptNames","sortedUniqueConcepts","getPerspectivesFromConceptCluster","authorClicked","conceptClicked","apply","toConsumableArray","perspectiveId","ConceptName","authorA","authorB","getUniqueAuthorsFromConceptCluster","conceptids","uniqueAuthors","perspecid","AuthorId","getUniqueSortedConceptNameFromAuthorCluster","autherCluster","authorCluster","uniqueConcepts","conceptid","conceptName","getDynamicSortedAuthorClusterWithDetails","copyAuthorClusterWithDetails","authorLastName","getSortedAuthorClusterWithDetailsByAuthorLast","clustersWithDetails","authorClustersWithDetails","ConceptsPage","getConcept","concept_name","query","apiLoading","apiServerError","apiNetworkError","conceptWithDetails","listRelatedLoading","listRelatedServerError","listRelatedNetworkError","navbar","UniqueKeywords","uniqueKeyWords","UniqueAuthors","authorId","all","sortByAuthor","filteredPerspectives","getFilteredPerspectives","bind","assertThisInitialized","filterConceptDefinations","onListClick","onListRelatedClick","onRelatedClick","toggleListRelated","category","concept_id","tags","listRelated","relationary_supra","relationary_thing_supra_id","match","params","queryString","location","search","queryFilters","author_group","history","nextProps","conceptsWithDetails","orignalConceptsWithDetails","loading","document","getElementById","scrollIntoView","behavior","listRelatedRole","keyword_id","rtn","keywords_id","nonFilteredPerspectives","sortByKeywordId","_this3","overflow","width","margin","react_loading_default","height","background","marginBottom","paddingLeft","marginLeft","marginRight","returnOnlyListData","returnOnlyRelationData","textDecoration","fontWeight","borderBottom","zIndex","paddingTop","ConceptsPage_Context_Context","borderLeft","borderRight","borderTop","AdComponent","listData","withRouter","connect","bindActionCreators","conceptClusterSchema","flushConceptClusterState","setClickedState","getConceptClusterFromApi","ConceptClustersPage","sortedConcepts","sortedPerspectives","cluster","groupIds","group","getConceptCluster","Redirect","to","undefined","ConceptClustersPage_Context","Message","authorClusterSchema","flushAuthorClusterState","getAuthorCluster","via","asyncToGenerator","regenerator_default","mark","_callee","rej","result1","wrap","_context","prev","next","sent","t0","stop","_x","_x2","arguments","getAuthorClusterHelper","AutherCluster","sortedConceptsNames","dynamicSortedAuthorCluster","sortedAuthorClusterDetail","authorGroup","url","pathname","split","getAuthorGroupByName","getAutherCluster","arr","authorFirstName","long_description","authorBioHeading","book","authorSchema","flushAuthorState","getAuthorInfluencedByAuthors","author_authors_details","getAuthorDetails","authorDetailsFromApi","join","author_firstName","author_image","pictureLink","getPictureLinks","AuthorPage","getAuthor","author_authors","authorInfluencedByAuthors","authorInfluencedOnAuthors","AuthorInfluenceAuthors","authorConvoWithAuthors","AuthorConvoAuthors","showBooks","sortedAuthorInfluencedByAuthors","setInitialsortedAuthorInfluencedByAuthors","sortedAuthorInfluencedOnAuthors","setInitialsortedAuthorInfluencedOnAuthors","sortedAuthorConvoWithAuthors","setInitialsortedAuthorConvoWithAuthors","index","index1","index2","UniqueConcepts","uniqueconcepts","sortedperpectives","authorBio","authorBooksById","getSortedAuthorInfluencedByAuthors","reverse","forward","reverse1","forward1","reverse2","forward2","onConceptClick","onBioClick","x","author_authors_apiLoading","author_authors_apiServerError","author_authors_apiNetworkError","bio","distinct_grouping","distinct_grouping_id","rtnArray","slice","getSortedAuthorInfluencedOnAuthors","getSortedAuthorConvoWithAuthors","totalLength","src","alt","objectFit","item","charAt","v","Link","maxHeight","minHeight","textOverflow","whiteSpace","BookDescriptions","bookDescription","source","setAuthorizationToken","token","defaults","common","setCurrentUser","userLoginRequest","userData","Access-Control-Allow-Origin","localStorage","setItem","jwt","decode","Login","errors","isLoading","onChange","onSubmit","defineProperty","target","_validateLogin","loginData","validator","isEmpty","isValid","validateLogin","preventDefault","_this$state","form","classnames","has-error","placeholder","disabled","userSignupRequest","Signup","firstname","lastname","_validateSignup","signupData","isEmail","validateSignup","fname","lname","body","server","TopNavBar","Joi","string","required","allow","toggleModalOpen","prevState","modalOpen","toggleModalSignupOpen","modalSignupOpen","validate","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","details","Symbol","iterator","done","path","message","return","handleLoginChange","input","currentTarget","errorMessage","validateProperty","objectSpread","handleSubmit","isSignup","loginStatus_admin","onTagsChanged","searchCategory","suggestions","onInputChanged","handleDelete","splice","handleAddition","toString","loadTags","cb","loadSuggestions","tagsObject","labels","handleChange","handleTagChange","selectedTag","renderRedirect","seletedSearch","authorClusterSelectedOptions","authorClusters","dropdownData","labelsArray","loadOptionsData","loginRequestStatus_admin","userAccount","loadOptions","onSelectedCatagoryChange","searchAllConceptionary","inputValue","shuffle","alert","_this4","_this5","_this6","_this7","_this8","_this9","searchConcepts","searchConceptClusters","searchAuthorGroups","searchAuthors","searchAuthorClusters","searchAuthorGroupsNav","SIGNUP_SUCCESS","invalidLogin","window","pushState","_this10","reactstrap_es","getBackgroudColor","page","light","expand","toggle","isOpen","selected","Async_default","styles","colourStyles","isDisabled","Fragment","loggedInUserAccount_admin","index_es","open","onClose","center","boxShadow","react_loader_spinner_default","data-dismiss","aria-label","dot","alignItems",":before","content","control","option","isFocused","isSelected","chroma","alpha","css","contrast","singleValue","_ref3","userExist_admin","HomePage","conceptionary_svg","FileUpload","selectedFile","msg","skip","wait","onChangeHandler","onClickHandler","event","files","FormData","append","multiple","role","listStyleType","PerspectiveDetail","Perspective","imgURL","img","Helmet","property","createBrowserHistory","App","isAuthenticated","auth","Router","components_TopNavBar_TopNavBar","Switch","Route","exact","component","AuthorCluster","Boolean","hostname","initialState","keywordIds","conceptClustersWithDetails","conceptClusterConceptsDiscrete","conceptClusterWithDetails","authorsWithDetails","keywordsForPerspectiveId","authorClusterConceptsDiscrete","combineReducers","action","searchSuggestions","Array","isArray","keys","AuthorBioHeadings","author_authors_apiNetworkrError","authorBioData","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","jwtToken","ReactDOM","render","es","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3532fbbb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/conceptionary.4e85499c.svg\";","import React from 'react';\r\nimport AdSense from 'react-adsense';\r\nclass AdsComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <ins class=\"adsbygoogle\"\r\n            \r\n            style={{display:'block', textAlign:'center'}}\r\n            data-ad-format=\"fluid\"\r\n            data-ad-layout=\"in-article\"\r\n            data-ad-client=\"ca-pub-0123456789101112\"\r\n            data-ad-slot=\"9876543210\"></ins>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdsComponent;","import { schema } from 'normalizr';\r\nconst author = new schema.Entity('authors');\r\nconst keyword = new schema.Entity('keywords');\r\nconst perspective = new schema.Entity('perspectivesRelations', {\r\n    Author: author,\r\n    Keywords: [keyword]\r\n});\r\nexport const conceptSchema = new schema.Entity('concepts', {\r\n    Perspectives: [perspective],\r\n});\r\n","import { normalize } from 'normalizr';\r\nimport { conceptSchema } from '../schema/conceptSchema';\r\nconst axios = require('axios');\r\nexport function flushConceptState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_CONCEPT\",\r\n        })\r\n    }\r\n}\r\nexport function getAllPerspectivesByConcept(conceptId){\r\n    return dispatch=>{\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/concepts/perspective/${conceptId}`)\r\n             .then(data=>{\r\n            const {responseType}=data.data;\r\n            if(responseType==\"success\"){\r\n                dispatch({\r\n                    type:'SET_DETAILED_PERSPECTIVE',\r\n                    payload:data.data.perspectives\r\n                })\r\n            }\r\n             })\r\n    }\r\n}\r\nexport function getConceptPerspectivesByKeywords(keywordId){\r\n    return dispatch=>{\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/keywords/perspective/${keywordId}`)\r\n        .then(data=>{\r\n            const {responseType}=data.data;\r\n            if(responseType==\"success\"){\r\n                dispatch({\r\n                    type:'SET_DETAILED_PERSPECTIVE',\r\n                    payload:data.data.data.Perspectives\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\nexport function getConceptPerspectivesByAuthor(author_lastName){\r\n    return dispatch=>{\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authors/perspective/${author_lastName}`)\r\n        .then(data=>{\r\n            const {responseType}=data.data;\r\n            if(responseType==\"success\"){\r\n                dispatch({\r\n                    type:'SET_DETAILED_PERSPECTIVE',\r\n                    payload:data.data.perspectives\r\n                })\r\n            }\r\n\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\nexport function increasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"increase\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = true;\r\n                dispatch({\r\n                    type: 'SET_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function decreasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"decrease\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = false;\r\n                dispatch({\r\n                    type: 'SET_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function sortByAuthorLast(sortBy) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"sortByAuthorLast\",\r\n            payload: sortBy\r\n        })\r\n    }\r\n}\r\nexport function showAllPerspective(value) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SHOW_ALL_PERSPECTIVE\",\r\n            payload: value\r\n        })\r\n    }\r\n}\r\nexport function sortByKeyword(keyword) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"sortByKeyword\",\r\n            payload: keyword\r\n        })\r\n    }\r\n}\r\nexport function getConceptFromApi(concept) {\r\n    let obj = {}\r\n    obj.Conceptobj = concept\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REQUEST_STARTED\"\r\n        })\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/concepts/filter?relationships=true`, obj).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n                const conceptDetailsFromApi = data.data.Perspectives.perspectivesRelations;\r\n                const normalizedData = normalize(conceptDetailsFromApi, conceptSchema);\r\n                normalizedData.entities.perspectivesDetail = data.data.Perspectives.perspectivesDetail;\r\n                console.log(normalizedData);\r\n                dispatch({\r\n                    type: \"REQUEST_SUCCESSFUL\",\r\n                    payload: conceptDetailsFromApi\r\n                });\r\n                dispatch({\r\n                    type: 'setPerspectiveIds',\r\n                    payload: normalizedData.entities.concepts[normalizedData.result].Perspectives\r\n                });\r\n                dispatch({\r\n                    type: \"SET_CONCEPT_DETAILS\",\r\n                    payload: normalizedData.entities\r\n                });\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"SERVER_ERROR\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"NETWORK_ERROR\"\r\n            })\r\n            console.log('Error While fetching concept details from api', error);\r\n        })\r\n    }\r\n}\r\nexport function getListRelatedByConceptId(concept) {\r\n    let obj = {}\r\n    obj.Conceptobj = concept\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"LIST_RELATED_LOADING\"\r\n        })\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/concepts/filter?relationships=true&withListAndRelatedOnly=true&fbclid=IwAR07GYuFbZ9CIrkYUy-0gMPOQrk-aSlLSKP-w0TP1FV5noOp1T-qLJE5xOk`, obj)\r\n            .then(data => {\r\n                const { responseType } = data.data;\r\n                if (responseType == 'success') {\r\n                    let listRelatedData = data.data.data;\r\n                    listRelatedData = listRelatedData.ConceptClusters;\r\n                    dispatch({\r\n                        type: \"GET_LIST_RELATED\",\r\n                        payload: listRelatedData\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: \"LIST_RELATED_SERVER_ERROR\"\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: 'LIST_RELATED_NETWORK_ERROR'\r\n                })\r\n                console.log('Error While getting list related data', error);\r\n            })\r\n    }\r\n\r\n}\r\n","const axios = require('axios');\r\nlet request = require(\"request\");\r\nfunction shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n}\r\nexport function flushState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_NAV_BAR\",\r\n        })\r\n    }\r\n}\r\nexport function setAutherClusterSelectedItems(selectedItems) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_AUTHOR_CLUSTER_SELECTED_OPTIONS\",\r\n            payload: selectedItems,\r\n        })\r\n    }\r\n}\r\nexport function setSelectedItem(selectedItem) {\r\n    // console.log(\"set selected item called---------------->\");\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_SELECTED_OPTION\",\r\n            payload: selectedItem,\r\n        })\r\n    }\r\n}\r\nexport function setSelectedCategory(selectedCategory) {\r\n    // console.log(\"set selected category called\");\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"SET_SEARCH_CATEGORY\",\r\n            payload: selectedCategory,\r\n        })\r\n    }\r\n}\r\nexport function addTag(tag) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"ADD_TAG\",\r\n            payload: tag\r\n        });\r\n    }\r\n}\r\nexport function removeTag(id) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REMOVE_TAG\",\r\n            payload: id\r\n        });\r\n    }\r\n}\r\nexport function getAllAsync(name, data, callback) {\r\n    if (name) {\r\n        if (data.length > 0) {\r\n            let results = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                if (data[i].label.toLowerCase().startsWith(name.toLowerCase())) {\r\n                    if (results.length < 9) {\r\n                        results.push(data[i]);\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            callback(null, shuffle(results));\r\n        }\r\n        else {\r\n            callback(null, []);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAllData(inputValue) {\r\n    return \"a\";\r\n}\r\n\r\nexport function prefetchConceptsForNavbar() {\r\n    return dispatch => {\r\n        const result = [];\r\n        axios.get('http://3.84.7.245:3000/api/rest/v1/concepts?fields=id+name', {\r\n            headers: {\r\n                \"X-Requested-With\": \"XMLHttpRequest\"\r\n            }\r\n        }).then(data => {\r\n            const { responseType } = data.data;\r\n            console.log(data)\r\n            if (responseType == 'success') {\r\n                const conceptsForNavBar = data.data.data;\r\n                if (conceptsForNavBar.length > 0) {\r\n                    conceptsForNavBar.map(concept => {\r\n                        return result.push({ label: concept.name, value: concept.name, id: concept.id, category: \"Concept\", color: \"#000000\" })\r\n                    })\r\n                }\r\n                dispatch({\r\n                    type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: result\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching concepts for navbar', error);\r\n        });\r\n        //     request(options, function L(error, response, body) {\r\n        //         // console.log(\"Options\")\r\n        //         let data = JSON.parse(body);\r\n\r\n        //         if (error === null && body.error == undefined) {\r\n        //             if (data.length > 0) {\r\n        //                 let j = 0;\r\n        //                 data.map(part => {\r\n        //                     returndata[j] = { label: part.discrete_concept_name, value: part.discrete_concept_name, id: part.discrete_concept_name_id, image: part.discrete_concept_name_image, category: \"Concept\", color: \"#000000\" };\r\n        //                     j++;\r\n        //                 })\r\n        //                 dispatch({\r\n        //                     type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n        //                     payload: returndata\r\n        //                 })\r\n        //             }\r\n        //             else {\r\n        //                 dispatch({\r\n        //                     type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n        //                     payload: [],\r\n        //                 })\r\n        //             }\r\n        //         }\r\n        //         else {\r\n        //             dispatch({\r\n        //                 type: \"CONCEPTS_TRIMMED_FOR_NAVBAR\",\r\n        //                 payload: [],\r\n        //             })\r\n        //         }\r\n        //     });\r\n        // }\r\n    }\r\n}\r\nexport function prefetchConceptClustersForNavbar() {\r\n    return dispatch => {\r\n        const result = [];\r\n        axios.get('http://3.84.7.245:3000/api/rest/v1/conceptClusters?fields=id+name+pictureLink').then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n                const conceptClustersForNavBar = data.data.data;\r\n                if (conceptClustersForNavBar.length > 0) {\r\n                    conceptClustersForNavBar.map(conceptCluster => {\r\n                        result.push({ label: conceptCluster.name, value: conceptCluster.name, id: conceptCluster.id, category: \"Concept Cluster\", color: \"#FF0000\" })\r\n                    })\r\n                }\r\n                dispatch({\r\n                    type: \"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: result\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching concepts for navbar', error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function prefetchAuthorsForNavbar() {\r\n    let returndata = [];\r\n    let query = `SELECT first_name, last_name, id, dob, dod, picture_link FROM author `;\r\n    var options = {\r\n        method: 'GET',\r\n        url: 'http://3.84.7.245:3000/api/rest/v1/authors/',\r\n        form: { query: query }\r\n    };\r\n    return dispatch => {\r\n        request(options, function L(error, response, body) {\r\n            // console.log(\"Options\")\r\n            let data = JSON.parse(body);\r\n            if (error === null && body.error == undefined) {\r\n                if (data.data.length > 0) {\r\n                    let j = 0;\r\n                    data.data.map(part => {\r\n                        let label = part.firstName + \" \" + part.lastName;\r\n                        let value = label;\r\n                        let id = part.id;\r\n                        let born = part.dob;\r\n                        let died = part.dod;\r\n                        let img = part.picturelink;\r\n                        returndata[j] = { label, value, id, born, died, img, page: \"Authors\", category: \"Author\", color: \"#A52A2A\" };\r\n                        j++;\r\n                    })\r\n                    dispatch({\r\n                        type: \"AUTHORS_TRIMMED_FOR_NAVBAR\",\r\n                        payload: returndata\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: \"AUTHORS_TRIMMED_FOR_NAVBAR\",\r\n                        payload: [],\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"AUTHORS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport function prefetchAuthorClustersForNavbar() {\r\n    let returndata = [];\r\n    let query = `SELECT * FROM Conceptionary.author_relationary_distinct_groupings`;\r\n    var options = {\r\n        method: 'POST',\r\n        url: 'http://3.84.7.245:3000/api/rest/v1/authors',\r\n        headers:\r\n        {\r\n            'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n            'cache-control': 'no-cache',\r\n            'content-type': 'application/x-www-form-urlencoded'\r\n        },\r\n        form: { query: query }\r\n    };\r\n    // console.log(\"Hi\")\r\n    return dispatch => {\r\n        request(options, function L(error, response, body) {\r\n            // console.log(\"Options\")\r\n            let data = JSON.parse(body);\r\n\r\n            if (error === null && body.error == undefined) {\r\n                let query1 = `SELECT * FROM Conceptionary.author_relationary_supra where author_relationary_supra.categories is null;`;\r\n                // console.log(\"Query in getAutherClusterAsynch\", query);\r\n                var options1 = {\r\n                    method: 'POST',\r\n                    url: 'https://cors-anywhere.herokuapp.com/' + 'http://ec2-18-220-90-81.us-east-2.compute.amazonaws.com:8126/',\r\n                    headers:\r\n                    {\r\n                        'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n                        'cache-control': 'no-cache',\r\n                        'content-type': 'application/x-www-form-urlencoded'\r\n                    },\r\n                    form: { query: query1 }\r\n                };\r\n                request(options1, function L(error1, response1, body1) {\r\n                    let data1 = JSON.parse(body1);\r\n                    if (error1 === null && body1.error == undefined) {\r\n                        if (data.length > 0) {\r\n                            // console.log(\"data\", data);\r\n                            let j = 0;\r\n\r\n                            data.map(part => {\r\n                                let label = part.distinct_grouping;\r\n                                let value = label;\r\n                                let id = part.distinct_grouping_id;\r\n                                let search_display = part.search_display;\r\n                                let photograph = part.photograph;\r\n                                returndata[j] = { label, value, id, search_display, photograph, category: \"Author Cluster\", color: \"#800080\" };\r\n                                j++;\r\n                            })\r\n                        }\r\n                        if (data1.length > 0) {\r\n                            // console.log(\"Data1 \", data1)\r\n                            data1.map(part => {\r\n                                // console.log(\"@\");\r\n                                let label = part.author_supra;\r\n                                let value = label;\r\n                                let id = part.author_supra_id;\r\n                                let search_display = part.search_display;\r\n                                let categories = part.categories;\r\n                                let author_relationary_image = part.author_relationary_image;\r\n                                let via = \"supra\"\r\n                                returndata.push({ label, value, id, search_display, categories, author_relationary_image, via, category: \"Author Cluster\", color: \"#800080\" });\r\n                            })\r\n                            // console.log(\"Return data\", returndata)\r\n                            if (returndata.length > 0) {\r\n                                dispatch({\r\n                                    type: \"AUTHOR_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                                    payload: returndata\r\n                                })\r\n                            }\r\n                            else {\r\n                                dispatch({\r\n                                    type: \"AUTHORS_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                                    payload: [],\r\n                                })\r\n                            }\r\n                        }\r\n                        // console.log(\"return data authorCluster\", returndata);\r\n                    }\r\n                });\r\n\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"AUTHOR_CLUSTERS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\nexport function getConcepts() {\r\n    let query = \"Select discrete_concept_name,discrete_concept_name_id from Conceptionary.concept_discrete;\"\r\n\r\n    var options = {\r\n        method: 'POST',\r\n        url: 'http://3.84.7.245:3000/api/rest/v1/concepts',\r\n        headers:\r\n        {\r\n            'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n            'cache-control': 'no-cache',\r\n            'content-type': 'application/x-www-form-urlencoded'\r\n        },\r\n        form: { query: query }\r\n    };\r\n    return dispatch => {\r\n        request(options, function (error, response, body) {\r\n            // console.log(\"Error is :\", error);\r\n            let data = JSON.parse(body);\r\n            // console.log(\"Gulzain Re/sponse\", response);\r\n            // console.log(\"BODY_________\", data);\r\n            let returndata = [];\r\n            if (error === null && body.error == undefined) {\r\n                if (data.length > 0) {\r\n                    let j = 0;\r\n                    data.map(part => {\r\n                        returndata[j] = { label: part.discrete_concept_name, value: part.discrete_concept_name, id: part.discrete_concept_name_id };\r\n                        j++;\r\n                    })\r\n                    dispatch({\r\n                        type: \"GET_CONCEPTS_NAMES_NAVBAR\",\r\n                        payload: returndata,\r\n\r\n                    })\r\n                }\r\n            }\r\n\r\n            // if (returndata.length > 0) {\r\n            //     console.log(\"return Data\", returndata);\r\n            //     dispatch({\r\n            //         type: \"GET_RELATIONARY_SUPRA_ITEMS_NAVBAR\",\r\n            //         payload: returndata,\r\n\r\n            //     })\r\n            // }\r\n\r\n            // for (var i = 0; i < parts.length; i += 1) {\r\n            //     relationArray.push(\"\\\"\" + parts[i].relationary_supra.replaceAll(\"\\'\", \"\\\\\\'\") + \"\\\"\");\r\n            // }\r\n            // var myhtml = fs.readFileSync('splash.html');\r\n            // //console.log(termsArray);\r\n            // res.send(myhtml + \"<script>autocomplete(document.getElementById(\\\"myInput\\\"),[\" + termsArray + \"],[\" + termsArray + \"]);</script>\" + \"<script>autocomplete(document.getElementById(\\\"myAuthorInput\\\"),[\" + authorArray + \"],[\" + authorArray + \"]);</script>\" +\r\n            //     \"<script>autocomplete(document.getElementById(\\\"groupInput\\\"),[\" + groupArray + \"],[\" + valArray + \"]);</script>\" +\r\n            //     \"<script>autocomplete(document.getElementById(\\\"myListInput\\\"),[\" + listArray + \"],[\" + listArray + \"]);</script>\" +\r\n            //     \"<script>autocomplete(document.getElementById(\\\"myRelationInput\\\"),[\" + relationArray + \"],[\" + relationArray + \"]);</script>\");\r\n\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function prefetchAuthorGroupsForNavbar() {\r\n    return dispatch => {\r\n        const result = [];\r\n        axios.get('http://3.84.7.245:3000/api/rest/v1/authorGroups/all').then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const authroGroupsNavbar = data.data.data;\r\n                console.log(data.data.data)\r\n                if (authroGroupsNavbar.length > 0) {\r\n                    authroGroupsNavbar.map(conceptCluster => {\r\n                        result.push({ label: conceptCluster.name, value: conceptCluster.name, id: conceptCluster.id, category: \"Concept Cluster\", color: \"#FF0000\" })\r\n                    })\r\n                }\r\n                dispatch({\r\n                    type: \"AUTHOR_GROUPS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: result\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"AUTHOR_GROUPS_TRIMMED_FOR_NAVBAR\",\r\n                    payload: [],\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author groups for navbar', error);\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport function getAuthorGroups(name, data, callback) {\r\n\r\n    console.log(data)\r\n\r\n    if (name) {\r\n\r\n        if (data.length > 0) {\r\n            let results = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                if (data[i].label.toLowerCase().startsWith(name.toLowerCase())) {\r\n                    if (results.length < 9) {\r\n                        results.push(data[i]);\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            callback(null, results);\r\n        }\r\n        else {\r\n            callback(null, []);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function login(account) {\r\n    return (dispatch) => {\r\n        let obj = {};\r\n\r\n        obj.username = account.Email;\r\n        obj.password = account.Password\r\n\r\n        dispatch(loginRequest());\r\n\r\n        //let accountJSON = JSON.stringify(obj);\r\n        \r\n        return axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/login`, obj, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                'accept': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            let res = JSON.parse(JSON.stringify(response));\r\n            console.log(res)\r\n            console.log(res.data.success)\r\n            if (res.data.success) {\r\n                dispatch(loginSuccess(res.data.user));\r\n\r\n            } else {\r\n                dispatch(loginFailed());\r\n            }\r\n        }).catch(e => {\r\n            dispatch(loginFailed());\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function loginRequest() {\r\n    return {\r\n        type: 'LOGIN_REQUEST'\r\n    }\r\n}\r\n\r\nexport function loginSuccess(userInfo) {\r\n    return {\r\n        type: \"LOGIN_SUCCESS\",\r\n        userInfo: userInfo\r\n    }\r\n}\r\n\r\nexport function loginFailed() {\r\n    return {\r\n        type: \"LOGIN_FAILURE\"\r\n    }\r\n}\r\n\r\n//Logout \r\n\r\n\r\nexport function logout() {\r\n    return {\r\n        type: \"LOGOUT\"\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function signup(account) {\r\n    return (dispatch) => {\r\n        let obj = {};\r\n\r\n        obj.username = account.Username;\r\n        obj.email = account.Email;\r\n        obj.password = account.Password\r\n\r\n        let temp = {};\r\n        temp[\"User\"] = obj;\r\n\r\n\r\n\r\n        dispatch(signupRequest());\r\n        //console.log(accountJSON);\r\n        //let accountJSON = temp;\r\n\r\n        return axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/users`, temp, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                'accept': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            let res = JSON.parse(JSON.stringify(response));\r\n            console.log(res)\r\n            // console.log(res.data.responseType==='success')\r\n            if (res.data.responseType === 'success') {\r\n                dispatch(signupSuccess(res.data.data));\r\n            } else {\r\n                dispatch(signupFailed());\r\n            }\r\n        }).catch(e => {\r\n            dispatch(signupFailed());\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function signupRequest() {\r\n    return {\r\n        type: 'SIGNUP_REQUEST'\r\n    }\r\n}\r\n\r\n\r\nexport function signupSuccess(userInfo) {\r\n    return {\r\n        type: \"SIGNUP_SUCCESS\",\r\n        userInfo: userInfo\r\n    }\r\n}\r\n\r\nexport function signupFailed() {\r\n    return {\r\n        type: \"SIGNUP_FAILURE\"\r\n    }\r\n}\r\n","import Axios from \"axios\";\r\nexport function getAuthorGroups(filters){\r\n    let filterobj = {};\r\n    filterobj.filters = filters;\r\n    return new Promise((resolve, reject) => {\r\n        Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorGroups`, filterobj)\r\n            .then(data => {\r\n                resolve(data.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    });\r\n}","import React, { Component } from 'react';\r\n//import { ShareButton } from \"react-custom-share\";\r\nimport { FacebookProvider, Share } from 'react-facebook';\r\n\r\nimport {\r\n    FacebookIcon,TwitterIcon\r\n} from 'react-share';\r\nimport TwitterSharedButton from './TwitterSharedButton';\r\nclass ShareButtons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        const { id } = this.props;\r\n        const link = `http://conceptionary-frontend.s3-website.us-east-2.amazonaws.com/perspective/${id}`\r\n        return (\r\n          <div>\r\n          <FacebookProvider appId=\"930857800581355\">\r\n            <Share href={link}>\r\n              {({ handleClick}) => (\r\n               \r\n             <button type=\"button\" onClick={handleClick} style={{backgroundColor: 'transparent',border: 'none'}}> <FacebookIcon size={32} round={true} /></button>\r\n              )}\r\n            </Share>\r\n          </FacebookProvider>\r\n          <FacebookProvider appId=\"930857800581355\">\r\n            <Share href={link}>\r\n              {({ handleClick}) => (\r\n               \r\n             <button type=\"button\" onClick={handleClick} style={{backgroundColor: 'transparent',border: 'none'}}> <TwitterIcon size={32} round={true} /></button>\r\n              )}\r\n            </Share>\r\n          </FacebookProvider>\r\n     \r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default ShareButtons;\r\n","import React, { Component } from 'react';\r\n//import { ShareButton } from \"react-custom-share\";\r\nimport ShareLink from 'react-twitter-share-link'\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport './TwitterShareButton.css'\r\nimport {\r\n    TwitterShareButton,TwitterIcon\r\n} from 'react-share';\r\nclass TwitterSharedButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n   \r\n    render() {\r\n        const { id } = this.props;\r\n        const links = `http://conceptionary-frontend.s3-website.us-east-2.amazonaws.com/perspective/${id}`\r\n        return (\r\n        //     <ShareLink link={links}>\r\n        //         {link => (\r\n        //         <a href={link} target='_blank'>Share this on Twitter</a>\r\n        //         )}\r\n        //  </ShareLink>\r\n            <div>\r\n            <Helmet>\r\n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n                <meta name=\"twitter:site\" content=\"@nytimes\" />\r\n                <meta name=\"twitter:creator\" content=\"@SarahMaslinNir\" />\r\n                <meta name=\"twitter:title\" content=\"Parade of Fans for Houston’s Funeral\" />\r\n                <meta name=\"twitter:description\" content=\"NEWARK - The guest list and parade of limousines with celebrities emerging from them seemed more suited to a red carpet event in Hollywood or New York than than a gritty stretch of Sussex Avenue near the former site of the James M. Baxter Terrace public housing project here.\" />\r\n                <meta name=\"twitter:image\" content=\"http://graphics8.nytimes.com/images/2012/02/19/us/19whitney-span/19whitney-span-articleLarge.jpg\" />\r\n            </Helmet>\r\n        <TwitterShareButton\r\n            url={links}\r\n            title=\"Hello World. \\n My name is Jennifer. \\n What is your name?\"\r\n            className=\"Demo__some-network__share-button\">\r\n            <TwitterIcon\r\n            size={32}\r\n            round />\r\n      </TwitterShareButton>\r\n      </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default TwitterSharedButton;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router'\r\nimport ShareButtons from '../../SocialShareButtons/ShareButtons';\r\nimport './Context.css'\r\nclass Context extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visibility: 'none',\r\n        }\r\n    }\r\n    render() {\r\n        const { data, authors, keywords } = this.props;\r\n        return (\r\n            <div id={authors[data.Author].lastName} className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\", textAlign:'justify'}} >\r\n                <b style={{fontSize:'18px',textTransform:'capitalize'}}>{data.pronoun}{\" \"} {this.props.selectedOption.label}</b>{\" is \"}{data.description}\r\n                <div onClick={() => this.props.onAuthorClick({ author_first: authors[data.Author].firstName, author_last: authors[data.Author].lastName, born: authors[data.Author].dob, died: authors[data.Author].dod, auth_id: data.Author })} style={{ color: \"red\", cursor: \"pointer\" }}><b>{authors[data.Author].firstName}{\" \"}{authors[data.Author].lastName}</b></div>\r\n                <div ><b>Key Note : </b>&nbsp;\r\n                   {\r\n                        data.Keywords && data.Keywords.length > 0 && data.Keywords.map(k => {\r\n                            return <span style={{ color: \"red\" }}>{data.Keywords.length > 1 && (keywords[k].name + \" | \")}{data.Keywords.length < 2 && (keywords[k].name + \" \")}</span>\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-5 col-sm-5 col-xs-5 pt-3\">\r\n                        <ShareButtons id={data.id} ></ShareButtons>\r\n                    </div>\r\n                    <div className=\"col-md-7 col-sm-7 col-xs-7 text-right \">\r\n                        {/* <div className=\"text-right\" > */}\r\n                            <i style={{ color: data.isLike ? \"red\" : \"grey\",fontSize:'20px' }} className=\"fa fa-thumbs-o-up \" aria-hidden=\"true\" onClick={() => this.props.onLikeClick(data.id)}></i>&nbsp;[{data.loves ? this.props.data.loves : \"0\"}]&nbsp;&nbsp; <span className=\"contextbutton\" onClick={() => {\r\n                                this.setState({\r\n                                    visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                                    // id: data.id,\r\n                                })\r\n                            }} style={{ cursor: \"pointer\" }}><span className=\"fa fa-ellipsis-h\" style={{fontSize:'10px',color:'black'}}></span></span>\r\n                        <div id={data.id} style={{ marginTop: \"20px\", display: [this.state.visibility] }} >{this.props.data.longDescription}<div style={{ backgroundColor: \"#DCDCDC\" }}>{this.props.data.citation}</div></div>\r\n                        \r\n                        {/* </div> */}\r\n                    </div>\r\n                    \r\n                </div>\r\n                {/* <div className=\"text-right\" >\r\n                    <i style={{ color: data.isLike ? \"red\" : \"grey\",fontSize:'20px' }} className=\"fa fa-thumbs-o-up \" aria-hidden=\"true\" onClick={() => this.props.onLikeClick(data.id)}></i>&nbsp;[{data.loves ? this.props.data.loves : \"0\"}]&nbsp;&nbsp; <span className=\"contextbutton\" onClick={() => {\r\n                        this.setState({\r\n                            visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                            // id: data.id,\r\n                        })\r\n                    }} style={{ cursor: \"pointer\" }}><i className=\"fa fa-ellipsis-h\" style={{fontSize:'20px'}}></i></span>\r\n                <div id={data.id} style={{ marginTop: \"20px\", display: [this.state.visibility] }} >{this.props.data.longDescription}<div style={{ backgroundColor: \"#DCDCDC\" }}>{this.props.data.citation}</div></div>\r\n                \r\n                </div>\r\n                \r\n                <div>\r\n                    <ShareButtons id={data.id}></ShareButtons>\r\n                </div> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// Context.PropTypes = {\r\n//     data: PropTypes.object.isRequired,\r\n//     selectedOption: PropTypes.object.isRequired,\r\n//     onAuthorClick: PropTypes.func.isRequired,\r\n// }\r\nexport default Context;","const keywordsSorter = (a, b) => {\r\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n        return -1;\r\n    }\r\n    if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport default keywordsSorter;","const conceptsSorter = (a, b) => {\r\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n        return -1;\r\n    }\r\n    if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport default conceptsSorter;","import keywordSorterFunction from '../utils/keywordsSorterFunction';\r\nimport conceptsSorter from '../utils/conceptsSorterFunction';\r\nexport function getUniqueKeywords(state) {\r\n    let perspectivesRelations = state.concepts.perspectivesRelations;\r\n    let perspectiveIds = state.concepts.perspectiveIds;\r\n    let keywords = state.concepts.keywords;\r\n    if (perspectivesRelations && perspectiveIds && perspectiveIds.length > 0 && keywords) {\r\n        const uniqueKeysWords = [];\r\n        const uniqueKeywordNamesOnly = [];\r\n        perspectiveIds.forEach(id => {\r\n            perspectivesRelations[id].Keywords.forEach(keyword => {\r\n                keywords[keyword].count = 1;\r\n                if (!uniqueKeywordNamesOnly.includes(keywords[keyword].name)) {\r\n                    uniqueKeywordNamesOnly.push(keywords[keyword].name)\r\n                    uniqueKeysWords.push(keywords[keyword])\r\n                }\r\n                else {\r\n                    for (let i = 1; i < uniqueKeysWords.length; i++) {\r\n                        if (uniqueKeysWords[i].id === keywords[keyword].id) {\r\n                            uniqueKeysWords[i].count = uniqueKeysWords[i].count + 1;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        return uniqueKeysWords.sort(keywordSorterFunction);\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nexport function getUniqueSortedAuthors(state) {\r\n    let perspectiveids = state.concepts.perspectiveIds;\r\n    let perspectivesRelations = state.concepts.perspectivesRelations;;\r\n    let authors = state.concepts.authors;\r\n    if (perspectiveids && perspectiveids.length > 0 && authors && perspectivesRelations) {\r\n        let uniqueAuthorWithDetails = [];\r\n        let uniqueAuthorNames = [];\r\n        perspectiveids.forEach(id => {\r\n            if (!(uniqueAuthorNames.indexOf((authors[perspectivesRelations[id].Author].firstName + authors[perspectivesRelations[id].Author].lastName)) > -1)) {\r\n                uniqueAuthorNames.push((authors[perspectivesRelations[id].Author].firstName + authors[perspectivesRelations[id].Author].lastName));\r\n                uniqueAuthorWithDetails.push(authors[perspectivesRelations[id].Author]);\r\n            }\r\n        })\r\n        return uniqueAuthorWithDetails.sort(function (a, b) {\r\n            let authorALastName = a.lastName.toUpperCase();\r\n            let authorBLastName = b.lastName.toUpperCase();\r\n            return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n        });\r\n    }\r\n}\r\n\r\nexport function getUniqueConcept(state) {\r\n    let author = state.author.author;\r\n    let perspectives = state.author.authorPerspectives;\r\n    let concepts = state.author.concepts;\r\n    if (author.Perspectives && author.Perspectives.length > 0 && perspectives) {\r\n        let uniqueConcecptObjects = [];\r\n        let helperUniqueIds = [];\r\n        author.Perspectives.forEach(element => {\r\n            let count = 0;\r\n            if (!(helperUniqueIds.includes(perspectives[element].ConceptId))) {\r\n                count += 1;\r\n                let discrete_author_name_id = perspectives[element].ConceptId;\r\n                let discrete_author_name = concepts[perspectives[element].ConceptId].name;\r\n                helperUniqueIds.push(perspectives[element].ConceptId)\r\n                uniqueConcecptObjects.push({ discrete_author_name_id, discrete_author_name, count })\r\n            }\r\n            else {\r\n                uniqueConcecptObjects.forEach(object => {\r\n                    if (object.discrete_author_name_id == perspectives[element].ConceptId) {\r\n                        object.count += 1;\r\n                    }\r\n                })\r\n            }\r\n        });\r\n        uniqueConcecptObjects.sort(function (a, b) {\r\n            var textA = a.discrete_author_name.toUpperCase();\r\n            var textB = b.discrete_author_name.toUpperCase();\r\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n        });\r\n        return uniqueConcecptObjects;\r\n    }\r\n}\r\n\r\nexport function getSortedPerspectivesByConceptName(state) {\r\n    let author = state.author.author;\r\n    let perspectives = state.author.authorPerspectives;\r\n    let concepts = state.author.concepts;\r\n    if (author.Perspectives && author.Perspectives.length > 0 && perspectives) {\r\n        let tempPerspectives = [];\r\n        author.Perspectives.forEach(id => {\r\n            tempPerspectives.push(perspectives[id]);\r\n        })\r\n        return tempPerspectives.sort((a, b) => {\r\n            let conceptNameA = concepts[a.Concept].name.toLowerCase();\r\n            let conceptNameB = concepts[b.Concept].name.toLowerCase();\r\n            return conceptNameA < conceptNameB ? -1 : (conceptNameA > conceptNameB) ? 1 : 0;\r\n        })\r\n    }\r\n}\r\nexport function getUniqueAuthorBooks(state) {\r\n    let author = state.author.author;\r\n    let books = state.author.authorBooks;\r\n    if (author && author.Books && author.Books.length > 0 && books) {\r\n        let bookids = author.Books;\r\n        let uniqueBookNameWithId = [];\r\n        let uniqueBookIds = [];\r\n        bookids.forEach(bookid => {\r\n            if (!(uniqueBookIds.indexOf(books[bookid].id) > -1)) {\r\n                uniqueBookIds.push(books[bookid].id);\r\n                let discrete_book_id = books[bookid].id;\r\n                let title = books[bookid].title;\r\n                uniqueBookNameWithId.push({ discrete_book_id, title });\r\n            }\r\n        })\r\n        return uniqueBookNameWithId;\r\n    }\r\n}\r\nexport function getAuthorBioData(state) {\r\n    let authorGroups = state.author.authorGroups;\r\n    let authorBioHeadings = state.author.authorBioHeadings;\r\n    let author = state.author.author;\r\n    if (author && author.AuthorGroups && author.AuthorGroups.length > 0) {\r\n        let data = [];\r\n        let uniqueBioHeadings = [];\r\n        author.AuthorGroups.map(id => {\r\n            if (authorGroups[id].AuthorBioHeading) {\r\n                if (!uniqueBioHeadings.includes(authorBioHeadings[authorGroups[id].AuthorBioHeading].name)) {\r\n                    uniqueBioHeadings.push(authorBioHeadings[authorGroups[id].AuthorBioHeading].name);\r\n                    data.push({ heading: authorBioHeadings[authorGroups[id].AuthorBioHeading].name, values: [{ name: authorGroups[id].name, id: authorGroups[id].id }] });\r\n                }\r\n                else {\r\n                    data.forEach(element => {\r\n                        if (element.heading === authorBioHeadings[authorGroups[id].AuthorBioHeading].name) {\r\n                            element.values.push({ name: authorGroups[id].name, id: authorGroups[id].id });\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        return data;\r\n    }\r\n    return;\r\n}\r\n\r\nexport function getUniqueSortedConceptsFromConceptCluster(state) {\r\n    let conceptCluster = state.conceptClusters.conceptCluster;\r\n    let concepts = state.conceptClusters.concepts;\r\n    if (conceptCluster && conceptCluster.Concepts && conceptCluster.Concepts.length > 0 && concepts) {\r\n        let uniqueConceptNames = [];\r\n        let sortedUniqueConcepts = [];\r\n        conceptCluster.Concepts.map(id => {\r\n            if (!uniqueConceptNames.includes(concepts[id].name)) {\r\n                uniqueConceptNames.push(concepts[id].name);\r\n                sortedUniqueConcepts.push(concepts[id]);\r\n            }\r\n        })\r\n        return sortedUniqueConcepts.sort((a, b) => {\r\n            let conceptNameA = a.name.toLowerCase();\r\n            let conceptNameB = b.name.toLowerCase();\r\n            return conceptNameA < conceptNameB ? -1 : (conceptNameA > conceptNameB) ? 1 : 0;\r\n        })\r\n    }\r\n}\r\n\r\nexport function getPerspectivesFromConceptCluster(state) {\r\n    let conceptCluster = state.conceptClusters.conceptCluster;\r\n    let concepts = state.conceptClusters.concepts;\r\n    let perspective = state.conceptClusters.perspective;\r\n    let authorClicked = state.conceptClusters.authorClicked;\r\n    let conceptClicked = state.conceptClusters.conceptClicked;\r\n    let authors = state.conceptClusters.authors;\r\n    if (conceptCluster && conceptCluster.Concepts && conceptCluster.Concepts.length > 0 && concepts && perspective) {\r\n        const perspectives = [];\r\n        let conceptids = conceptCluster.Concepts;\r\n        conceptids.forEach(id => {\r\n            perspectives.push(...concepts[id].Perspectives.map(perspectiveId => {\r\n                perspective[perspectiveId].ConceptName = concepts[id].name;\r\n                return perspective[perspectiveId];\r\n            }));\r\n        })\r\n        if (authorClicked) {\r\n            perspectives.sort(function (a, b) {\r\n                var textA = authors[a.Author].lastName.toUpperCase();\r\n                var textB = authors[b.Author].lastName.toUpperCase();\r\n                return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n            });\r\n        }\r\n        else if (conceptClicked) {\r\n            perspectives.sort(function (a, b) {\r\n                var authorA = authors[a.Author].lastName.toUpperCase();\r\n                var authorB = authors[b.Author].lastName.toUpperCase();\r\n                var textA = a.ConceptName.toUpperCase();\r\n                var textB = b.ConceptName.toUpperCase();\r\n                if (textA === textB) {\r\n                    return (authorA < authorB) ? -1 : (authorA > authorB) ? 1 : 0;\r\n                }\r\n                else {\r\n                    return (textA < textB) ? -1 : 1;\r\n                }\r\n            });\r\n\r\n        }\r\n        return perspectives;\r\n    }\r\n}\r\n\r\nexport function getUniqueAuthorsFromConceptCluster(state) {\r\n    let concepts = state.conceptClusters.concepts;\r\n    let authors = state.conceptClusters.authors;\r\n    let perspective = state.conceptClusters.perspective;\r\n    let conceptCluster = state.conceptClusters.conceptCluster;\r\n    if (conceptCluster && conceptCluster.Concepts && concepts && perspective && authors) {\r\n        const conceptids = conceptCluster.Concepts;\r\n        const uniqueAuthors = [];\r\n        const uniqueAuthorNames = [];\r\n        conceptids.forEach(id => {\r\n            concepts[id].Perspectives.forEach(perspecid => {\r\n                if (!uniqueAuthorNames.includes(perspective[perspecid].AuthorId)) {\r\n                    uniqueAuthorNames.push(perspective[perspecid].AuthorId)\r\n                    uniqueAuthors.push({\r\n                        id: perspective[perspecid].AuthorId,\r\n                        firstName: authors[perspective[perspecid].Author].firstName,\r\n                        lastName: authors[perspective[perspecid].Author].lastName\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        uniqueAuthors.sort(function (a, b) {\r\n            let authorALastName = a.lastName.toUpperCase();\r\n            let authorBLastName = b.lastName.toUpperCase();\r\n            return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n        })\r\n        return uniqueAuthors;\r\n    }\r\n}\r\n\r\nexport function getUniqueSortedConceptNameFromAuthorCluster(state) {\r\n    let perspectives = state.autherCluster.perspectives;\r\n    let authorCluster = state.autherCluster.authorCluster;\r\n    if (perspectives && perspectives.length > 0 && authorCluster) {\r\n        let uniqueConceptNames = [];\r\n        let uniqueConcepts = [];\r\n        perspectives.map(conceptid => {\r\n            if (!uniqueConceptNames.includes(authorCluster[conceptid].conceptName)) {\r\n                uniqueConceptNames.push(authorCluster[conceptid].conceptName);\r\n                uniqueConcepts.push({ name: authorCluster[conceptid].conceptName, id: authorCluster[conceptid].conceptId });\r\n            }\r\n        })\r\n        return uniqueConcepts.sort(conceptsSorter);\r\n    }\r\n}\r\n\r\nexport function getDynamicSortedAuthorClusterWithDetails(state) {\r\n    let perspectives = state.autherCluster.perspectives;\r\n    let authorCluster = state.autherCluster.authorCluster;\r\n    let authorClicked = authorCluster.authorClicked;\r\n    let conceptClicked = authorCluster.conceptClicked;\r\n    if (perspectives && perspectives.length > 0 && authorCluster) {\r\n        let copyAuthorClusterWithDetails = [];\r\n        perspectives.forEach(id => {\r\n            copyAuthorClusterWithDetails.push(authorCluster[id]);\r\n        })\r\n        if (authorClicked) {\r\n            copyAuthorClusterWithDetails.sort(function (a, b) {\r\n                var textA = a.authorLastName.toUpperCase();\r\n                var textB = b.authorLastName.toUpperCase();\r\n                return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n            });\r\n        }\r\n        else if (conceptClicked) {\r\n            copyAuthorClusterWithDetails.sort(function (a, b) {\r\n                var authorA = a.authorLastName.toUpperCase();\r\n                var authorB = b.authorLastName.toUpperCase();\r\n                var textA = a.conceptName.toUpperCase();\r\n                var textB = b.conceptName.toUpperCase();\r\n                if (textA === textB) {\r\n                    return (authorA < authorB) ? -1 : (authorA > authorB) ? 1 : 0;\r\n                }\r\n                else {\r\n                    if (textA === \"CULTURE\") {\r\n                        console.log(\"not author sorting\");\r\n                    }\r\n                    else {\r\n                        if (textA === \"CULTURE\") {\r\n                            console.log(\"not author sorting\");\r\n                        }\r\n                        return (textA < textB) ? -1 : 1;\r\n                    }\r\n                    // return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n                }\r\n            });\r\n        }\r\n        return copyAuthorClusterWithDetails;\r\n    }\r\n}\r\n\r\nexport function getSortedAuthorClusterWithDetailsByAuthorLast(state) {\r\n    let clustersWithDetails = state.autherCluster.authorClustersWithDetails;\r\n    if (clustersWithDetails && clustersWithDetails.length > 0) {\r\n        let copyAuthorClusterWithDetails = [...clustersWithDetails];\r\n        copyAuthorClusterWithDetails.sort(function (a, b) {\r\n            var textA = a.authorLastName.toUpperCase();\r\n            var textB = b.authorLastName.toUpperCase();\r\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n        });\r\n        return copyAuthorClusterWithDetails;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport AdSense from 'react-adsense';\r\nimport \"./ConceptsPage.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport ReactLoading from 'react-loading';\r\nimport AdsComponent from '../AdComponent/AdComponent';\r\nimport scrollToElement from 'scroll-to-element';\r\nimport {\r\n    flushConceptState, getListRelatedByConceptId,\r\n    getConceptFromApi,\r\n    increasePerspectiveLike,\r\n    decreasePerspectiveLike,\r\n    sortByKeyword,\r\n    showAllPerspective,\r\n    sortByAuthorLast,\r\n    getConceptPerspectivesByAuthor,\r\n    getConceptPerspectivesByKeywords,\r\n    getAllPerspectivesByConcept\r\n} from \"../../actions/conceptsActions\";\r\nimport { setSelectedCategory, setSelectedItem, addTag } from \"../../actions/navbaractions\";\r\nimport { getAuthorGroups } from \"../../utilities\";\r\nimport Context from \"./Context/Context\";\r\nimport { getUniqueKeywords, getUniqueSortedAuthors } from '../../selectors';\r\nimport queryString from \"query-string\";\r\nimport Axios from 'axios';\r\nclass ConceptsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: \"\",\r\n            filters: false,\r\n            apiLoading: this.props.concepts.apiLoading,\r\n            apiServerError: this.props.concepts.apiServerError,\r\n            apiNetworkError: this.props.concepts.apiNetworkError,\r\n            conceptWithDetails: this.props.concepts.conceptWithDetails,\r\n            listRelatedData: this.props.concepts.listRelatedData,\r\n            listRelatedLoading: this.props.concepts.listRelatedLoading,\r\n            listRelatedServerError: this.props.concepts.listRelatedServerError,\r\n            listRelatedNetworkError: this.props.concepts.listRelatedNetworkError,\r\n            selectedOption: this.props.navbar.selectedOption,\r\n            perspectives: this.props.concepts.perspectives,\r\n            keywords: this.props.concepts.keywords,\r\n            concept: this.props.concepts.concept,\r\n            authors: this.props.concepts.authors,\r\n            perspectivesRelations: this.props.concepts.perspectivesRelations,\r\n            perspectivesDetail: this.props.concepts.perspectivesDetail,\r\n            UniqueKeywords: this.props.uniqueKeyWords,\r\n            UniqueAuthors: this.props.uniqueAuthors,\r\n            visibility: \"hidden\",\r\n            keywordId: null,\r\n            authorId: null,\r\n            id: \"\",\r\n            all: false,\r\n            sortByAuthor: null,\r\n            isLike: this.props.concepts.isLike,\r\n            filteredPerspectives: []\r\n        };\r\n        this.getFilteredPerspectives = this.getFilteredPerspectives.bind(this);\r\n        this.filterConceptDefinations = this.filterConceptDefinations.bind(this);\r\n        this.onAuthorClick = this.onAuthorClick.bind(this);\r\n        this.onListClick = this.onListClick.bind(this);\r\n        this.onListRelatedClick = this.onListRelatedClick.bind(this);\r\n        this.onRelatedClick = this.onRelatedClick.bind(this);\r\n        this.toggleListRelated = this.toggleListRelated.bind(this);\r\n        this.onLikeClick = this.onLikeClick.bind(this);\r\n        if (this.props.navbar.selectedOption) {\r\n            if (this.props.navbar.selectedOption.id) {\r\n                if (this.props.navbar.selectedOption.category == \"Concepts\") {\r\n                    let concept = {\r\n                        \"concept_id\": this.props.navbar.selectedOption.id,\r\n                        \"filters\": this.props.navbar.tags.map(tag => tag.id)\r\n                    };\r\n                    this.props.getConceptFromApi(concept);\r\n                    this.props.getListRelatedByConceptId(concept)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onListRelatedClick(listRelated) {\r\n        let label = listRelated.relationary_supra;\r\n        let value = label;\r\n        let id = listRelated.relationary_thing_supra_id;\r\n        let category = \"Concept-Clusters\";\r\n        this.props.flushConceptState()\r\n        this.props.setSelectedItem({ label, value, id, category });\r\n    }\r\n    getConcept = (concept_name) => {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/concepts?name=${concept_name}`).then(data => {\r\n                if (data.data.obj) {\r\n                    let result = data.data.obj.selectedOption;\r\n                    resolve(result);\r\n                }\r\n                resolve(null);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n    async componentWillMount() {\r\n        if (this.props.match.params.name) {\r\n            if (this.props.match.params.name && queryString.parse(this.props.location.search).filters) {\r\n                let filters = [];\r\n                let queryFilters = queryString.parse(this.props.location.search).filters;\r\n                let concept_name = this.props.match.params.name;\r\n                if (typeof queryFilters === \"string\") {\r\n                    filters.push(queryFilters);\r\n                } else {\r\n                    filters = queryFilters;\r\n                }\r\n                this.setState({\r\n                    query: concept_name,\r\n                    filters: true\r\n                })\r\n                let result = await this.getConcept(concept_name);\r\n                let author_group = await getAuthorGroups(filters);\r\n                if (result) {\r\n                    this.props.addTag(author_group);\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                } else {\r\n                    this.props.history.push('/Message');\r\n                }\r\n\r\n            } else {\r\n                let concept_name = this.props.match.params.name;\r\n                this.setState({\r\n                    query: concept_name\r\n                });\r\n                let result = await this.getConcept(concept_name);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    })\r\n                } else {\r\n                    this.props.history.push('/Message');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.selectedOption != nextProps.navbar.selectedOption) {\r\n            this.props.flushConceptState();\r\n            this.setState({\r\n                apiLoading: nextProps.concepts.apiLoading,\r\n                apiServerError: nextProps.concepts.apiServerError,\r\n                apiNetworkError: nextProps.concepts.apiNetworkError,\r\n                conceptWithDetails: nextProps.concepts.conceptWithDetails,\r\n                conceptsWithDetails: nextProps.concepts.conceptsWithDetails,\r\n                orignalConceptsWithDetails: nextProps.concepts.conceptsWithDetails,\r\n                //perspectiveids: nextProps.concepts.perspectiveids,\r\n                perspectivesRelations: nextProps.concepts.perspectivesRelations,\r\n                perspectivesDetail: nextProps.concepts.perspectivesDetail,\r\n                concept: nextProps.concepts.concept,\r\n                authors: nextProps.concepts.authors,\r\n                keywords: nextProps.concepts.keywords,\r\n                UniqueKeywords: nextProps.uniqueKeyWords,\r\n                UniqueAuthors: nextProps.uniqueAuthors,\r\n                listRelatedData: nextProps.concepts.listRelatedData,\r\n                listRelatedLoading: nextProps.concepts.listRelatedLoading,\r\n                listRelatedNetworkError: nextProps.concepts.listRelatedNetworkError,\r\n                listRelatedServerError: nextProps.concepts.listRelatedServerError,\r\n                loading: nextProps.concepts.loading,\r\n            })\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Concepts\") {\r\n                this.setState({\r\n                    selectedOption: nextProps.navbar.selectedOption,\r\n                });\r\n\r\n                let concept = {\r\n                    \"concept_id\": nextProps.navbar.selectedOption.id,\r\n                    \"filters\": nextProps.navbar.tags.map(tag => tag.id)\r\n                };\r\n                this.props.getConceptFromApi(concept)\r\n                this.props.getListRelatedByConceptId(concept);\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                apiLoading: nextProps.concepts.apiLoading,\r\n                apiServerError: nextProps.concepts.apiServerError,\r\n                apiNetworkError: nextProps.concepts.apiNetworkError,\r\n                conceptWithDetails: nextProps.concepts.conceptWithDetails,\r\n                conceptsWithDetails: nextProps.concepts.conceptsWithDetails,\r\n                orignalConceptsWithDetails: nextProps.concepts.conceptsWithDetails,\r\n                perspectiveids: nextProps.concepts.perspectiveids,\r\n                keywords: nextProps.concepts.keywords,\r\n                listRelatedData: nextProps.concepts.listRelatedData,\r\n                listRelatedLoading: nextProps.concepts.listRelatedLoading,\r\n                listRelatedNetworkError: nextProps.concepts.listRelatedNetworkError,\r\n                listRelatedServerError: nextProps.concepts.listRelatedServerError,\r\n                loading: nextProps.concepts.loading,\r\n                perspectivesRelations: nextProps.concepts.perspectivesRelations,\r\n                perspectivesDetail: nextProps.concepts.perspectivesDetail,\r\n                concept: nextProps.concepts.concept,\r\n                UniqueKeywords: nextProps.uniqueKeyWords,\r\n                UniqueAuthors: nextProps.uniqueAuthors,\r\n                authors: nextProps.concepts.authors,\r\n                isLike: nextProps.concepts.isLike\r\n            })\r\n        }\r\n\r\n        //change content on tag change \r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption.category == \"Concepts\") {\r\n                let concept = {\r\n                    \"concept_id\": this.state.selectedOption.id,\r\n                    \"filters\": nextProps.navbar.tags.map(tag => tag.id)\r\n                };\r\n                this.props.getConceptFromApi(concept)\r\n                this.props.getListRelatedByConceptId(concept);\r\n            }\r\n\r\n        }\r\n\r\n        if (nextProps.concepts.perspectivesDetail !== this.state.perspectivesDetail) {\r\n            this.setState({\r\n                filteredPerspectives: this.getFilteredPerspectives(\r\n                    nextProps.concepts.perspectivesDetail,\r\n                    nextProps.concepts.perspectivesRelations,\r\n                    nextProps.concepts.authors,\r\n                )\r\n            })\r\n\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            filteredPerspectives: this.getFilteredPerspectives(\r\n                this.state.perspectivesDetail,\r\n                this.state.perspectivesRelations,\r\n                this.state.authors,\r\n            )\r\n        })\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.state.sortByAuthor) {\r\n            const element = document.getElementById(this.state.sortByAuthor);\r\n            if (element) {\r\n                element.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        }\r\n    }\r\n    toggleListRelated() {\r\n        this.setState({\r\n            listRelated: !this.state.listRelated,\r\n        })\r\n    }\r\n    onListClick() {\r\n        this.setState({\r\n            listRelatedRole: 'list'\r\n        })\r\n        this.toggleListRelated();\r\n    }\r\n    onRelatedClick() {\r\n        this.setState({\r\n            listRelatedRole: 'related',\r\n        })\r\n        this.toggleListRelated();\r\n    }\r\n    onLikeClick(id) {\r\n        if (this.state.perspectives[id].isLike) {\r\n            this.props.decreasePerspectiveLike(id);\r\n        }\r\n        else {\r\n            this.props.increasePerspectiveLike(id);\r\n        }\r\n    }\r\n    onAuthorClick(author) {\r\n        let label = author.author_first + \" \" + author.author_last;\r\n        let value = label;\r\n        let id = author.auth_id;\r\n        let born = author.born;\r\n        let died = author.died;\r\n        let category = \"Authors\"\r\n        this.props.flushConceptState()\r\n        this.props.setSelectedItem({ label, value, id, born, died, category });\r\n    }\r\n    filterConceptDefinations(keyword_id) {\r\n        let rtn = [];\r\n        this.state.orignalConceptsWithDetails.forEach(element => {\r\n            if (element.keywords_id == keyword_id) {\r\n                rtn.push(element);\r\n            }\r\n        });\r\n        this.setState({\r\n            conceptsWithDetails: rtn,\r\n        })\r\n    }\r\n    getFilteredPerspectives(perspectivesDetail, perspectivesRelations, authors) {\r\n        if (perspectivesRelations && authors && perspectivesDetail && perspectivesDetail.length > 0) {\r\n            let result = [];\r\n            if (this.state.sortBy == 'keyword') {\r\n                let filteredPerspectives = [];\r\n                let nonFilteredPerspectives = [];\r\n                perspectivesDetail.forEach(perspective => {\r\n                    let includes = false;\r\n                    if (perspectivesRelations[perspective.id]) {\r\n                        perspectivesRelations[perspective.id].Keywords.forEach(k => {\r\n                            if (k == this.state.sortByKeywordId) {\r\n                                perspective.Author = perspectivesRelations[perspective.id].Author;\r\n                                perspective.Keywords = perspectivesRelations[perspective.id].Keywords;\r\n                                includes = true;\r\n                            }\r\n                        });\r\n                        includes === true ? filteredPerspectives.push(perspective) : nonFilteredPerspectives.push(perspective);\r\n                    }\r\n                });\r\n                result = filteredPerspectives.sort(function (a, b) {\r\n                    let authorALastName = authors[a.Author].lastName.toUpperCase();\r\n                    let authorBLastName = authors[b.Author].lastName.toUpperCase();\r\n                    return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n                });\r\n                if (result.length > 0) {\r\n                    return result\r\n                }\r\n                this.props.getConceptPerspectivesByKeywords(this.state.sortByKeywordId);\r\n                return result;\r\n            }\r\n            else if (this.state.all) {\r\n                this.props.getAllPerspectivesByConcept(this.state.selectedOption.id)\r\n                this.setState({\r\n                    all: false\r\n                })\r\n                return result;\r\n            }\r\n            else {\r\n                if (this.state.sortByAuthor) {\r\n                    let includes = false;\r\n                    perspectivesDetail.forEach(perspective => {\r\n                        if (perspectivesRelations[perspective.id] && authors[perspectivesRelations[perspective.id].Author].lastName === this.state.sortByAuthor) {\r\n                            includes = true;\r\n                        }\r\n                    })\r\n                    if (includes) {\r\n                        perspectivesDetail.forEach(perspective => {\r\n                            if (perspectivesRelations[perspective.id]) {\r\n                                perspective.Author = perspectivesRelations[perspective.id].Author;\r\n                                perspective.Keywords = perspectivesRelations[perspective.id].Keywords;\r\n                                result.push(perspective)\r\n                            }\r\n                        })\r\n                        return result\r\n                    }\r\n                    this.props.getConceptPerspectivesByAuthor(this.state.sortByAuthor);\r\n                } else {\r\n                    perspectivesDetail.forEach(perspective => {\r\n                        if (perspectivesRelations[perspective.id]) {\r\n                            perspective.Author = perspectivesRelations[perspective.id].Author;\r\n                            perspective.Keywords = perspectivesRelations[perspective.id].Keywords;\r\n                            result.push(perspective);\r\n                        }\r\n                    });\r\n                    result = result.sort(function (a, b) {\r\n                        let authorALastName = authors[a.Author].lastName.toUpperCase();\r\n                        let authorBLastName = authors[b.Author].lastName.toUpperCase();\r\n                        return (authorALastName < authorBLastName) ? -1 : (authorALastName > authorBLastName) ? 1 : 0;\r\n                    })\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"overflowhidden\" style={{ overflow: \"hidden\" }}>\r\n                {(this.state.selectedOption.id && this.state.selectedOption.category == \"Concepts\" || this.state.query) && < div className=\"container-fluid\">\r\n                    {this.state.apiLoading && <div style={{ width: \"100px\", margin: \"auto\", marginTop: \"30vh\" }}>\r\n                        <ReactLoading type={\"balls\"} color={\"red\"} />\r\n                    </div>}\r\n                    {!this.state.apiLoading && !this.state.apiNetworkError && !this.state.apiServerError && <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3  \" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", textTransform: 'capitalize', height: \"90vh\", overflow: \"auto\", textAlign: \"\" }}>\r\n                            <div className='' style={{ width: \"100%\", margin: \"auto\", background: \"#F6F0EF\", textAlign: '', borderRadius: '20px' }}>\r\n                                {this.state.listRelatedLoading && <div style={{ width: \"100px\", margin: \"auto\" }}>\r\n                                    <ReactLoading type=\"balls\" color=\"red\" />\r\n                                </div>}\r\n\r\n                                {!this.state.listRelatedLoading && <div>\r\n                                    <div style={{ backgroundColor: 'white', textAlign: 'center', marginTop: '10px', padding: '5px' }}><h3>{this.state.selectedOption.label}</h3></div>\r\n                                </div>}\r\n                                <div style={{ backgroundColor: 'white', marginBottom: '5px' }}>\r\n                                    {!this.state.listRelatedLoading && <div style={{ paddingLeft: '50px', marginTop: '5px', background: 'white' }}>\r\n                                        <label style={{ backgroundColor: \"\", borderRadius: \"15px\", border: '1px solid black', padding: \"5px 20px\", marginTop: \"10px\", marginLeft: \"\", marginRight: \"5px\", cursor: \"pointer\", }}\r\n                                            onClick={this.onListClick}>Lists</label>\r\n                                        <label style={{ cursor: \"pointer\", backgroundColor: \"\", borderRadius: \"15px\", border: '1px solid black', padding: \"5px 15px\", marginTop: \"10px\", marginLeft: \"5px\" }}\r\n                                            onClick={this.onRelatedClick}>Related</label>\r\n                                    </div>}\r\n                                    <div style={{ width: '200px', border: \"1px solid green\", display: [this.state.listRelated ? 'block' : 'none'], textAlign: \"center\" }}>\r\n                                        {this.state.listRelatedRole == 'list' && this.state.listRelatedData && this.state.listRelatedData.length > 0 && returnOnlyListData(this.state.listRelatedData).map(data => {\r\n                                            return <div style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => this.onListRelatedClick({ relationary_supra: data.name, relationary_thing_supra_id: data.id })}>{data.name}</div>\r\n                                        })}\r\n                                        {this.state.listRelatedRole == 'related' && this.state.listRelatedData && this.state.listRelatedData.length > 0 && returnOnlyRelationData(this.state.listRelatedData).map(data => {\r\n                                            return <div style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => this.onListRelatedClick({ relationary_supra: data.name, relationary_thing_supra_id: data.id })} >{data.name}</div>\r\n                                        })}\r\n                                    </div>\r\n                                    {/* <div onClick={() => this.props.showAllPerspective(true)}  className=\"btn btn-link text-center\">Show All</div> */}\r\n                                </div>\r\n                                {this.state.UniqueKeywords && (this.state.UniqueKeywords.length > 0 && <div style={{ width: \"100%\", margin: \"auto\" }} >\r\n                                    <div style={{ backgroundColor: 'white', width: '100%' }}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-xs-2 col-sm-2 col-md-2\">\r\n                                                <div onClick={() => {\r\n                                                    this.setState({\r\n                                                        all: true,\r\n                                                        sortBy: \"\",\r\n                                                        sortByAuthor: \"\",\r\n                                                    }, () => {\r\n                                                        this.setState({\r\n                                                            filteredPerspectives: this.getFilteredPerspectives(this.state.perspectivesDetail, this.state.perspectivesRelations, this.state.authors)\r\n                                                        })\r\n                                                    })\r\n                                                }\r\n                                                } className=\"btn btn-link text-center rotate\"  ><b>Show All</b></div>\r\n                                            </div>\r\n                                            <div className=\"col-8 col-sm-8 col-md-8\" style={{ backgroundColor: 'white' }}>\r\n                                                {this.state.UniqueKeywords.map(keyword => {\r\n                                                    return <a href=\"#top\" style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }} onClick={() => {\r\n                                                        this.setState({\r\n                                                            sortBy: \"keyword\",\r\n                                                            sortByKeywordId: keyword.id,\r\n                                                            all: false\r\n                                                        }, () => {\r\n                                                            this.setState({\r\n                                                                filteredPerspectives: this.getFilteredPerspectives(this.state.perspectivesDetail, this.state.perspectivesRelations, this.state.authors)\r\n                                                            })\r\n                                                        })\r\n                                                    }}><b style={{ color: 'black', fontWeight: '15px:', fontSize: '16px' }}>{keyword.name}</b><span style={{ color: 'gray' }}>{\" (\" + keyword.count + \")\"}</span></a>\r\n\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n                                </div>)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"90vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                            <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                <div id=\"img\" style={{ width: \"398px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                    <h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                </div>\r\n                                <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"398px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                    <label className=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Positive\r\n                                        </label>\r\n                                    <label className=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Critical\r\n                                        </label>\r\n                                    <label className=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Funny\r\n                                        </label>\r\n                                </div>\r\n                                {\r\n                                    <div id=\"top\"></div>\r\n                                }\r\n                                {\r\n                                    this.state.selectedOption && this.state.filteredPerspectives && this.state.filteredPerspectives.length > 0 && this.state.filteredPerspectives.map(data => {\r\n                                        return (\r\n                                            <div>\r\n                                                <Context data={data} authors={this.state.authors} selectedOption={this.state.selectedOption} keywords={this.state.keywords} onAuthorClick={this.onAuthorClick} onLikeClick={this.onLikeClick} isLike={this.state.isLike} />\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-2\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"90vh\", overflow: \"auto\", border: \"1px solid #a5a5a5\", borderLeft: '1px solid black' }}>\r\n                            {this.state.UniqueAuthors && this.state.UniqueAuthors.length > 0 && this.state.UniqueAuthors.map(data => {\r\n                                return (\r\n                                    <div style={{ width: \"150px\", margin: \"auto\" }}><a onClick={() => {\r\n                                        this.setState({\r\n                                            sortByAuthor: data.lastName,\r\n                                            sortBy: \"\",\r\n                                            all: false,\r\n                                        }, () => {\r\n                                            this.setState({\r\n                                                filteredPerspectives: this.getFilteredPerspectives(this.state.perspectivesDetail, this.state.perspectivesRelations, this.state.authors)\r\n                                            })\r\n                                        })\r\n                                    }} style={{ color: \"black\", textDecoration: \"none\", cursor: \"pointer\" }} href={`#${data.lastName}`}><b>{(data.lastName && data.firstName) ? (data.lastName + \", \" + data.firstName) : (data.lastName ? data.lastName : (data.firstName ? data.firstName : \"\"))}</b></a></div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"90vh\", overflow: \"auto\", borderLeft: \"0px\", borderRight: \"3px  solid pink\", borderTop: \"3px  solid pink\", borderBottom: \"3px  solid pink\", textAlign: \"center\" }}>\r\n                            <div className=\"text-center\">\r\n                                <AdsComponent></AdsComponent>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //getConceptDetails: bindActionCreators(getConceptDetails, dispatch),\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        flushConceptState: bindActionCreators(flushConceptState, dispatch),\r\n        getListRelatedByConceptId: bindActionCreators(getListRelatedByConceptId, dispatch),\r\n        getConceptFromApi: bindActionCreators(getConceptFromApi, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        increasePerspectiveLike: bindActionCreators(increasePerspectiveLike, dispatch),\r\n        decreasePerspectiveLike: bindActionCreators(decreasePerspectiveLike, dispatch),\r\n        sortByAuthorLast: bindActionCreators(sortByAuthorLast, dispatch),\r\n        sortByKeyword: bindActionCreators(sortByKeyword, dispatch),\r\n        showAllPerspective: bindActionCreators(showAllPerspective, dispatch),\r\n        getConceptPerspectivesByAuthor: bindActionCreators(getConceptPerspectivesByAuthor, dispatch),\r\n        getConceptPerspectivesByKeywords: bindActionCreators(getConceptPerspectivesByKeywords, dispatch),\r\n        getAllPerspectivesByConcept: bindActionCreators(getAllPerspectivesByConcept, dispatch)\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        navbar: state.navbar,\r\n        concepts: state.concepts,\r\n        uniqueKeyWords: getUniqueKeywords(state),\r\n        uniqueAuthors: getUniqueSortedAuthors(state)\r\n    }\r\n}\r\n// const renderConceptsDetails = (data) => {\r\n//     if (data.length > 0) {\r\n//         data.map(item => {\r\n//             return (<h1>{item.description}</h1>);\r\n//         })\r\n//     }\r\n// }\r\nconst returnOnlyListData = (listRelatedData) => {\r\n    let listData = [];\r\n    listRelatedData.forEach(element => {\r\n        if (element.type == 'list of') {\r\n            listData.push(element);\r\n        }\r\n    })\r\n    return listData;\r\n}\r\nconst returnOnlyRelationData = (listRelatedData) => {\r\n    let listData = [];\r\n    listRelatedData.forEach(element => {\r\n        if (element.type == 'dictionary of') {\r\n            listData.push(element);\r\n        }\r\n    })\r\n    return listData;\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ConceptsPage));","import {schema} from 'normalizr';\r\nconst author=new schema.Entity(\"authors\");\r\nconst keyword=new schema.Entity(\"keywords\");\r\nconst perspective=new schema.Entity(\"perspectives\",{\r\n    Author:author,\r\n    Keywords:[keyword]\r\n});\r\nconst concept=new schema .Entity(\"concepts\",{\r\n    Perspectives:[perspective]\r\n})\r\nexport const conceptClusterSchema=new schema.Entity(\"conceptCluster\",{\r\n    Concepts:[concept]\r\n});","\r\nimport {normalize} from 'normalizr';\r\nimport {conceptClusterSchema} from '../schema/conceptClusterSchema';\r\nconst axios = require('axios');\r\nexport function flushConceptClusterState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_CONCEPT_CLUSTER\",\r\n        })\r\n    }\r\n}\r\nexport function increasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"increase\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = true;\r\n                dispatch({\r\n                    type: 'CONCEPT_CLUSTER_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function decreasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"decrease\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = false;\r\n                dispatch({\r\n                    type: 'CONCEPT_CLUSTER_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function setClickedState(obj){\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:'CLICKED_STATE',\r\n            payload:obj\r\n        })\r\n    }\r\n}\r\nexport function getConceptClusterFromApi(id) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REQUEST_STARTED\"\r\n        })\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/conceptClusters/${id}?relationships=true`).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n                const conceptDetailsFromApi = data.data.data;\r\n                const normalizedData=normalize(conceptDetailsFromApi,conceptClusterSchema)\r\n                dispatch({\r\n                    type: \"REQUEST_SUCCESSFUL\",\r\n                    payload: conceptDetailsFromApi,\r\n                })\r\n                dispatch({\r\n                    type:'CONCEPT_CLUSTER_DETAIL',\r\n                    payload:normalizedData.entities\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"SERVER_ERROR\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"NETWORK_ERROR\"\r\n            })\r\n            console.log('Error While fetching concept details from api', error);\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass Context extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visibility: 'none',\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {authors,data}=this.props;\r\n        return (\r\n            <div id={data.ConceptId}>\r\n                <div id={authors[data.Author].lastName} className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\" }} >\r\n                    <b style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                        onClick={() => {\r\n                            this.props.flushConceptClusterState();\r\n                            this.props.setSelectedItem({ label: data.ConceptName, value: data.ConceptName, id: data.ConceptId, category: \"Concepts\" })\r\n                        }}>{data.pronoun}{\" \"} {data.ConceptName}</b>{\" is \"}{data.description}\r\n                    <div onClick={() => this.props.onAuthorClick({ auth_id: data.AuthorId, author_first: authors[data.Author].firstName, author_last: authors[data.Author].lastName, born: authors[data.Author].dob, died: authors[data.Author].dod })} style={{ color: \"red\", cursor: \"pointer\" }}>{authors[data.Author].firstName}{\" \"}{authors[data.Author].lastName}</div>\r\n                    <div className=\"pull-right\">\r\n                        <i style={{ color: data.isLike?\"red\":\"grey\"}} className=\"fa fa-heart \" onClick={()=>{this.props.onLikeClick(data.id)}}></i>&nbsp;[{data.loves?data.loves:0}]&nbsp;&nbsp; <span className=\"contextbutton\" onClick={() => {\r\n                            this.setState({\r\n                                visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                            })\r\n                        }} style={{ cursor: \"pointer\" }}>Context</span>\r\n                    </div>\r\n                    <div id={data.id} style={{ marginTop: \"20px\", display: [this.state.visibility] }} >{data.longDescription}<div style={{ backgroundColor: \"#DCDCDC\" }}>{data.citation}</div></div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n// Context.PropTypes = {\r\n//     data: PropTypes.object.isRequired,\r\n//     flushConceptClusterState: PropTypes.func.isRequired,\r\n//     setSelectedItem: PropTypes.func.isRequired,\r\n//     onAuthorClick: PropTypes.func.isRequired,\r\n// }\r\nexport default Context;","import React, { Component } from 'react';\r\nimport \"./ConceptClustersPage.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { flushConceptClusterState,\r\n     getConceptClusterFromApi,\r\n     setClickedState,\r\n     increasePerspectiveLike,\r\n     decreasePerspectiveLike } from \"../../actions/conceptClustersActions\";\r\nimport { setSelectedCategory, setSelectedItem, flushState, addTag } from \"../../actions/navbaractions\";\r\nimport{\r\n    getUniqueSortedConceptsFromConceptCluster,\r\n    getPerspectivesFromConceptCluster,\r\n    getUniqueAuthorsFromConceptCluster\r\n} from '../../selectors';\r\nimport { getAuthorGroups } from \"../../utilities\";\r\nimport Context from './Context';\r\nimport ReactLoading from 'react-loading';\r\nimport queryString from \"query-string\";\r\nimport Axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom'\r\nclass ConceptClustersPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedOption: this.props.navbar.selectedOption,\r\n            apiLoading: this.props.conceptClusters.apiLoading,\r\n            apiServerError: this.props.conceptClusters.apiServerError,\r\n            apiNetworkError: this.props.conceptClusters.apiNetworkError,\r\n            /**\r\n             * normalized states\r\n             */\r\n            authors:this.props.conceptClusters.authors,\r\n            keywords:this.props.conceptClusters.keywords,\r\n            sortedConcepts:this.props.sortedConcepts,\r\n            sortedPerspectives:this.props.sortedPerspectives,\r\n            uniqueAuthors:this.props.uniqueAuthors,\r\n            perspectives:this.props.conceptClusters.perspective\r\n             /**\r\n             * end of normalized states\r\n             */\r\n        }\r\n        this.onAuthorClick = this.onAuthorClick.bind(this);\r\n        this.onLikeClick=this.onLikeClick.bind(this);\r\n        if (this.props.navbar.selectedOption) {\r\n            if (this.props.navbar.selectedOption.id) {\r\n                if (this.props.navbar.selectedOption.category == \"Concept-Clusters\"){\r\n                    this.props.getConceptClusterFromApi(this.props.navbar.selectedOption.id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getConceptCluster(cluster) {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/conceptCluster`, { cluster }).then(data => {\r\n                if(data.data.obj){\r\n                    let result = data.data.obj.selectedOption;\r\n                    resolve(result);\r\n                }\r\n                resolve(null);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n    async componentWillMount() {\r\n        if (this.props.match.params.name) {\r\n            if (this.props.match.params.name && queryString.parse(this.props.location.search).filters) {\r\n                let filters = [];\r\n                let queryFilters = queryString.parse(this.props.location.search).filters;\r\n                if (typeof queryFilters === \"string\") {\r\n                    filters.push(queryFilters);\r\n                } else {\r\n                    filters = queryFilters;\r\n                }\r\n                let author_group = await getAuthorGroups(filters);\r\n                let cluster = {};\r\n                cluster.name = this.props.match.params.name;\r\n                cluster.groupIds = author_group.map(group => group.id);\r\n                let result = await this.getConceptCluster(cluster);\r\n                if (result) {\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.addTag(author_group);\r\n                    this.props.setSelectedItem(result);\r\n                } else {\r\n                    return <Redirect to='/Message' />\r\n                }\r\n            } else {\r\n                let cluster = {};\r\n                cluster.name = this.props.match.params.name;\r\n                cluster.groupIds = [];\r\n                let result = await this.getConceptCluster(cluster);\r\n                this.props.setSelectedItem(result);\r\n                this.setState({\r\n                    selectedOption: result\r\n                });\r\n                this.props.getConceptClusterFromApi(this.state.selectedOption.id);\r\n            }\r\n        }\r\n    }\r\n    async componentWillReceiveProps(nextProps) {\r\n        if (this.state.selectedOption != nextProps.navbar.selectedOption) {\r\n            this.props.flushConceptClusterState();\r\n            this.setState({\r\n                selectedOption: nextProps.navbar.selectedOption,\r\n                apiLoading: nextProps.conceptClusters.apiLoading,\r\n                apiServerError: nextProps.conceptClusters.apiServerError,\r\n                apiNetworkError: nextProps.conceptClusters.apiNetworkError,\r\n            /**\r\n             * normalized states\r\n             */\r\n                authors:nextProps.conceptClusters.authors,\r\n                keywords:nextProps.conceptClusters.keywords,\r\n                sortedConcepts:nextProps.sortedConcepts,\r\n                sortedPerspectives:nextProps.sortedPerspectives,\r\n                uniqueAuthors:nextProps.uniqueAuthors,\r\n                perspectives:nextProps.conceptClusters.perspective\r\n             /**\r\n             * end of normalized states\r\n             */\r\n\r\n            })\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Concept-Clusters\") {\r\n                this.props.getConceptClusterFromApi(nextProps.navbar.selectedOption.id);\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                apiLoading: nextProps.conceptClusters.apiLoading,\r\n                apiServerError: nextProps.conceptClusters.apiServerError,\r\n                apiNetworkError: nextProps.conceptClusters.apiNetworkError,\r\n                /**\r\n             * normalized states\r\n             */\r\n                authors:nextProps.conceptClusters.authors,\r\n                keywords:nextProps.conceptClusters.keywords,\r\n                sortedConcepts:nextProps.sortedConcepts,\r\n                sortedPerspectives:nextProps.sortedPerspectives,\r\n                uniqueAuthors:nextProps.uniqueAuthors,\r\n                perspectives:nextProps.conceptClusters.perspective\r\n            /**\r\n             * end of normalized states\r\n             */\r\n            })\r\n        }\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption.category == \"Concept-Clusters\") {\r\n                let cluster = {};\r\n                cluster.name = nextProps.navbar.selectedOption.value;\r\n                cluster.groupIds = nextProps.navbar.tags.map(group => group.id);\r\n                let result = await this.getConceptCluster(cluster);\r\n                if (result) {\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getConceptClusterFromApi(nextProps.navbar.selectedOption.id);\r\n                } else {\r\n                   \r\n                   this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    onLikeClick(id) {\r\n        if (this.state.perspectives[id].isLike) {\r\n            this.props.decreasePerspectiveLike(id);\r\n        }\r\n        else {\r\n            this.props.increasePerspectiveLike(id);\r\n        }\r\n    }\r\n    onAuthorClick(author) {\r\n        let label = author.author_first + \" \" + author.author_last;\r\n        let value = label;\r\n        let id = author.auth_id;\r\n        let born = author.born;\r\n        let died = author.died;\r\n        let category = \"Authors\";\r\n        this.props.flushConceptClusterState()\r\n        this.props.setSelectedItem({ label, value, id, born, died, category });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"overflowhidden\" style={{ overflow: \"hidden\" }}>\r\n                {this.state.selectedOption.id && this.state.selectedOption.category == \"Concept-Clusters\" && <div className=\"container-fluid\">\r\n                    {this.state.apiLoading && <div style={{ width: \"100px\", margin: \"auto\", marginTop: \"30vh\" }}>\r\n                        <ReactLoading type={\"balls\"} color={\"red\"} />\r\n                    </div>}\r\n                    {!this.state.apiLoading && !this.state.apiNetworkError && !this.state.apiServerError && <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px  solid pink\", textAlign: \"\" }}>\r\n                            {this.state.sortedConcepts&&this.state.sortedConcepts.length > 0 && <div style={{ width: \"150px\", margin: \"auto\" }}>\r\n                                { this.state.sortedConcepts.map(concept => {\r\n                                    if (concept.name != undefined) {\r\n                                        return <a onClick={() => {\r\n                                            this.props.setClickedState(\r\n                                                {\r\n                                                    conceptClicked: true,\r\n                                                    authorClicked: false,\r\n                                                }\r\n                                            )\r\n                                        }} href={\"#\" + concept.id} style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }}>{concept.name}</a>\r\n                                    }\r\n                                })}\r\n                            </div>}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                            <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                <div id=\"img\" style={{ width: \"458px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                    <h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                </div>\r\n                                <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"458px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Positive\r\n                                        </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Critical\r\n                                        </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Funny\r\n                                        </label>\r\n                                </div>\r\n                                {\r\n                                    this.state.sortedPerspectives && this.state.sortedPerspectives.length > 0 && this.state.sortedPerspectives.map(data => {\r\n\r\n                                        return (\r\n                                            <Context\r\n                                                data={data}\r\n                                                onAuthorClick={this.onAuthorClick}\r\n                                                flushConceptClusterState={this.props.flushConceptClusterState}\r\n                                                setSelectedItem={this.props.setSelectedItem}\r\n                                                authors={this.state.authors}\r\n                                                onLikeClick={this.onLikeClick}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-2\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px solid pink\", textAlign: \"\" }}>\r\n                            {this.state.uniqueAuthors && this.state.uniqueAuthors.length > 0 && this.state.uniqueAuthors.map(data => {\r\n                                return (\r\n                                    <div style={{ padding: \" 0px 10px\", width: \"150px\", margin: \"auto\" }}><a onClick={() => {\r\n                                        this.props.setClickedState(\r\n                                            {\r\n                                                authorClicked: true,\r\n                                                conceptClicked: false,\r\n                                            }\r\n                                        )\r\n                                    }} style={{ color: \"black\", textDecoration: \"none\", cursor: \"pointer\" }} href={\"#\" + data.lastName}>{(data.lastName && data.firstName) ? (data.lastName + \", \" + data.firstName) : (data.lastName ? data.lastName : (data.firstName ? data.firstName : \"\"))}</a></div>\r\n                                );\r\n\r\n                            })}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", borderLeft: \"0px\", borderRight: \"3px  solid pink\", borderTop: \"3px  solid pink\", borderBottom: \"3px  solid pink\", textAlign: \"center\" }}>\r\n                            <div className=\"text-center\">\r\n                                This place is for adds\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        flushConceptClusterState: bindActionCreators(flushConceptClusterState, dispatch),\r\n        getConceptClusterFromApi: bindActionCreators(getConceptClusterFromApi, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        setClickedState:bindActionCreators(setClickedState,dispatch),\r\n        increasePerspectiveLike:bindActionCreators(increasePerspectiveLike,dispatch),\r\n        decreasePerspectiveLike:bindActionCreators(decreasePerspectiveLike,dispatch)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        navbar: state.navbar,\r\n        conceptClusters: state.conceptClusters,\r\n        sortedConcepts:getUniqueSortedConceptsFromConceptCluster(state),\r\n        sortedPerspectives:getPerspectivesFromConceptCluster(state),\r\n        uniqueAuthors:getUniqueAuthorsFromConceptCluster(state)\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ConceptClustersPage));","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nclass Message extends Component{\r\n    render(){\r\n        return(\r\n            <div style={{margin:\"100px auto\",textAlign:\"center\"}}>\r\n                <h1>\r\n                    Try a search...\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","import {schema} from 'normalizr';\r\nconst authorGroup=new schema.Entity(\"authorGroups\");\r\n//,{idAttribute:'conceptId'}\r\nexport const authorClusterSchema=new schema.Entity(\"authorCluster\",[])","import axios from 'axios';\r\nimport {normalize} from 'normalizr';\r\nimport{authorClusterSchema} from '../schema/authorClusterSchema';\r\nexport function flushAuthorClusterState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_AUTHOR_CLUSTER\",\r\n        })\r\n    }\r\n}\r\n\r\n// export function getAutherClusterDetailsViaSupra(id) {\r\n//     // console.log('get author cluster details via supra ', id);\r\n//     let query = `SELECT * from concept_discrete join __perspectives on\r\n//     concept_discrete.discrete_concept_name_id=__perspectives.concept_id\r\n//     join __author on\r\n//     __author.auth_id=__perspectives.auth_id join\r\n//     author_relationary_author_with_distinct_grouping on\r\n//     author_relationary_author_with_distinct_grouping.auth_id=__author.auth_id\r\n//     join author_relationary_distinct_groupings on\r\n//     author_relationary_distinct_groupings.distinct_grouping_id =author_relationary_author_with_distinct_grouping.distinct_grouping_id\r\n//     join author_relationary_distinct_grouping_with_supra on\r\n//     author_relationary_distinct_grouping_with_supra.distinct_grouping_id=author_relationary_distinct_groupings.distinct_grouping_id\r\n//     join author_relationary_supra on\r\n//     author_relationary_supra.author_supra_id=author_relationary_distinct_grouping_with_supra.supra_id\r\n//     where author_relationary_supra.author_supra_id=${id} order by concept_discrete.discrete_concept_name`\r\n\r\n//     var options = {\r\n//         method: 'POST',\r\n//         url: 'https://cors-anywhere.herokuapp.com/' + 'http://ec2-18-220-90-81.us-east-2.compute.amazonaws.com:8126/',\r\n//         headers:\r\n//         {\r\n//             'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n//             'cache-control': 'no-cache',\r\n//             'content-type': 'application/x-www-form-urlencoded'\r\n//         },\r\n//         form: { query: query }\r\n//     };\r\n//     return dispatch => {\r\n//         request(options, function (error, response, body) {\r\n//             let data = JSON.parse(body);\r\n//             // console.log(data);\r\n//             dispatch({\r\n//                 type: \"GET_AUTHOR_CLUSTER_DETAILS\",\r\n//                 payload: data\r\n//             })\r\n\r\n//             if (data.length > 0) {\r\n//                 let uniqueConceptsDiscrete = [];\r\n//                 let uniqueConceptsIds = [];\r\n//                 data.forEach(element => {\r\n//                     if (!(uniqueConceptsIds.includes(element.discrete_concept_name_id))) {\r\n//                         let discrete_concept_name = element.discrete_concept_name;\r\n//                         let discrete_concept_name_id = element.discrete_concept_name_id;\r\n//                         uniqueConceptsIds.push(element.discrete_concept_name_id);\r\n//                         uniqueConceptsDiscrete.push({ discrete_concept_name_id, discrete_concept_name });\r\n//                     }\r\n//                     else {\r\n//                     }\r\n//                 });\r\n//                 // uniqueConceptsDiscrete.sort((a, b) => (a.discrete_concept_name > b.discrete_concept_name) ? 1 : ((b.discrete_concept_name > a.discrete_concept_name) ? -1 : 0))\r\n//                 // console.log(\"Author Cluster before dispatch only concept names\", uniqueConceptsDiscrete.discrete_concept_name)\r\n//                 dispatch({\r\n//                     type: \"GET_AUTHOR_CLUSTER_CONCEPTS_DISCRETE\",\r\n//                     payload: uniqueConceptsDiscrete,\r\n//                 })\r\n\r\n//             }\r\n//         });\r\n//     }\r\n// }\r\n// export function getAutherClusterDetails(id) {\r\n//     let query = `SELECT * from concept_discrete join __perspectives on\r\n//     concept_discrete.discrete_concept_name_id=__perspectives.concept_id\r\n//     join __author on\r\n//     __author.auth_id=__perspectives.auth_id join\r\n//     author_relationary_author_with_distinct_grouping on\r\n//     author_relationary_author_with_distinct_grouping.auth_id=__author.auth_id\r\n//     join author_relationary_distinct_groupings on\r\n//     author_relationary_distinct_groupings.distinct_grouping_id =author_relationary_author_with_distinct_grouping.distinct_grouping_id\r\n//     where author_relationary_distinct_groupings.distinct_grouping_id=${id} order by concept_discrete.discrete_concept_name`\r\n\r\n//     var options = {\r\n//         method: 'POST',\r\n//         url: 'https://cors-anywhere.herokuapp.com/' + 'http://ec2-18-220-90-81.us-east-2.compute.amazonaws.com:8126/',\r\n//         headers:\r\n//         {\r\n//             'postman-token': '8353454e-497c-0ace-22b4-e962adde3d97',\r\n//             'cache-control': 'no-cache',\r\n//             'content-type': 'application/x-www-form-urlencoded'\r\n//         },\r\n//         form: { query: query }\r\n//     };\r\n//     return dispatch => {\r\n//         request(options, function (error, response, body) {\r\n//             let data = JSON.parse(body);\r\n//             // console.log(data);\r\n//             dispatch({\r\n//                 type: \"GET_AUTHOR_CLUSTER_DETAILS\",\r\n//                 payload: data\r\n//             })\r\n\r\n//             if (data.length > 0) {\r\n\r\n//                 let uniqueConceptsDiscrete = [];\r\n//                 let uniqueConceptsIds = [];\r\n//                 data.forEach(element => {\r\n//                     if (!(uniqueConceptsIds.includes(element.discrete_concept_name_id))) {\r\n//                         let discrete_concept_name = element.discrete_concept_name;\r\n//                         let discrete_concept_name_id = element.discrete_concept_name_id;\r\n//                         uniqueConceptsIds.push(element.discrete_concept_name_id);\r\n//                         uniqueConceptsDiscrete.push({ discrete_concept_name_id, discrete_concept_name });\r\n//                     }\r\n//                     else {\r\n\r\n//                     }\r\n//                 });\r\n\r\n//                 // uniqueConceptsDiscrete.sort((a, b) => (a.discrete_concept_name > b.discrete_concept_name) ? 1 : ((b.discrete_concept_name > a.discrete_concept_name) ? -1 : 0))\r\n//                 // console.log(\"2Author Cluster before dispatch only concept names\", uniqueConceptsDiscrete)\r\n//                 dispatch({\r\n//                     type: \"GET_AUTHOR_CLUSTER_CONCEPTS_DISCRETE\",\r\n//                     payload: uniqueConceptsDiscrete,\r\n//                 })\r\n\r\n//             }\r\n\r\n//         });\r\n//     }\r\n// }\r\n\r\nexport function getAuthorCluster(id, via) {\r\n    // console.log('Get Author Cluster action', id, via);\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REQUEST_STARTED\"\r\n        })\r\n        getAuthorClusterHelper(id, via).then(data => {\r\n            let normalizedData=normalize(data,[authorClusterSchema]);\r\n            normalizedData.data=data;\r\n            console.log(normalizedData)\r\n            dispatch({\r\n                type: \"GET_AUTHOR_CLUSTER_DETAILS\",\r\n                payload: normalizedData,\r\n            })\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"NETWORK_ERROR\"\r\n            })\r\n            console.log('Error while getting detailed author cluster', error);\r\n        })\r\n    }\r\n}\r\nfunction getAuthorClusterHelper(id, via) {\r\n    // alert(via)\r\n    return new Promise(async (res, rej) => {\r\n        let result = [];\r\n        try {\r\n            let result1 = {};\r\n            if (via === 'Author Clusters') {\r\n                //alert(\"getting data cluster\");\r\n                result1 = await axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorClusters/${id}/perspectives?relationships=true`);\r\n            }\r\n            else if (via === 'Author Groups') {\r\n                result1 = await axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorGroups/${id}/perspectives?relationships=true`);\r\n            }\r\n            if (result1.data.responseType == 'success') {\r\n                console.log(\"getting data response\");\r\n                result = result1.data.data;\r\n            }\r\n            res(result);\r\n        } catch (e) {\r\n            console.log('getting detailed author cluster error', e);\r\n            rej(result);\r\n        }\r\n    })\r\n}\r\n\r\nexport function setClickedState(obj){\r\n    return dispatch=>{\r\n        dispatch({\r\n            type:'CLICKED_STATE',\r\n            payload:obj\r\n        })\r\n    }\r\n}\r\n\r\nexport function increasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"increase\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = true;\r\n                dispatch({\r\n                    type: 'AUTHOR_CLUSTER_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function decreasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"decrease\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = false;\r\n                dispatch({\r\n                    type: 'AUTHOR_CLUSTER_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport conceptsSorter from \"../../utils/conceptsSorterFunction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactLoading from 'react-loading';\r\nimport Axios from 'axios';\r\nimport queryString from \"query-string\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { getAutherClusterDetailsViaSupra,\r\n     getAutherClusterDetails,\r\n      flushAuthorClusterState,\r\n       getAuthorCluster,\r\n       setClickedState,\r\n       increasePerspectiveLike,\r\n       decreasePerspectiveLike\r\n    } from \"../../actions/autherCluster\";\r\nimport { setSelectedCategory, setSelectedItem, flushState, addTag } from \"../../actions/navbaractions\";\r\nimport {\r\n    getUniqueSortedConceptNameFromAuthorCluster,\r\n    getDynamicSortedAuthorClusterWithDetails,\r\n    getSortedAuthorClusterWithDetailsByAuthorLast\r\n} from '../../selectors';\r\nclass AutherCluster extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedOption: this.props.navbar.selectedOption,\r\n            //authorClustersWithDetails: this.props.autherCluster.authorClustersWithDetails,\r\n            // authorClusterConceptsDiscrete: this.props.autherCluster.authorClusterConceptsDiscrete,\r\n            apiLoading: this.props.autherCluster.apiLoading,\r\n            apiServerError: this.props.autherCluster.apiServerError,\r\n            apiNetworkError: this.props.autherCluster.apiNetworkError,\r\n            // authorClicked: false,\r\n            // conceptClicked: true,\r\n            //Normalized states\r\n            sortedConceptsNames: this.props.sortedConceptsNames,\r\n            dynamicSortedAuthorCluster: this.props.dynamicSortedAuthorCluster,\r\n            sortedAuthorClusterDetail: this.props.sortedAuthorClusterDetail,\r\n            perspectives:this.props.autherCluster.authorCluster,\r\n            //End of normalized staes\r\n        }\r\n        this.onAuthorClick = this.onAuthorClick.bind(this);\r\n        this.onLikeClick=this.onLikeClick.bind(this);\r\n        //this.getDynamicSortedAuthorClusterWithDetails = this.getDynamicSortedAuthorClusterWithDetails.bind(this);\r\n        if (this.props.navbar.selectedOption) {\r\n            if (this.props.navbar.selectedOption.id) {\r\n                if (this.props.navbar.selectedOption.category == \"Author-Clusters\") {\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Clusters\")\r\n                    // if (this.props.navbar.selectedOption.via) {\r\n                    //     // console.log(\"Helo\");\r\n                    //     this.props.getAutherClusterDetailsViaSupra(this.props.navbar.selectedOption.id);\r\n                    // }\r\n                    // this.props.getAutherClusterDetails(this.props.navbar.selectedOption.id);\r\n                }\r\n                if (this.props.navbar.selectedOption.category == \"Author-Groups\") {\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Groups\")\r\n                    // if (this.props.navbar.selectedOption.via) {\r\n                    //     // console.log(\"Helo\");\r\n                    //     this.props.getAutherClusterDetailsViaSupra(this.props.navbar.selectedOption.id);\r\n                    // }\r\n                    // this.props.getAutherClusterDetails(this.props.navbar.selectedOption.id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getAutherCluster(cluster) {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorClusters`, { cluster }).then(data => {\r\n                if (data.data.obj) {\r\n                    let result = data.data.obj.selectedOption;\r\n                    resolve(result);\r\n                }\r\n\r\n                resolve(\"\");\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n    getAuthorGroups = (filters) => {\r\n        let filterobj = {};\r\n        filterobj.filters = filters;\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/authorGroups`, filterobj)\r\n                .then(data => {\r\n                    resolve(data.data);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        });\r\n    }\r\n   async getAuthorGroupByName(name){\r\n       let filters=[this.props.match.params.name];\r\n       let authorGroup=await this.getAuthorGroups(filters);\r\n       if(authorGroup[0]){\r\n           authorGroup=authorGroup[0]\r\n           this.props.setSelectedItem({\r\n               label:authorGroup.label,\r\n               value:authorGroup.value,\r\n               id:authorGroup.id,\r\n               category:'Author-Groups'\r\n           });\r\n       }\r\n   }\r\n    async componentWillMount() { \r\n        let url=this.props.location.pathname.split('/')[1];\r\n        if (this.props.match.params.name) {\r\n            if (this.props.match.params.name && queryString.parse(this.props.location.search).filters) {\r\n                let filters = [];\r\n                if(url==\"author-groups\"||url==\"Author-Groups\"){\r\n                    this.getAuthorGroupByName();\r\n                  }else{\r\n                    let queryFilters = queryString.parse(this.props.location.search).filters;\r\n                    if (typeof queryFilters === \"string\") {\r\n                        filters.push(queryFilters);\r\n                    } else {\r\n                        filters = queryFilters;\r\n                    }\r\n                    let author_group = await this.getAuthorGroups(filters);\r\n                    let cluster = {};\r\n                    cluster.name = this.props.match.params.name;\r\n                    cluster.groupIds = author_group.map(group => group.id);\r\n                    let result = await this.getAutherCluster(cluster);\r\n                    if (result) {\r\n                        this.props.addTag(author_group);\r\n                        this.props.setSelectedItem(result);\r\n                        this.setState({\r\n                            selectedOption: result\r\n                        });\r\n                    } else {\r\n                        this.props.history.push(\"/Message\");\r\n                    }\r\n                  }\r\n            }\r\n            else {\r\n                if(url==\"author-groups\"||url==\"Author-Groups\"){\r\n                  this.getAuthorGroupByName();\r\n                }\r\n                let cluster = {};\r\n                cluster.name = this.props.match.params.name;\r\n                cluster.groupIds = [];\r\n                let result = await this.getAutherCluster(cluster);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Clusters\");\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    async componentWillReceiveProps(nextProps) {\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption && nextProps.navbar.selectedOption.category == \"Author-Clusters\") {\r\n                let cluster = {};\r\n                cluster.name = nextProps.navbar.selectedOption.value;\r\n                cluster.groupIds = nextProps.navbar.tags.map(group => group.id);\r\n                let result = await this.getAutherCluster(cluster);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Clusters\");\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption && nextProps.navbar.selectedOption.category == \"Author-Groups\") {\r\n                let cluster = {};\r\n                cluster.name = nextProps.navbar.selectedOption.value;\r\n                cluster.groupIds = nextProps.navbar.tags.map(group => group.id);\r\n                let result = await this.getAutherCluster(cluster);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getAuthorCluster(this.props.navbar.selectedOption.id, \"Author Groups\");\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        if (this.state.selectedOption != nextProps.navbar.selectedOption) {\r\n            this.setState({\r\n                selectedOption: nextProps.navbar.selectedOption,\r\n                //authorClustersWithDetails: nextProps.autherCluster.authorClustersWithDetails,\r\n                apiLoading: nextProps.autherCluster.apiLoading,\r\n                apiServerError: nextProps.autherCluster.apiServerError,\r\n                apiNetworkError: nextProps.autherCluster.apiNetworkError,\r\n                // authorClusterConceptsDiscrete: nextProps.autherCluster.authorClusterConceptsDiscrete,\r\n                //Normalized states\r\n                sortedConceptsNames: nextProps.sortedConceptsNames,\r\n                dynamicSortedAuthorCluster: nextProps.dynamicSortedAuthorCluster,\r\n                sortedAuthorClusterDetail: nextProps.sortedAuthorClusterDetail,\r\n                perspectives:nextProps.autherCluster.authorCluster,\r\n                //End of normalized staes\r\n            })\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Author-Clusters\") {\r\n                this.props.getAuthorCluster(nextProps.navbar.selectedOption.id, \"Author Clusters\")\r\n            }\r\n\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Author-Groups\") {\r\n                this.props.getAuthorCluster(nextProps.navbar.selectedOption.id, \"Author Groups\")\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                //authorClustersWithDetails: nextProps.autherCluster.authorClustersWithDetails,\r\n                apiLoading: nextProps.autherCluster.apiLoading,\r\n                apiServerError: nextProps.autherCluster.apiServerError,\r\n                apiNetworkError: nextProps.autherCluster.apiNetworkError,\r\n                //authorClusterConceptsDiscrete: nextProps.autherCluster.authorClusterConceptsDiscrete,\r\n                //Normalized states\r\n                sortedConceptsNames: nextProps.sortedConceptsNames,\r\n                dynamicSortedAuthorCluster: nextProps.dynamicSortedAuthorCluster,\r\n                sortedAuthorClusterDetail: nextProps.sortedAuthorClusterDetail,\r\n                perspectives:nextProps.autherCluster.authorCluster\r\n                //End of normalized staes\r\n            })\r\n        }\r\n        // console.log(\"author clusters State\", this.state);\r\n    }\r\n    onAuthorClick(author) {\r\n        let label = author.author_first + \" \" + author.author_last;\r\n        let value = label;\r\n        let id = author.auth_id;\r\n        let born = author.born;\r\n        let died = author.died;\r\n        let category = \"Authors\"\r\n        this.props.flushAuthorClusterState()\r\n        this.props.setSelectedItem({ label, value, id, born, died, category });\r\n    }\r\n    onLikeClick(id) {\r\n        if (this.state.perspectives[id].isLike) {\r\n            this.props.decreasePerspectiveLike(id);\r\n        }\r\n        else {\r\n            this.props.increasePerspectiveLike(id);\r\n        }\r\n    }\r\n    // getSortedAuthorClusterWithDetailsByAuthorLast(AuthorClusterWithDetails) {\r\n    //     let copyAuthorClusterWithDetails = [...AuthorClusterWithDetails];\r\n    //     copyAuthorClusterWithDetails.sort(function (a, b) {\r\n    //         var textA = a.authorLastName.toUpperCase();\r\n    //         var textB = b.authorLastName.toUpperCase();\r\n    //         return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n    //     });\r\n    //     return copyAuthorClusterWithDetails;\r\n    // }\r\n    // getDynamicSortedAuthorClusterWithDetails(AuthorClusterWithDetails) {\r\n    //     let copyAuthorClusterWithDetails = [...AuthorClusterWithDetails];\r\n    //     if (this.state.authorClicked) {\r\n    //         copyAuthorClusterWithDetails.sort(function (a, b) {\r\n    //             var textA = a.authorLastName.toUpperCase();\r\n    //             var textB = b.authorLastName.toUpperCase();\r\n    //             return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n    //         });\r\n    //     }\r\n    //     else if (this.state.conceptClicked) {\r\n    //         copyAuthorClusterWithDetails.sort(function (a, b) {\r\n    //             var authorA = a.authorLastName.toUpperCase();\r\n    //             var authorB = b.authorLastName.toUpperCase();\r\n    //             var textA = a.conceptName.toUpperCase();\r\n    //             var textB = b.conceptName.toUpperCase();\r\n    //             if (textA === textB) {\r\n    //                 return (authorA < authorB) ? -1 : (authorA > authorB) ? 1 : 0;\r\n    //             }\r\n    //             else {\r\n    //                 if (textA === \"CULTURE\") {\r\n    //                     console.log(\"not author sorting\");\r\n    //                 }\r\n    //                 return (textA < textB) ? -1 : 1;\r\n    //             }\r\n    //             // return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n    //         });\r\n    //     }\r\n    //     return copyAuthorClusterWithDetails;\r\n    // }\r\n    render() {\r\n        let arr = [];\r\n        return (\r\n            <div className=\"overflowhidden\" style={{ overflow: \"hidden\" }}>\r\n                {this.state.selectedOption.id && (this.state.selectedOption.category == \"Author-Clusters\" || this.state.selectedOption.category == \"Author-Groups\") && <div className=\"container-fluid\">\r\n                    {this.state.apiLoading && <div style={{ width: \"100px\", margin: \"auto\", marginTop: \"30vh\" }}>\r\n                        <ReactLoading type={\"balls\"} color={\"red\"} />\r\n                    </div>}\r\n                    {!this.state.apiLoading && !this.state.apiNetworkError && !this.state.apiServerError && <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px  solid pink\", textAlign: \"\" }}>\r\n                            {this.state.sortedConceptsNames && (this.state.sortedConceptsNames.length > 0 && <div style={{ width: \"150px\", margin: \"auto\" }}>\r\n                                {this.state.sortedConceptsNames.map(concept => {\r\n                                    if (concept.name != undefined) {\r\n                                        return <a onClick={() => {\r\n                                            this.props.setClickedState(\r\n                                                {\r\n                                                    authorClicked: false,\r\n                                                    conceptClicked: true,\r\n                                                }\r\n                                            )\r\n\r\n                                        }} href={\"#\" + concept.id} style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }} >{concept.name}</a>\r\n                                    }\r\n                                })}\r\n                            </div>)}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                            <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                <div id=\"img\" style={{ width: \"398px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                    <h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                </div>\r\n                                <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"398px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Positive\r\n                                    </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Critical\r\n                                    </label>\r\n                                    <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                        <input type=\"checkbox\" value=\"\" />Funny\r\n                                    </label>\r\n                                </div>\r\n                                {\r\n                                    this.state.dynamicSortedAuthorCluster && this.state.dynamicSortedAuthorCluster.length > 0 && this.state.dynamicSortedAuthorCluster.map(data => {\r\n                                        return (<div id={data.concept_id}><div id={data.authorLastName} className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\" }} >\r\n                                            <b style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => {\r\n                                                this.props.flushAuthorClusterState();\r\n                                                this.props.setSelectedItem({ label: data.conceptName, value: data.conceptName, id: data.conceptId, category: \"Concepts\" })\r\n                                            }}>{data.pronoun}{\" \"} {data.conceptName}</b>{\" is \"}{data.description}\r\n                                            <div onClick={() => this.onAuthorClick({ auth_id: data.authorId, author_first: data.authorFirstName, author_last: data.authorLastName, born: \"1885\", died: \"1960\" })} style={{ color: \"red\", cursor: \"pointer\" }}>{data.authorFirstName}{\" \"}{data.authorLastName}</div>\r\n                                            <div className=\"pull-right\">\r\n                                                <i style={{ color:data.isLike?\"red\":\"grey\"}} className=\"fa fa-heart\" onClick={()=>{this.onLikeClick(data.id)}}></i>&nbsp;[{data.loves ? data.loves : 0}]&nbsp;&nbsp; <span className=\"contextbutton\" onClick={() => {\r\n                                                    this.setState({\r\n                                                        visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                                                        id: data.id,\r\n                                                    })\r\n                                                }} style={{ cursor: \"pointer\" }}>Context</span>\r\n                                            </div>\r\n                                            <div id={data.id} style={{ marginTop: \"20px\", display: [data.id == this.state.id ? this.state.visibility : \"none\"] }} >{data.long_description}<div style={{ backgroundColor: \"#DCDCDC\" }}>{data.citation}</div></div>\r\n                                        </div></div>);\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-2\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px solid pink\", textAlign: \"\" }}>\r\n                            {this.state.sortedAuthorClusterDetail && this.state.sortedAuthorClusterDetail.length > 0 && this.state.sortedAuthorClusterDetail.map(data => {\r\n                                if (!(arr.includes(data.authorId))) {\r\n                                    arr.push(data.authorId);\r\n                                    return (\r\n                                        <div style={{ padding: \" 0px 10px\", width: \"160px\", margin: \"auto\" }}><a onClick={() => {\r\n                                            this.props.setClickedState(\r\n                                                {\r\n                                                    authorClicked: true,\r\n                                                    conceptClicked: false\r\n                                                }\r\n                                            )\r\n\r\n                                        }} style={{ color: \"black\", textDecoration: \"none\", cursor: \"pointer\" }} href={\"#\" + data.authorLastName}>{(data.authorLastName && data.authorFirstName) ? (data.authorLastName + \", \" + data.authorFirstName) : (data.authorLastName ? data.authorFirstName : (data.authorFirstName ? data.authorFirstName : \"\"))}</a></div>\r\n                                    );\r\n                                }\r\n                            })}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", borderLeft: \"0px\", borderRight: \"3px  solid pink\", borderTop: \"3px  solid pink\", borderBottom: \"3px  solid pink\", textAlign: \"center\" }}>\r\n                            <div className=\"text-center\">\r\n                                This place is for adds\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// const getUniqueSortedConceptNameFromClusterDetails = (clustersWithDetails) => {\r\n//     let uniqueConceptNames = [];\r\n//     let uniqueConcepts = [];\r\n//     clustersWithDetails.map(clusterWithDetails => {\r\n//         if (!uniqueConceptNames.includes(clusterWithDetails.conceptName)) {\r\n//             uniqueConceptNames.push(clusterWithDetails.conceptName);\r\n//             uniqueConcepts.push({ name: clusterWithDetails.conceptName, id: clusterWithDetails.conceptId });\r\n//         }\r\n//     })\r\n//     return uniqueConcepts.sort(conceptsSorter);\r\n// }\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //getAutherClusterDetails: bindActionCreators(getAutherClusterDetails, dispatch),\r\n        //getAutherClusterDetailsViaSupra: bindActionCreators(getAutherClusterDetailsViaSupra, dispatch),\r\n        flushAuthorClusterState: bindActionCreators(flushAuthorClusterState, dispatch),\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        getAuthorCluster: bindActionCreators(getAuthorCluster, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        setClickedState: bindActionCreators(setClickedState, dispatch),\r\n        increasePerspectiveLike:bindActionCreators(increasePerspectiveLike,dispatch),\r\n        decreasePerspectiveLike:bindActionCreators(decreasePerspectiveLike,dispatch)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    // console.log(\"state in mapStateToProps\", state);\r\n    return {\r\n        navbar: state.navbar,\r\n        autherCluster: state.autherCluster,\r\n        sortedConceptsNames: getUniqueSortedConceptNameFromAuthorCluster(state),\r\n        dynamicSortedAuthorCluster: getDynamicSortedAuthorClusterWithDetails(state),\r\n        sortedAuthorClusterDetail: getSortedAuthorClusterWithDetailsByAuthorLast(state)\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AutherCluster));","import {schema} from 'normalizr';\r\nconst authorBioHeading=new schema.Entity('AuthorBioHeadings')\r\nconst authorGroup= new schema.Entity('AuthorGroups',{\r\n    AuthorBioHeading:authorBioHeading\r\n});\r\nconst book=new schema.Entity(\"books\")\r\nconst concept=new schema.Entity('concepts');\r\nconst perspective=new schema.Entity('perspectives',{\r\n    Concept:concept\r\n})\r\nexport const authorSchema=new schema.Entity(\"authors\",{\r\n    Perspectives:[perspective],\r\n    AuthorGroups:[authorGroup],\r\n    Books:[book]\r\n});","import { bindActionCreators } from \"redux\";\r\nimport {normalize} from 'normalizr';\r\nimport {authorSchema} from '../schema/authorSchema';\r\nimport axios from 'axios';\r\nlet request = require(\"request\");\r\nexport function flushAuthorState() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FLUSH_AUTHOR\",\r\n        })\r\n    }\r\n}\r\nexport function increasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"increase\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = true;\r\n                dispatch({\r\n                    type: 'AUTHOR_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function decreasePerspectiveLike(id) {\r\n    let like = {};\r\n    like.type = \"decrease\";\r\n    like.id = id;\r\n    return dispatch => {\r\n        axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/like`, { like })\r\n            .then(res => {\r\n                res.data.perspective.isLike = false;\r\n                dispatch({\r\n                    type: 'AUTHOR_PERSPECTIVE_LIKE',\r\n                    payload: res.data.perspective\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function getAuthorInfluencedByAuthors(id) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"GET_AUTHOR_AUTHORS_PENDING\"\r\n        })\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authors/${id}?relationships=true&withSelfAssociationsOnly=true`).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n               // getPictureLinks(data.data.data);\r\n                const author_authors_details =data.data.data;\r\n                dispatch({\r\n                    type: \"GET_AUTHOR_AUTHORS_SUCCESS\",\r\n                    payload: author_authors_details,\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"GET_AUTHOR_AUTHORS_SERVER_ERROR\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"GET_AUTHOR_AUTHORS_NETWORK_ERROR\"\r\n            })\r\n            console.log('Error While fetching author_author details from api', error);\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction getPictureLinks(data){\r\n    let author_lastName=(((data.lastName).split(\" \")).join(\"+\")).toLowerCase();\r\n    let author_firstName=(((data.firstName).split(\" \")).join(\"+\")).toLowerCase();\r\n    author_firstName=((author_firstName).split(\".\")).join(\"\");\r\n    let author_image=author_lastName.concat(\"+\"+author_firstName+\".jpg\");\r\n    data.pictureLink=`https://conceptionary-images.s3.amazonaws.com/${author_image}`;\r\n    return data;\r\n}\r\n\r\nexport function getAuthorDetails(id) {\r\n    \r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"REQUEST_STARTED\"\r\n        })\r\n        axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/authors/${id}?relationships=true`).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType == 'success') {\r\n                const authorDetailsFromApi =getPictureLinks( data.data.data);\r\n                const normalizedData =normalize(authorDetailsFromApi,authorSchema)\r\n                console.log(normalizedData)\r\n                dispatch({\r\n                    type: \"GET_AUTHOR_DETAILS\",\r\n                    payload: authorDetailsFromApi,\r\n                })\r\n                dispatch({\r\n                    type:'AUTHOR_DETAILS',\r\n                    payload:normalizedData.entities\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"SERVER_ERROR\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            dispatch({\r\n                type: \"NETWORK_ERROR\"\r\n            })\r\n            console.log('Error While fetching author details from api', error);\r\n        })\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport \"./AuthorPage.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { setSelectedCategory, setSelectedItem, flushState, addTag } from \"../../actions/navbaractions\";\r\nimport { flushAuthorClusterState } from '../../actions/autherCluster';\r\nimport { getAuthorGroups } from \"../../utilities\";\r\nimport { getUniqueConcept, getSortedPerspectivesByConceptName, getAuthorBioData, getUniqueAuthorBooks } from '../../selectors';\r\nimport queryString from \"query-string\";\r\nimport Axios from 'axios';\r\nimport ReactLoading from \"react-loading\";\r\nimport { getAuthorDetails, getAuthorInfluencedByAuthors,flushAuthorState,increasePerspectiveLike,decreasePerspectiveLike } from \"../../actions/authorActions\";\r\nclass AuthorPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: \"\",\r\n            selectedOption: this.props.navbar.selectedOption,\r\n            // apiLoading: this.props.author.apiLoading,\r\n            // apiServerError: this.props.author.apiServerError,\r\n            // apiNetworkError: this.props.author.apiNetworkError,\r\n            //authorsWithDetails: this.props.author.authorsWithDetails,\r\n            // author_authors_apiLoading: this.props.author.author_authors_apiLoading,\r\n            // author_authors_apiServerError: this.props.author.author_authors_apiServerError,\r\n            // author_authors_apiNetworkError: this.props.author.author_authors_apiNetworkError,\r\n            author_authors: this.props.author.author_authors,\r\n            authorInfluencedByAuthors: this.props.author.authorInfluencedByAuthors,\r\n            authorInfluencedOnAuthors: this.props.author.author_authors.AuthorInfluenceAuthors,\r\n            authorConvoWithAuthors: this.props.author.author_authors.AuthorConvoAuthors,\r\n            id: \"\",\r\n            visibility: \"none\",\r\n            showBooks: false,\r\n            sortedAuthorInfluencedByAuthors: setInitialsortedAuthorInfluencedByAuthors(this.props.author.authorInfluencedByAuthors),\r\n            sortedAuthorInfluencedOnAuthors: setInitialsortedAuthorInfluencedOnAuthors(this.props.author.author_authors.AuthorInfluenceAuthors),\r\n            sortedAuthorConvoWithAuthors: setInitialsortedAuthorConvoWithAuthors(this.props.author.author_authors.AuthorConvoAuthors),\r\n            index: 0,\r\n            index1: 0,\r\n            index2: 0,\r\n            loading: this.props.author.loading,\r\n            //normalized states\r\n            //authorBioHeadings: this.props.author.authorBioHeadings,\r\n            //authorGroups: this.props.author.authorGroups,\r\n            authorPerspectives: this.props.author.authorPerspectives,\r\n            author: this.props.author.author,\r\n            concepts: this.props.author.concepts,\r\n            UniqueConcepts: this.props.uniqueconcepts,\r\n            sortedPerspectives: this.props.sortedperpectives,\r\n            authorBio: this.props.authorBio,\r\n            authorBooksById: this.props.authorBooksById,\r\n            authorBooks: this.props.author.authorBooks\r\n            //authorOnConcepts:this.props.author.concept\r\n            //end normalized states\r\n        }\r\n        this.getSortedAuthorInfluencedByAuthors = this.getSortedAuthorInfluencedByAuthors.bind(this);\r\n        //this.getSortedAuthorInfluencedOnAuthors = this.getSortedAuthorInfluencedOnAuthors.bind(this);\r\n        //this.getSortedAuthorConvoWithAuthors = this.getSortedAuthorConvoWithAuthors.bind(this);\r\n        this.reverse = this.reverse.bind(this);\r\n        this.forward = this.forward.bind(this);\r\n        this.reverse1 = this.reverse1.bind(this);\r\n        this.forward1 = this.forward1.bind(this);\r\n        this.reverse2 = this.reverse2.bind(this);\r\n        this.forward2 = this.forward2.bind(this);\r\n        this.onAuthorClick = this.onAuthorClick.bind(this);\r\n        this.onConceptClick = this.onConceptClick.bind(this);\r\n        this.onBioClick = this.onBioClick.bind(this);\r\n        this.onLikeClick=this.onLikeClick.bind(this);\r\n        if (this.props.navbar.selectedOption) {\r\n            if (this.props.navbar.selectedOption.id) {\r\n                if (this.props.navbar.selectedOption.category == \"Authors\") {\r\n                    this.props.getAuthorDetails(this.props.navbar.selectedOption.id);\r\n                    this.props.getAuthorInfluencedByAuthors(this.props.navbar.selectedOption.id);\r\n                    //  this.props.getAuthorInfluencedOnAuthors(this.props.navbar.selectedOption.id);\r\n                    //  this.props.getAuthorConvoWithAuthors(this.props.navbar.selectedOption.id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getAuthor = (author) => {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/author`, { author }).then(data => {\r\n                if (data.data.obj) {\r\n                    let result = data.data.obj.selectedOption;\r\n                    resolve(result);\r\n                }\r\n                resolve(null);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n    async componentWillMount() {\r\n        if (this.props.match.params.name) {\r\n            if (this.props.match.params.name && queryString.parse(this.props.location.search).filters) {\r\n                let filters = [];\r\n                let queryFilters = queryString.parse(this.props.location.search).filters;\r\n                if (typeof queryFilters === \"string\") {\r\n                    filters.push(queryFilters);\r\n                } else {\r\n                    filters = queryFilters;\r\n                }\r\n                let author_group = await getAuthorGroups(filters);\r\n                let author = {};\r\n                author.name = this.props.match.params.name;\r\n                author.groupIds = author_group.map(group => group.id);\r\n                let result = await this.getAuthor(author);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.addTag(author_group);\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n            } else {\r\n                let author = {};\r\n                author.name = this.props.match.params.name;\r\n                author.groupIds = [];\r\n                let result = await this.getAuthor(author);\r\n                this.props.setSelectedItem(result);\r\n                this.setState({\r\n                    selectedOption: result\r\n                });\r\n                this.props.getAuthorDetails(this.state.selectedOption.id);\r\n                this.props.getAuthorInfluencedByAuthors(this.state.selectedOption.id);\r\n\r\n            }\r\n        }\r\n    }\r\n    async componentWillReceiveProps(nextProps) {\r\n\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n            if (nextProps.navbar.selectedOption != undefined) {\r\n                let author = {};\r\n                author.name = nextProps.navbar.selectedOption.value;\r\n                author.groupIds = nextProps.navbar.tags.map(x => x.id);\r\n                let result = await this.getAuthor(author);\r\n                if (result) {\r\n                    this.props.setSelectedItem(result);\r\n                    this.setState({\r\n                        selectedOption: result\r\n                    });\r\n                    this.props.getAuthorDetails(this.state.selectedOption.id);\r\n                    this.props.getAuthorInfluencedByAuthors(this.state.selectedOption.id);\r\n                } else {\r\n                    this.props.history.push(\"/Message\");\r\n                }\r\n\r\n            }\r\n        }\r\n        if (this.state.selectedOption != nextProps.navbar.selectedOption) {\r\n            this.props.flushAuthorState();\r\n            if (nextProps.navbar.selectedOption.id && nextProps.navbar.selectedOption.category == \"Authors\") {\r\n                this.props.getAuthorDetails(nextProps.navbar.selectedOption.id);\r\n                //this.props.getAuthorBio(nextProps.navbar.selectedOption.id);\r\n                //this.props.getAuthorBooks(nextProps.navbar.selectedOption.id);\r\n                this.props.getAuthorInfluencedByAuthors(nextProps.navbar.selectedOption.id);\r\n                //  this.props.getAuthorInfluencedOnAuthors(nextProps.navbar.selectedOption.id);\r\n                //  this.props.getAuthorConvoWithAuthors(nextProps.navbar.selectedOption.id);\r\n            }\r\n            this.setState({\r\n                selectedOption: nextProps.navbar.selectedOption,\r\n                apiLoading: nextProps.author.apiLoading,\r\n                apiServerError: nextProps.author.apiServerError,\r\n                apiNetworkError: nextProps.author.apiNetworkError,\r\n                //authorsWithDetails: nextProps.author.authorsWithDetails,\r\n                author_authors_apiLoading: nextProps.author.author_authors_apiLoading,\r\n                author_authors_apiServerError: nextProps.author.author_authors_apiServerError,\r\n                author_authors_apiNetworkError: nextProps.author.author_authors_apiNetworkError,\r\n                author_authors: nextProps.author.author_authors,\r\n                authorInfluencedByAuthors: nextProps.author.authorInfluencedByAuthors,\r\n                authorInfluencedOnAuthors: nextProps.author.author_authors.AuthorInfluenceAuthors,\r\n                authorConvoWithAuthors: nextProps.author.author_authors.AuthorConvoAuthors,\r\n                sortedAuthorInfluencedByAuthors: setInitialsortedAuthorInfluencedByAuthors(nextProps.author.authorInfluencedByAuthors),\r\n                sortedAuthorInfluencedOnAuthors: setInitialsortedAuthorInfluencedOnAuthors(nextProps.author.author_authors.AuthorInfluenceAuthors),\r\n                sortedAuthorConvoWithAuthors: setInitialsortedAuthorConvoWithAuthors(nextProps.author.author_authors.AuthorConvoAuthors),\r\n                //normalized states\r\n                //authorBioHeadings: nextProps.author.authorBioHeadings,\r\n                //authorGroups: nextProps.author.authorGroups,\r\n                authorPerspectives: nextProps.author.authorPerspectives,\r\n                author: nextProps.author.author,\r\n                concepts: nextProps.author.concepts,\r\n                //authorOnConcepts:nextProps.author.concept\r\n                UniqueConcepts: nextProps.uniqueconcepts,\r\n                sortedPerspectives: nextProps.sortedperpectives,\r\n                authorBio: nextProps.authorBio,\r\n                authorBooksById: nextProps.authorBooksById,\r\n                authorBooks: nextProps.author.authorBooks\r\n                //end normalized states\r\n\r\n            })\r\n            // console.log(\"Here i m\")\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                //authorsWithDetails: nextProps.author.authorsWithDetails,\r\n                apiLoading: nextProps.author.apiLoading,\r\n                apiServerError: nextProps.author.apiServerError,\r\n                apiNetworkError: nextProps.author.apiNetworkError,\r\n                author_authors_apiLoading: nextProps.author.author_authors_apiLoading,\r\n                author_authors_apiServerError: nextProps.author.author_authors_apiServerError,\r\n                author_authors_apiNetworkError: nextProps.author.author_authors_apiNetworkError,\r\n                author_authors: nextProps.author.author_authors,\r\n                authorInfluencedByAuthors: nextProps.author.authorInfluencedByAuthors,\r\n                authorInfluencedOnAuthors: nextProps.author.author_authors.AuthorInfluenceAuthors,\r\n                authorConvoWithAuthors: nextProps.author.author_authors.AuthorConvoAuthors,\r\n                //sortedAuthorInfluencedByAuthors: setInitialsortedAuthorInfluencedByAuthors(nextProps.author.authorInfluencedByAuthors),\r\n                sortedAuthorInfluencedOnAuthors: setInitialsortedAuthorInfluencedOnAuthors(nextProps.author.author_authors.AuthorInfluenceAuthors),\r\n                sortedAuthorConvoWithAuthors: setInitialsortedAuthorConvoWithAuthors(nextProps.author.author_authors.AuthorConvoAuthors),\r\n                //normalized states\r\n                //authorBioHeadings: nextProps.author.authorBioHeadings,\r\n                //authorGroups: nextProps.author.authorGroups,\r\n                authorPerspectives: nextProps.author.authorPerspectives,\r\n                author: nextProps.author.author,\r\n                concepts: nextProps.author.concepts,\r\n                UniqueConcepts: nextProps.uniqueconcepts,\r\n                sortedPerspectives: nextProps.sortedperpectives,\r\n                authorBio: nextProps.authorBio,\r\n                authorBooksById: nextProps.authorBooksById,\r\n                authorBooks: nextProps.author.authorBooks\r\n                //authorOnConcepts:nextProps.author.concept\r\n                //end normalized states\r\n\r\n            })\r\n        }\r\n        // console.log(\"Author State\", this.state);\r\n\r\n    }\r\n    onLikeClick(data) {\r\n        if (this.state.authorPerspectives[data.id].isLike) {\r\n            this.props.decreasePerspectiveLike(data.id);\r\n        }\r\n        else {\r\n            this.props.increasePerspectiveLike(data.id);\r\n        }\r\n    }\r\n    onAuthorClick(author) {\r\n        let label = author.firstName + \" \" + author.lastName;\r\n        let value = label;\r\n        let id = author.id;\r\n        let born = author.dob;\r\n        let died = author.dod;\r\n        let category = \"Authors\";\r\n        this.props.flushAuthorState();\r\n        console.log(category);\r\n        this.props.setSelectedItem({ label, value, id, born, died, category });\r\n\r\n    }\r\n    onBioClick(bio) {\r\n        let label = bio.distinct_grouping;\r\n        let value = label;\r\n        let id = bio.distinct_grouping_id;\r\n        let category = \"Author-Groups\"\r\n        this.props.flushAuthorState();\r\n        this.props.flushAuthorClusterState();\r\n        this.props.setSelectedItem({ label, value, id, category, via: \"group\" });\r\n    }\r\n    onConceptClick(concept) {\r\n\r\n        let label = this.state.concepts[concept.Concept].name;\r\n        let value = label;\r\n        let id = concept.ConceptId;\r\n        let category = \"Concepts\"\r\n        this.props.flushAuthorState();\r\n        this.props.setSelectedItem({ label, value, id, category });\r\n    }\r\n    // getSortedAuthorConvoWithAuthors(index) {\r\n    //     let rtnArray = [];\r\n    //     rtnArray = this.state.authorConvoWithAuthors.slice(index, index + 3);\r\n    //     // console.log(\"Slice params\", index, index + 3);\r\n    //     // console.log(\"Rtn array i\", rtnArray);\r\n    //     this.setState({\r\n    //         sortedAuthorConvoWithAuthors: rtnArray,\r\n    //     })\r\n    // }\r\n    getSortedAuthorInfluencedByAuthors(index) {\r\n        let rtnArray = [];\r\n        rtnArray = this.state.authorInfluencedByAuthors.slice(index, index + 3);\r\n        // console.log(\"Slice params\", index, index + 3);\r\n        // console.log(\"Rtn array i\", rtnArray);\r\n        this.setState({\r\n            sortedAuthorInfluencedByAuthors: rtnArray,\r\n        })\r\n    }\r\n    // getSortedAuthorInfluencedOnAuthors(index) {\r\n    //     let rtnArray = [];\r\n    //     rtnArray = this.state.authorInfluencedOnAuthors.slice(index, index + 3);\r\n    //     // console.log(\"Slice params\", index, index + 3);\r\n    //     // console.log(\"Rtn array i\", rtnArray);\r\n    //     this.setState({\r\n    //         sortedAuthorInfluencedOnAuthors: rtnArray,\r\n    //     })\r\n    // }\r\n    reverse() {\r\n        let index = this.state.index;\r\n        // console.log(\"Index reverse\", index);\r\n        if (index >= 3) {\r\n            this.setState({ index: (index - 3) })\r\n            this.getSortedAuthorInfluencedByAuthors(index - 3);\r\n        }\r\n\r\n    }\r\n    reverse1() {\r\n        let index = this.state.index1;\r\n        // console.log(\"Index reverse\", index);\r\n        if (index >= 3) {\r\n            this.setState({ index1: (index - 3) })\r\n            this.getSortedAuthorInfluencedOnAuthors(index - 3);\r\n        }\r\n\r\n    }\r\n    reverse2() {\r\n        let index = this.state.index2;\r\n        // console.log(\"Index reverse\", index);\r\n        if (index >= 3) {\r\n            this.setState({ index2: (index - 3) })\r\n            this.getSortedAuthorConvoWithAuthors(index - 3);\r\n        }\r\n\r\n    }\r\n    forward() {\r\n        let totalLength = this.state.authorInfluencedByAuthors.length;\r\n        let index = this.state.index;\r\n        // console.log(\"Index forward\", index);\r\n        if (index + 3 < totalLength) {\r\n            this.setState({ index: (index + 3) })\r\n            this.getSortedAuthorInfluencedByAuthors(index + 3);\r\n        }\r\n\r\n    }\r\n    forward1() {\r\n        let totalLength = this.state.authorInfluencedOnAuthors.length;\r\n        let index = this.state.index1;\r\n        // console.log(\"Index forward\", index);\r\n        if (index + 3 < totalLength) {\r\n            this.setState({ index1: (index + 3) })\r\n            this.getSortedAuthorInfluencedOnAuthors(index + 3);\r\n        }\r\n\r\n    }\r\n    forward2() {\r\n        let totalLength = this.state.authorConvoWithAuthors.length;\r\n        let index = this.state.index2;\r\n        // console.log(\"Index forward\", index);\r\n        if (index + 3 < totalLength) {\r\n            this.setState({ index2: (index + 3) })\r\n            this.getSortedAuthorConvoWithAuthors(index + 3);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"overflowhidden \" style={{ overflow: \"hidden\" }}>\r\n                {this.state.selectedOption.id && this.state.selectedOption.category == \"Authors\" && <div className=\"container-fluid\">\r\n                    {this.state.apiLoading && <div style={{ width: \"100px\", margin: \"auto\", marginTop: \"30vh\" }}>\r\n                        <ReactLoading type={\"balls\"} color={\"red\"} />\r\n                    </div>}\r\n                    {!this.state.apiLoading && <div>\r\n                        {!this.state.showBooks && <div className=\"row\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px  solid pink\", textAlign: \"\" }}>\r\n                                <div style={{ width: \"50px\", margin: \"auto\" }}><button className=\"btn btn-link\" style={{ cursor: \"pointer\" }} onClick={() => this.setState({ showBooks: true })} >Books</button></div>\r\n                                {\r\n                                    <div style={{ width: \"150px\", margin: \"auto\" }}>\r\n                                        {this.state.UniqueConcepts && this.state.UniqueConcepts.length > 0 && this.state.UniqueConcepts.map(concept => {\r\n                                            if (concept.discrete_author_name != undefined) {\r\n                                                return <a href={\"#\" + concept.discrete_author_name_id} style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }} onClick={() => {\r\n                                                }}>{concept.discrete_author_name}</a>\r\n                                            }\r\n\r\n                                        })}\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                                <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                    <div id=\"img\" style={{ width: \"398px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                        {/*<h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                        <h5 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\", display: \"inline-block\" }} className=\"float-right\">{(this.state.selectedOption.born && this.state.selectedOption.died) ? this.state.selectedOption.born + \" - \" + this.state.selectedOption.died : \"HUL\"}</h5>\r\n                                        */}\r\n                                        <img src={this.state.author.pictureLink} alt={this.state.selectedOption.label} style={{ width: \"100%\", objectFit: \"cover\" }} ></img>\r\n                                    </div>\r\n                                    <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"398px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Positive\r\n                                        </label>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Critical\r\n                                        </label>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Funny\r\n                                        </label>\r\n                                    </div>\r\n                                    {\r\n                                        this.state.sortedPerspectives && this.state.sortedPerspectives.length > 0 && this.state.sortedPerspectives.map(data => {\r\n                                            return (<div id={data.ConceptId}><div className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\" }} >\r\n                                                <b style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => this.onConceptClick(data)}>{data.pronoun}{\" \"} {this.state.concepts[data.Concept].name}</b>{\" is \"}{data.description}\r\n                                                <div style={{ color: \"red\" }}>{this.state.author.firstName}{\" \"}{this.state.author.lastName}</div>\r\n                                                <div className=\"pull-right\">\r\n                                                    <i style={{ color:data.isLike?\"red\":\"grey\" }} className=\"fa fa-heart \" onClick={() => { this.onLikeClick(data) }}></i>&nbsp;[{data.loves ? data.loves : \"0\"}]&nbsp;&nbsp; <span className=\"contextbutton\" onClick={() => {\r\n                                                        this.setState({\r\n                                                            visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                                                            id: data.id,\r\n                                                        })\r\n                                                    }} style={{ cursor: \"pointer\" }}>Context</span>\r\n                                                </div>\r\n                                                <div id={data.id} style={{ marginTop: \"20px\", display: [data.id == this.state.id ? this.state.visibility : \"none\"] }} >{data.longDescription}<div style={{ backgroundColor: \"#DCDCDC\" }}>{data.citation}</div></div>\r\n                                            </div></div>);\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px solid pink\" }}>\r\n                                {this.state.authorBio && this.state.authorBio.length > 0 && this.state.authorBio.map(item => {\r\n                                    return (<div style={{ width: \"340px\", margin: \"auto\" }}><h6 style={{ color: \"red\" }}>{item.heading.charAt(0).toUpperCase() + item.heading.slice(1)}:</h6>\r\n                                        {item.values.map(v => {\r\n\r\n                                            return <span style={{ display: \"inline-block\" }}><Link style={{ cursor: \"pointer\" }} to=\"author-clusters\" onClick={() => this.onBioClick({ distinct_grouping: v.name, distinct_grouping_id: v.id })}>{v.name}</Link>&nbsp;&nbsp;</span>\r\n                                        })}\r\n\r\n                                    </div>);\r\n                                })\r\n                                }\r\n                                <div id=\"authorInfluencedByAuthors\" style={{ width: \"340px\", margin: \"auto\" }}>\r\n                                    {/*this.state.sortedAuthorInfluencedByAuthors && this.state.sortedAuthorInfluencedByAuthors.length > 0 && <div>\r\n                                        <h6 style={{ color: \"red\" }}>Influenced By:</h6>\r\n                                        <div className=\"dytb\" >\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.reverse()} className=\"fa fa-angle-left dytbc\" />\r\n                                            {this.state.sortedAuthorInfluencedByAuthors.map(author => {\r\n                                                return (\r\n                                                    <div onClick={() => this.onAuthorClick(author)} style={{ marginRight: \"8px\", display: \"inline-block\", marginLeft: \"8px\", width: \"85px\", maxHeight: \"180px\", border: \"1px solid white\", borderRadius: \"3px\", cursor: \"pointer\" }}>\r\n                                                        <div style={{ width: \"83px\", minHeight: \"70px\", backgroundColor: \"yellow\" }}></div>\r\n                                                        <div style={{ fontSize: \"13px\", width: \"83px\", overflow: \"hidden\", textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{author.author_first + author.author_last}</div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.forward()} className=\"fa fa-angle-right dytbc\" ></i>\r\n                                        </div>\r\n                                    </div>*/\r\n                                    }\r\n                                    {this.state.sortedAuthorInfluencedOnAuthors && this.state.sortedAuthorInfluencedOnAuthors.length > 0 && <div>\r\n                                        <h6 style={{ color: \"red\" }}>Influenced On:</h6>\r\n                                        <div className=\"dytb\">\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.reverse1()} className=\"fa fa-angle-left dytbc\" />\r\n                                            {this.state.sortedAuthorInfluencedOnAuthors.map(author => {\r\n                                                return (\r\n                                                    <div onClick={() => this.onAuthorClick(author)} style={{ marginRight: \"8px\", display: \"inline-block\", marginLeft: \"8px\", width: \"85px\", maxHeight: \"180px\", border: \"1px solid white\", borderRadius: \"3px\", cursor: \"pointer\" }}>\r\n                                                        <div style={{ width: \"83px\", minHeight: \"70px\", backgroundColor: \"yellow\" }}>\r\n                                                            <img src={`https://conceptionary-images.s3.amazonaws.com/${author.lastName}+${author.firstName}.jpg`} alt={author.firstName + \" \" + author.lastName}></img>\r\n                                                        </div>\r\n                                                        <div style={{ fontSize: \"13px\", width: \"83px\", overflow: \"hidden\", textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{author.firstName + author.lastName}</div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.forward1()} className=\"fa fa-angle-right dytbc\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    }\r\n                                    {this.state.sortedAuthorConvoWithAuthors && this.state.sortedAuthorConvoWithAuthors.length > 0 && <div>\r\n                                        <h6 style={{ color: \"red\" }}>In Conversation with:</h6>\r\n                                        <div className=\"dytb\">\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.reverse2()} className=\"fa fa-angle-left dytbc\" />\r\n                                            {this.state.sortedAuthorConvoWithAuthors.map(author => {\r\n\r\n                                                return (\r\n                                                    <div onClick={() => this.onAuthorClick(author)} style={{ marginRight: \"8px\", display: \"inline-block\", marginLeft: \"8px\", width: \"85px\", maxHeight: \"180px\", border: \"1px solid white\", borderRadius: \"3px\", cursor: \"pointer\" }}>\r\n                                                        <div style={{ width: \"83px\", minHeight: \"70px\", backgroundColor: \"yellow\" }}>\r\n                                                            <img src={`https://conceptionary-images.s3.amazonaws.com/${author.lastName}+${author.firstName}.jpg`} alt={author.firstName + \" \" + author.lastName}></img>\r\n                                                        </div>\r\n                                                        <div style={{ fontSize: \"13px\", width: \"83px\", overflow: \"hidden\", textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{author.firstName + author.lastName}</div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={() => this.forward2()} className=\"fa fa-angle-right dytbc\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-1\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", borderLeft: \"0px\", borderRight: \"3px  solid pink\", borderTop: \"3px  solid pink\", borderBottom: \"3px  solid pink\", textAlign: \"center\", cursor: \"pointer\" }}>\r\n                                <div className=\"text-center\">\r\n                                    This place is for adds\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                        {/* new row for books */}\r\n                        {this.state.showBooks && <div className=\"row\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-3\" style={{ borderRadius: \"3px\", backgroundColor: \"white\", height: \"89vh\", overflow: \"auto\", border: \"3px  solid pink\", textAlign: \"\" }}>\r\n                                <div style={{ width: \"150px\", margin: \"auto\", marginTop: \"10px\" }}>\r\n                                    <div style={{ cursor: \"pointer\" }} onClick={() => this.setState({ showBooks: false })}><i style={{ width: \"16px\" }} className=\"fa  fa-arrow-left\" />&nbsp;&nbsp;<span style={{ fontSize: \"16px\" }} >Go Back</span></div>\r\n                                    <h3>Books</h3>\r\n                                    {this.state.authorBooksById && this.state.authorBooksById.length > 0 && this.state.authorBooksById.map(book => {\r\n                                        return (\r\n                                            <a href={\"#\" + book.discrete_book_id} style={{ cursor: \"pointer\", textDecoration: \"none\", color: \"black\", display: \"block\" }} onClick={() => {\r\n                                            }}>{book.title}</a>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-4\" style={{ borderRadius: \"3px\", backgroundColor: \"#F6F0EF\", height: \"89vh\", borderBottom: \"3px solid pink\", overflow: \"auto\" }}>\r\n                                <div id=\"main-content\" style={{ backgroundColor: \"#F6F0EF\" }}>\r\n                                    <div id=\"img\" style={{ width: \"398px\", height: \"280px\", backgroundColor: \"red\" }}>\r\n                                        <h4 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\" }} className=\"pull-right\">{this.state.selectedOption ? this.state.selectedOption.label : \"\"}</h4>\r\n                                        <h5 style={{ zIndex: \"3\", padding: \"10px\", color: \"white\", display: \"inline-block\" }} className=\"float-right\">{(this.state.selectedOption.born && this.state.selectedOption.died) ? this.state.selectedOption.born + \" - \" + this.state.selectedOption.died : \"HUL\"}</h5>\r\n                                    </div>\r\n                                    <div style={{ marginTop: \"10px\", border: \"1px solid white\", paddingTop: \"5px\", borderRadius: \"5px\", width: \"398px\", textAlign: \"center\", backgroundColor: \"white\" }}>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Positive\r\n                                    </label>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Critical\r\n                                    </label>\r\n                                        <label class=\"checkbox-inline\" style={{ marginRight: \"10px\" }}>\r\n                                            <input type=\"checkbox\" value=\"\" />Funny\r\n                                    </label>\r\n                                    </div>\r\n                                    {this.state.author && this.state.author.Books && this.state.author.Books.length > 0 && this.state.author.Books.map(book => {\r\n                                        {\r\n                                            return this.state.authorBooks[book].BookDescriptions && this.state.authorBooks[book].BookDescriptions.length > 0 && this.state.authorBooks[book].BookDescriptions.map(bookDescription => {\r\n                                                return (<div id={book} className=\"clearfix\" style={{ marginTop: \"10px\", backgroundColor: \"white\", padding: \"10px\", border: \"1px solid white\", borderRadius: \"5px\" }} >\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col col-md-2\">\r\n                                                            <div style={{ width: \"60px\", minHeight: \"80px\", background: \"red\" }}></div>\r\n                                                        </div>\r\n                                                        <div className=\"col col-md-10\">\r\n                                                            <h6>{this.state.authorBooks[book].title}</h6>\r\n                                                            <div style={{ color: \"black\" }}>{bookDescription.description}</div>\r\n                                                            <div className=\"pull-right\">\r\n                                                                <a className=\"contextbutton\" onClick={() => {\r\n                                                                    this.setState({\r\n                                                                        visibility: this.state.visibility == \"none\" ? \"block\" : \"none\",\r\n                                                                        id: book.id,\r\n                                                                    })\r\n                                                                }} style={{ cursor: \"pointer\" }}>Context</a>\r\n                                                            </div>\r\n                                                            <div id={book} style={{ marginTop: \"20px\", display: [book == this.state.id ? this.state.visibility : \"none\"] }} >{bookDescription.source}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>);\r\n                                            })\r\n                                        }\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    }\r\n                </div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst setInitialsortedAuthorInfluencedByAuthors = (data) => {\r\n    if (data) {\r\n        if (data.length > 0) {\r\n            if (data.length > 3) {\r\n                return data.slice(0, 3);\r\n            }\r\n            else {\r\n                return data\r\n            }\r\n        }\r\n    }\r\n}\r\nconst setInitialsortedAuthorInfluencedOnAuthors = (data) => {\r\n    if (data) {\r\n        if (data.length > 0) {\r\n            if (data.length > 3) {\r\n                return data.slice(0, 3);\r\n            }\r\n            else {\r\n                return data\r\n            }\r\n        }\r\n    }\r\n}\r\nconst setInitialsortedAuthorConvoWithAuthors = (data) => {\r\n    // console.log('Here get me ', data);\r\n    if (data) {\r\n        if (data.length > 0) {\r\n            if (data.length > 3) {\r\n                return data.slice(0, 3);\r\n            }\r\n            else {\r\n                return data\r\n            }\r\n        }\r\n    }\r\n}\r\n// const renderAuthorBio = (authorBio) => {\r\n//     let desiredArray = [];\r\n//     let uniqueSupraIds = [];\r\n//     authorBio.forEach(element => {\r\n//         if (!(uniqueSupraIds.includes(element.supra_id))) {\r\n//             uniqueSupraIds.push(element.supra_id);\r\n//             // console.log(\"Here is element--------------------->\", element);\r\n//             desiredArray.push({ supra_id: element.supra_id, heading: element.author_supra, values: [{ distinct_grouping: element.distinct_grouping, distinct_grouping_id: element.distinct_grouping_id }] })\r\n//         }\r\n//         else {\r\n//             // console.log(\"Here in else\")\r\n//             for (let i = 0; i < desiredArray.length; i++) {\r\n//                 if (desiredArray[i].supra_id === element.supra_id) {\r\n//                     desiredArray[i].values.push({ distinct_grouping: element.distinct_grouping, distinct_grouping_id: element.distinct_grouping_id });\r\n//                 }\r\n//             }\r\n//         }\r\n//     })\r\n//     return desiredArray;\r\n// }\r\n// const getUniqueBookNamesWithIds = (authorBooks) => {\r\n//     // console.log(\"Recievce author books\", authorBooks)\r\n//     let uniqueBookNameWithId = [];\r\n//     let uniqueBookIds = [];\r\n//     authorBooks.forEach(e => {\r\n//         if (!(uniqueBookIds.indexOf(e.id) > -1)) {\r\n//             uniqueBookIds.push(e.id);\r\n//             let discrete_book_id = e.id;\r\n//             let title = e.title;\r\n//             uniqueBookNameWithId.push({ discrete_book_id, title });\r\n//         }\r\n//     })\r\n//     return uniqueBookNameWithId;\r\n// }\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        getAuthorDetails: bindActionCreators(getAuthorDetails, dispatch),\r\n        // getAuthorBio: bindActionCreators(getAuthorBio, dispatch),\r\n        //getAuthorBooks: bindActionCreators(getAuthorBooks, dispatch),\r\n        getAuthorInfluencedByAuthors: bindActionCreators(getAuthorInfluencedByAuthors, dispatch),\r\n        // getAuthorInfluencedOnAuthors: bindActionCreators(getAuthorInfluencedOnAuthors, dispatch),\r\n        //getAuthorConvoWithAuthors: bindActionCreators(getAuthorConvoWithAuthors, dispatch),\r\n        flushAuthorState: bindActionCreators(flushAuthorState, dispatch),\r\n        flushAuthorClusterState: bindActionCreators(flushAuthorClusterState, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        increasePerspectiveLike:bindActionCreators(increasePerspectiveLike,dispatch),\r\n        decreasePerspectiveLike:bindActionCreators(decreasePerspectiveLike,dispatch)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        navbar: state.navbar,\r\n        author: state.author,\r\n        uniqueconcepts: getUniqueConcept(state),\r\n        sortedperpectives: getSortedPerspectivesByConceptName(state),\r\n        authorBio: getAuthorBioData(state),\r\n        authorBooksById: getUniqueAuthorBooks(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorPage);","import axios from 'axios';\r\nexport default function setAuthorizationToken(token) {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\r\n    }\r\n    else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n}","import axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport setAuthorizationToken from \"../utils/setAuthorizationToken\";\r\nexport function setCurrentUser(user) {\r\n    return {\r\n        type: \"SET_CURRENT_USER\",\r\n        user\r\n    }\r\n}\r\nexport function logOut() {\r\n    return dispatch => {\r\n        localStorage.removeItem('jwtToken');\r\n        setAuthorizationToken(false);\r\n        dispatch({\r\n            type: \"LOG_OUT\",\r\n        })\r\n    }\r\n}\r\n\r\n// new implementation\r\n\r\nexport function userLoginRequest(userData) {\r\n\r\n    return dispatch => {\r\n        return axios.post(\"http://localhost:3002/api/rest/v1/login\", userData, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        })\r\n            .then(res => {\r\n                const token = res.data.token;\r\n                localStorage.setItem('jwtToken', token);\r\n                setAuthorizationToken(token);\r\n                dispatch(setCurrentUser(jwt.decode(token)));\r\n            });\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport validateLogin from \"../../helpers/validateLogin\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport classnames from \"classnames\";\r\nimport { userLoginRequest } from \"../../actions/loginActions\";\r\nimport \"./Login.css\";\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {},\r\n            isLoading: false,\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n    isValid(data) {\r\n        const { errors, isValid } = validateLogin(data);\r\n        if (!isValid) {\r\n            this.setState({ errors })\r\n        }\r\n        return isValid;\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isValid(this.state)) {\r\n            this.setState({ errors: {}, isLoading: true });\r\n            this.props.userLoginRequest({ username: this.state.username, password: this.state.password, call: \"signin\" }).then(\r\n                (data) => { this.props.history.push(\"/command-center\"); console.log(\"Data after succeful response login\", data) },\r\n                (data) => { this.setState({ errors: data.response.data, isLoading: false }); console.log(\"data after error login\", data); console.log(\"stategkkfhjllllllllll\", this.state); }\r\n            );\r\n        }\r\n    }\r\n    render() {\r\n        const { username, password, isLoading, errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"back\">\r\n                    <div className=\"col col-md-4 offset-md-4 div-center\" style={{ marginTop: 70 }}>\r\n                        <div className=\"loginCenter\">\r\n                            <h3>Login</h3>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                {errors.form && <div className=\"alert alert-danger\">{errors.form}</div>}\r\n                                <div className={classnames(\"form-group\", { \"has-error\": errors.username })}>\r\n                                    {errors.username && <span className=\"help-block\">{errors.username}</span>}\r\n                                    {!errors.username && <label >Username</label>}\r\n                                    <input type=\"username\" class=\"form-control\" name=\"username\" value={this.state.username} placeholder=\"username\" onChange={this.onChange} />\r\n                                </div>\r\n                                <div className={classnames(\"form-group\", { \"has-error\": errors.password })}>\r\n                                    {errors.password && <span className=\"help-block\">{errors.password}</span>}\r\n                                    {!errors.password && <label >Password</label>}\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\" onChange={this.onChange} placeholder=\"Password\" />\r\n                                </div>\r\n                                <button style={{ backgroundColor: '#009dd6' }} type=\"submit\" disabled={this.state.isLoading} class=\"btn \">Login</button>\r\n                                <hr />\r\n                                <a href=\"/signup\" class=\"btn btn-link\">Signup</a>\r\n                                <button disabled={isLoading} type=\"button\" class=\"btn btn-link\">Reset Password</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userLoginRequest: bindActionCreators(userLoginRequest, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","import validator from \"validator\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nexport default function (loginData) {\r\n    let errors = {};\r\n    if (validator.isEmpty(loginData.email)) {\r\n        errors.email = \"*Email is required!\";\r\n    }\r\n    if (validator.isEmpty(loginData.password)) {\r\n        errors.password = \"*Password is required!\"\r\n    }\r\n\r\n    return {\r\n        errors,\r\n        isValid: isEmpty(errors),\r\n    }\r\n}","import axios from \"axios\";\r\nexport function userSignupRequest(userData) {\r\n    return dispatch => {\r\n        return axios.post(\"https://8xzajgtd2e.execute-api.us-east-1.amazonaws.com/dev/signup\", userData, {\r\n            headers: {\r\n\r\n            }\r\n        });\r\n    }\r\n}","import validator from \"validator\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nexport default function (signupData) {\r\n    let errors = {};\r\n    if (validator.isEmpty(signupData.firstname)) {\r\n        errors.firstname = \"*First Name is required!\";\r\n    }\r\n    if (validator.isEmpty(signupData.lastname)) {\r\n        errors.lastname = \"*Last Name is required!\";\r\n    }\r\n    if (validator.isEmpty(signupData.email)) {\r\n        errors.email = \"*Email is required!\";\r\n    }\r\n    if (!validator.isEmail(signupData.email)) {\r\n        errors.email = \"*Email is invalid!\"\r\n    }\r\n    return {\r\n        errors,\r\n        isValid: isEmpty(errors),\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport \"./Signup.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { userSignupRequest } from \"../../actions/signupActions\";\r\nimport classnames from \"classnames\";\r\nimport { Redirect } from \"react-router\";\r\nimport validateSignup from \"../../helpers/validateSignup\";\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            errors: {},\r\n            isLoading: false,\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        // console.log(\"Errors in Signup State\", this.state.errors);\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n    isValid(data) {\r\n        const { errors, isValid } = validateSignup(data);\r\n        if (!isValid) {\r\n            this.setState({ errors })\r\n        }\r\n        return isValid;\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isValid(this.state)) {\r\n            this.setState({ errors: {}, isLoading: true });\r\n            this.props.userSignupRequest({\r\n                fname: this.state.firstname, lname: this.state.lastname, email: this.state\r\n                    .email\r\n                , call: \"signup\"\r\n            }).then(\r\n                ({ data }) => { this.props.history.push(\"/login\"); console.log(\"**********first Function*******:\", data.body); console.log(\"State in good 200 request\", this.state); },\r\n                (data) => {\r\n                    // console.log(\"**********second Function*******:\", data.response.data);\r\n                    this.setState({ errors: data.response.data, isLoading: false })\r\n                    // console.log(\"State in bad request\", this.state);\r\n                }\r\n            );\r\n        }\r\n    }\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"back\">\r\n\r\n\r\n                    <div className=\"col col-md-6 offset-md-3 div-center\" style={{ marginTop: '50px' }}>\r\n                        <div className=\"loginCenter\">\r\n                            <h3>Signup</h3>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className={classnames(\"form-group\", { \"has-error\": errors.firstname })}>\r\n                                    {errors.firstname && <span className=\"help-block\">{errors.firstname}</span>}\r\n                                    {!errors.firstname && <label >Name</label>}\r\n                                    <input type=\"text\" class=\"form-control\" value={this.state.firstname} onChange={this.onChange} name=\"firstname\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {errors.lastname && <span className=\"help-block\">{errors.lastname}</span>}\r\n                                    {!errors.lastname && <label >Last Name</label>}\r\n                                    <input type=\"text\" class=\"form-control\" value={this.state.lastname} onChange={this.onChange} name=\"lastname\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {errors.email && <span className=\"help-block\">{errors.email}</span>}\r\n                                    {!errors.email && <label>Email</label>}\r\n                                    <input type=\"email\" class=\"form-control\" value={this.state.email} onChange={this.onChange} name=\"email\" email=\"email\" />\r\n                                </div>\r\n                                <button className=\"pull-right\" disabled={this.state.isLoading} style={{ backgroundColor: '#009dd6' }} type=\"submit\" class=\"btn\">Get Verified</button>\r\n                                <a href=\"/login\" class=\"btn text-center btn-link\">Already have and account ?</a>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userSignupRequest: bindActionCreators(userSignupRequest, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Signup);\r\n","import React, { Component } from 'react';\r\nimport \"./TopNavBar.css\";\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { bindActionCreators } from 'redux';\r\nimport \"./ReactSelect.css\";\r\nimport \"react-virtualized/styles.css\";\r\nimport \"react-virtualized-select/styles.css\";\r\nimport chroma from 'chroma-js'\r\nimport AsyncSelect from 'react-select/lib/Async';\r\nimport { setSelectedCategory, setSelectedItem, login, logout, signup, flushState, getAllAsync, setAutherClusterSelectedItems, prefetchConceptsForNavbar, prefetchConceptClustersForNavbar, prefetchAuthorsForNavbar, prefetchAuthorClustersForNavbar, prefetchAuthorGroupsForNavbar, getAuthorGroups, addTag, removeTag } from \"../../actions/navbaractions\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Modal from 'react-responsive-modal';\r\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport '../../../node_modules/bootstrap/dist/js/bootstrap';\r\nimport Loader from 'react-loader-spinner'\r\nimport Joi from 'joi-browser/dist/joi-browser'\r\nimport axios from 'axios';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n} from 'reactstrap';\r\n\r\nconst server = process.env.REACT_APP_SERVER;\r\nclass TopNavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTag: [],\r\n            searchCategory: this.props.navbar.searchCategory,\r\n            seletedSearch: \"\",\r\n            selectedOption: {},\r\n            authorClusterSelectedOptions: \"\",\r\n            concepts: this.props.navbar.concepts,\r\n            conceptClusters: this.props.navbar.conceptClusters,\r\n            authors: this.props.navbar.authors,\r\n            authorClusters: this.props.navbar.authorClusters,\r\n            authorGroups: this.props.navbar.authorGroups,\r\n            dropdownData: [],\r\n            tags: this.props.navbar.tags,\r\n            labelsArray: [],\r\n            loadOptionsData: [],\r\n            suggestions: [],\r\n            modalOpen: false,\r\n            modalSignupOpen: false,\r\n            account: {\r\n                Email: '',\r\n                Password: '',\r\n                Username: ''\r\n            },\r\n            errors: [],\r\n            loginRequestStatus_admin: true,\r\n            loginStatus_admin: true,\r\n            userAccount: []\r\n        }\r\n\r\n        // console.log(\"Top Navbar state in Constructor\", this.props)\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.loadOptions = this.loadOptions.bind(this);\r\n        this.renderRedirect = this.renderRedirect.bind(this);\r\n        this.onSelectedCatagoryChange = this.onSelectedCatagoryChange.bind(this);\r\n        //this.renderRedirectCategory = this.renderRedirectCategory.bind(this);\r\n        this.searchAllConceptionary = this.searchAllConceptionary.bind(this);\r\n    }\r\n    schema = {\r\n        Email: Joi.string()\r\n            .required()\r\n            .label(\"Email\"),\r\n        Password: Joi.string()\r\n            .label(\"Password\")\r\n            .required(),\r\n        Username: Joi.string().allow('', null)\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.loginStatus_admin) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    shuffle(a) {\r\n        // for (let i = a.length - 1; i > 0; i--) {\r\n        //     const j = Math.floor(Math.random() * (i + 1));\r\n        //     [a[i], a[j]] = [a[j], a[i]];\r\n        // }\r\n        return a;\r\n    }\r\n\r\n    toggleModalOpen = () => {\r\n        this.setState(prevState => ({ modalOpen: !(prevState.modalOpen) }));\r\n    }\r\n\r\n    toggleModalSignupOpen = () => {\r\n        this.setState(prevState => ({ modalSignupOpen: !(prevState.modalSignupOpen) }));\r\n    }\r\n\r\n\r\n\r\n\r\n    // Login Actions\r\n\r\n\r\n    validateProperty(input) {\r\n        const obj = { [input.name]: input.value };\r\n        const schema = { [input.name]: this.schema[input.name] };\r\n        const { error } = Joi.validate(obj, schema);\r\n        if (!error) return null;\r\n        return error.details[0].message;\r\n    }\r\n\r\n    /* *********************************************** HANDLE INPUT CHANGE EVENT *************************************** */\r\n\r\n    validate = () => {\r\n        const result = Joi.validate(this.state.account, this.schema, {\r\n            abortEarly: false\r\n        });\r\n        if (!result.error) return null;\r\n\r\n        const errors = [];\r\n\r\n        for (let item of result.error.details) errors[item.path[0]] = item.message;\r\n        return errors;\r\n    };\r\n\r\n    handleLoginChange = ({ currentTarget: input }) => {\r\n        const errors = [...this.state.errors];\r\n\r\n        const errorMessage = this.validateProperty(input);\r\n\r\n        if (errorMessage)\r\n            errors[input.name] = errorMessage;\r\n        else\r\n            delete errors[input.name];\r\n\r\n        const account = { ...this.state.account };\r\n\r\n        account[input.name] = input.value;\r\n        this.setState({ account, errors });\r\n\r\n    };\r\n\r\n\r\n    handleSubmit = (e, isSignup) => {\r\n        e.preventDefault();\r\n        // this.setState({loginRequestStatus_admin:false})\r\n        const errors = this.validate();\r\n\r\n        if (!errors) {\r\n            if (isSignup) this.props.signup(this.state.account)\r\n            else this.props.login(this.state.account);\r\n        }\r\n        if (this.props.loginStatus_admin) {\r\n            this.setState({ errors: errors || {} });\r\n        }\r\n    }\r\n\r\n    // end login actions\r\n\r\n\r\n    searchAllConceptionary(inputValue, callback) {\r\n\r\n        axios.get(`${server}/api/rest/v1/home/all/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                let suggestions = [...this.state.suggestions];\r\n\r\n                selectedOption.forEach(x => {\r\n                    let obj = {};\r\n                    obj.id = x.id.toString();\r\n                    obj.label = x.label;\r\n                    suggestions.push(obj);\r\n                })\r\n                this.setState({ suggestions });\r\n\r\n\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author groups for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    searchAuthors(inputValue, callback) {\r\n        axios.get(`${server}/api/rest/v1/authors/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                this.setState({ selectedOption });\r\n\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching authors for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    searchConcepts(inputValue, callback) {\r\n        axios.get(`${server}/api/rest/v1/concepts/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                this.setState({ selectedOption });\r\n\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching concepts for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    searchConceptClusters(inputValue, callback) {\r\n\r\n        axios.get(`${server}/api/rest/v1/conceptClusters/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                // this.setState({selectedOption});\r\n\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n\r\n            console.log('Error while prefetching concept clusters for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    searchAuthorClusters(inputValue, callback) {\r\n        axios.get(`${server}/api/rest/v1/authorClusters/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                this.setState({ selectedOption });\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author clusters for navbar', error);\r\n        });\r\n    }\r\n\r\n    searchAuthorGroupsNav(inputValue, callback) {\r\n        axios.get(`${server}/api/rest/v1/authorGroups/search/` + inputValue).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                this.setState({ selectedOption });\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author groups for navbar', error);\r\n        });\r\n    }\r\n\r\n    searchAuthorGroups(labels, callback) {\r\n        axios.post(`${server}/api/rest/v1/authors/search`, labels).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                callback(null, this.shuffle(selectedOption));\r\n            }\r\n            else {\r\n                alert('error')\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching author groups for navbar', error);\r\n        });\r\n    }\r\n\r\n\r\n    onTagsChanged = (tag) => {\r\n        this.props.addTag(tag);\r\n        if (this.state.tags.length > 0) {\r\n            this.setState({\r\n                searchCategory: 'AuthorGroups'\r\n            });\r\n            this.props.setSelectedCategory(\"AuthorGroups\");\r\n        }\r\n        if (this.state.tags.length <= 0) {\r\n            this.setState({\r\n                searchCategory: this.props.navbar.searchCategory\r\n            });\r\n            this.props.setSelectedCategory(\"All\");\r\n        }\r\n\r\n\r\n        this.setState({ suggestions: [] })\r\n\r\n    };\r\n\r\n    onInputChanged = (e) => {\r\n        //console.log(`input value is now: ${e.target.value}`);\r\n    }\r\n\r\n    handleDelete = (i) => {\r\n        const tags = this.state.tags.slice(0)\r\n        tags.splice(i, 1)\r\n        this.setState({ tags }, function () {\r\n            if (this.state.tags.length > 0) {\r\n                this.props.setSelectedCategory(\"AuthorGroups\");\r\n            }\r\n            if (this.state.tags.length <= 0) {\r\n                this.props.setSelectedCategory(\"All\");\r\n            }\r\n        })\r\n        this.setState({ suggestions: [] })\r\n\r\n\r\n    }\r\n\r\n    handleAddition = (tag) => {\r\n        let tags = [...this.state.tags];\r\n        tags.push({\r\n            id: tag.id.toString(),\r\n            label: tag.label,\r\n            type: tag.type\r\n        });\r\n        this.setState({ tags }, function () {\r\n            if (this.state.tags.length > 0) {\r\n                this.props.setSelectedCategory(\"AuthorGroups\");\r\n            }\r\n            if (this.state.tags.length <= 0) {\r\n                this.props.setSelectedCategory(\"All\");\r\n            }\r\n        });\r\n        this.setState({ suggestions: [] })\r\n\r\n        //console.log(this.state.tags);\r\n    }\r\n    loadTags = (input, cb) => {\r\n        axios.post(`${server}/api/rest/v1/authorGroups/search`, input).then(data => {\r\n            const { responseType } = data.data;\r\n            if (responseType === 'success') {\r\n                const selectedOption = data.data.data;\r\n                let suggestions = [];\r\n                selectedOption.forEach(x => {\r\n                    let obj = {};\r\n                    obj.id = x.id.toString();\r\n                    obj.label = x.label;\r\n                    obj.value = x.label;\r\n                    obj.type = x.type;\r\n                    suggestions.push(obj);\r\n                })\r\n                this.setState({ suggestions });\r\n                cb(null, suggestions);\r\n            }\r\n            else {\r\n                console.log(\"\");\r\n            }\r\n        }).catch(error => {\r\n            console.log('Error while prefetching suggestions for navbar', error);\r\n        });\r\n    }\r\n    loadSuggestions = (label) => {\r\n        let tagsObject = {};\r\n        if (this.state.tags.length < 1) {\r\n            tagsObject = {};\r\n            tagsObject.type = \"both\";\r\n            tagsObject.labels = label;\r\n        } else {\r\n            tagsObject = {};\r\n            tagsObject.labels = label;\r\n            tagsObject.type = \"group\";\r\n            tagsObject.id = this.state.tags.map(x => x.id);\r\n\r\n        }\r\n        let query = {};\r\n        query.tagsObject = tagsObject;\r\n        return new Promise((resolve, reject) => {\r\n            this.loadTags(query, function (err, suggestions) {\r\n\r\n                resolve(suggestions);\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    handleChange = (selectedOption) => {\r\n        if (selectedOption.label !== undefined) {\r\n            this.props.setSelectedItem(selectedOption);\r\n            this.setState({\r\n                selectedOption\r\n            });\r\n        }\r\n    }\r\n\r\n    handleTagChange = (selectedTag) => {\r\n        if (selectedTag.label !== undefined) {\r\n            this.state.tags.push(selectedTag);\r\n            this.setState({ tags: this.state.tags });\r\n        }\r\n    }\r\n\r\n    onSelectedCatagoryChange(e) {\r\n        if (this.props.navbar.tags.length > 0) {\r\n            this.setState({\r\n                searchCategory: \"AuthorGroups\",\r\n                seletedSearch: e\r\n            });\r\n            this.props.flushState();\r\n            this.props.setSelectedCategory(\"AuthorGroups\");\r\n        } else {\r\n            this.setState({\r\n                seletedSearch: e\r\n            });\r\n            this.props.flushState();\r\n            this.props.setSelectedCategory(e);\r\n        }\r\n    }\r\n    loadOptions(inputValue) {\r\n        if (this.state.searchCategory === \"Concept\") {\r\n\r\n            return new Promise(resolve => {\r\n                this.searchConcepts(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n        else if (this.state.searchCategory === \"Concept Clusters\") {\r\n\r\n            return new Promise(resolve => {\r\n                this.searchConceptClusters(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n\r\n        else if (this.state.searchCategory === \"AuthorGroups\") {\r\n            let obj = {};\r\n            obj.labels = this.state.tags;\r\n            obj.category = this.state.seletedSearch;\r\n            obj.label = inputValue;\r\n\r\n            return new Promise(resolve => {\r\n                this.searchAuthorGroups(obj, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n\r\n        else if (this.state.searchCategory === \"Author\") {\r\n            return new Promise(resolve => {\r\n                this.searchAuthors(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n        else if (this.state.searchCategory === \"Author Clusters\") {\r\n            return new Promise(resolve => {\r\n                this.searchAuthorClusters(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n        else if (this.state.searchCategory === \"Author Groups\") {\r\n            return new Promise(resolve => {\r\n                this.searchAuthorGroupsNav(inputValue, function (err, results) {\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n        else if (this.state.searchCategory === \"All\") {\r\n\r\n            return new Promise(resolve => {\r\n                this.searchAllConceptionary(inputValue, function (err, results) {\r\n\r\n                    resolve(results);\r\n                })\r\n            })\r\n        }\r\n    };\r\n    renderRedirect = () => {\r\n        if (this.state.selectedOption) {\r\n            if (this.state.selectedOption.category) {\r\n                switch (this.state.selectedOption.category) {\r\n                    case \"Concepts\":\r\n                        return <Redirect to='/concepts' />\r\n                    case \"Concept-Clusters\":\r\n                        return <Redirect to='/concept-clusters' />\r\n                    case \"Authors\":\r\n                        return <Redirect to='/authors' />\r\n                    case \"Author-Clusters\":\r\n                        return <Redirect to='/author-clusters' />\r\n                    case \"Author-Groups\":\r\n                        return <Redirect to='/author-groups' />\r\n                    default:\r\n                        return null\r\n                }\r\n            }\r\n        }\r\n    }\r\n    removeTag = id => {\r\n        this.props.removeTag(id);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.selectedOption !== nextProps.navbar.selectedOption && nextProps.navbar.selectedOption) {\r\n            this.setState({ selectedOption: nextProps.navbar.selectedOption });\r\n        }\r\n\r\n        // if ( this.props.loginStatus_admin !=nextProps.loginStatus_admin  && nextProps.loginStatus_admin) {\r\n\r\n        // }\r\n        if (nextProps.navbar.SIGNUP_SUCCESS) {\r\n            let account = {\r\n                Email: '',\r\n                Password: '',\r\n                Username: ''\r\n            };\r\n            this.setState({\r\n                account\r\n\r\n            });\r\n        }\r\n        if (this.props.loginStatus_admin != nextProps.loginStatus_admin && !nextProps.invalidLogin && nextProps.loginStatus_admin) {\r\n            this.setState({ modalOpen: false })\r\n        }\r\n\r\n\r\n        if (this.props.navbar.tags.length !== nextProps.navbar.tags.length) {\r\n\r\n            if (nextProps.navbar.tags.length > 0) {\r\n                this.props.setSelectedCategory(\"AuthorGroups\");\r\n            }\r\n            if (nextProps.navbar.tags.length <= 0) {\r\n                this.props.setSelectedCategory(this.state.seletedSearch ? this.state.seletedSearch : 'All');\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            searchCategory: nextProps.navbar.searchCategory,\r\n            concepts: nextProps.navbar.concepts,\r\n            conceptClusters: nextProps.navbar.conceptClusters,\r\n            authors: nextProps.navbar.authors,\r\n            authorClusters: nextProps.navbar.authorClusters,\r\n            authorGroups: nextProps.navbar.authorGroups,\r\n            selectedOption: nextProps.navbar.selectedOption,\r\n            tags: nextProps.navbar.tags\r\n\r\n        });\r\n        if (nextProps.navbar.selectedOption.label !== undefined) {\r\n            if (nextProps.navbar.tags.length > 0) {\r\n                let filters = nextProps.navbar.tags.map(x => x.label);\r\n                let name = nextProps.navbar.selectedOption.value;\r\n                let category = nextProps.navbar.selectedOption.category;\r\n                let url = `/${category}/${name}?`;\r\n                for (let i = 0; i < filters.length; i++) {\r\n                    if (i == 0) {\r\n                        url = url.concat(`filters=${filters[i]}`);\r\n                    } else {\r\n                        url = url.concat(`&filters=${filters[i]}`);\r\n                    }\r\n\r\n                }\r\n                window.history.pushState(null, null, url);\r\n            } else {\r\n                let name = nextProps.navbar.selectedOption.value;\r\n                let category = nextProps.navbar.selectedOption.category;\r\n                let url = `/${category}/${name}`;\r\n                  window.history.pushState(null, null, url);\r\n                //this.props.history.push(url);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderRedirect()}\r\n                <Navbar style={{ backgroundColor: [getBackgroudColor(this.state.selectedOption.page)] }} light expand=\"md\">\r\n                    <NavbarBrand href=\"/\">Conceptionary</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <form className=\"form-inline\">\r\n                                <span style={{ display: \"inline-block\" }}>\r\n                                    <select style={{ padding: \"5px 3px\", borderRadius: \"3px\", border: \"1px solid white\" }} onChange={(e) => this.onSelectedCatagoryChange(e.target.value)} value={this.state.seletedSearch}>\r\n                                        <option selected={this.state.searchCategory === \"All\"} value=\"All\">All</option>\r\n                                        <option selected={this.state.searchCategory === \"Concept\"} value=\"Concept\">Concepts</option>\r\n                                        <option selected={this.state.searchCategory === \"Author\"} value=\"Author\">Authors</option>\r\n                                        <option selected={this.state.searchCategory === \"Concept Clusters\"} value=\"Concept Clusters\">Concept Clusters</option>\r\n                                        <option selected={this.state.searchCategory === \"Author Groups\"} value=\"Author Groups\">Author Groups</option>\r\n                                    </select>\r\n                                </span>\r\n                                <span style={{ display: \"inline-block\" }}>\r\n                                    <AsyncSelect className=\"width-300\"\r\n                                        value={this.state.selectedOption}\r\n                                        loadOptions={this.loadOptions}\r\n                                        onChange={this.handleChange}\r\n                                        styles={colourStyles}\r\n                                    />\r\n\r\n                                </span>\r\n\r\n                                <span style={{ display: \"inline-block\" }}>\r\n                                    <AsyncSelect className=\"width-300\"\r\n                                        value={this.state.selectedTag}\r\n                                        loadOptions={this.loadSuggestions}\r\n                                        onChange={this.onTagsChanged}\r\n                                        // styles={colourStyles}\r\n                                        isDisabled={this.state.tags.length >= 2 ? true : false || this.state.searchCategory === \"Author Groups\"}\r\n                                    />\r\n\r\n                                </span>\r\n                                <span style={{ display: \"inline-block\" }}>\r\n                                    <ul>\r\n                                        {this.state.tags.map(tag => {\r\n                                            return <li style={{ display: 'inline-block', background: 'purple', color: \"#fff\", borderRadius: '8px', padding: '5px', fontSize: '13px', marginLeft: '2px' }}>{tag.label}\r\n                                                <span style={{ marginLeft: '5px' }} className=\"badge\" id=\"tag\" onClick={() => { this.removeTag(tag.id) }}>X</span>\r\n                                            </li>\r\n                                        })}\r\n                                    </ul>\r\n                                </span>\r\n\r\n                            </form>\r\n                            &nbsp;\r\n                            &nbsp;\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            {\r\n                                this.props.loginStatus_admin ?\r\n                                    <React.Fragment>\r\n                                        <span style={{ padding: '0 5px' }}>\r\n                                            <NavItem style={{ cursor: 'pointer' }}>\r\n                                                {this.props.loggedInUserAccount_admin.username}\r\n\r\n                                            </NavItem>\r\n                                        </span>\r\n                                        <span style={{ padding: '0 5px' }}>\r\n                                            <NavItem style={{ cursor: 'pointer' }}>\r\n                                                <span onClick={() => { this.props.logout() }}>Logout</span>\r\n                                            </NavItem>\r\n                                        </span>\r\n                                        <span style={{ padding: '0 5px' }}>\r\n\r\n                                            <button\r\n                                                style={\r\n                                                    {\r\n                                                        border: '1px solid',\r\n                                                        marginRight: '5px',\r\n                                                        borderRadius: '50%',\r\n                                                        color: 'black',\r\n                                                        fontWeight: 'bold',\r\n                                                        background: 'white'\r\n                                                    }\r\n                                                }\r\n                                            >+</button>\r\n                                        </span>\r\n\r\n                                    </React.Fragment>\r\n                                    :\r\n\r\n                                    <span>\r\n                                        <NavItem style={{ cursor: 'pointer' }}>\r\n                                            <NavLink onClick={this.toggleModalOpen} >Log-in</NavLink>\r\n                                        </NavItem>\r\n                                    </span>\r\n\r\n                            }\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n\r\n                <Modal open={this.state.modalOpen} onClose={this.toggleModalOpen} center>\r\n                    <h4 style={{ textAlign: \"center\" }}>Log in to your account</h4>\r\n\r\n                    <div style={{ padding: '50px' }}>\r\n                        <Form style={{ margin: 'auto', width: '300px', padding: '20px 30px', background: '#fff', boxShadow: '0 0 20px #ccc' }}>\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Email\">Email</Label> */}\r\n                                <Input type=\"text\" name=\"Email\" id=\"Email\" onChange={(e) => this.handleLoginChange(e)} placeholder=\"username\" />\r\n                                {this.state.errors.Email && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Email}</p>\r\n                                )}\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Password\">Password</Label> */}\r\n                                <Input type=\"Password\" name=\"Password\" id=\"Password\" onChange={(e) => this.handleLoginChange(e)} placeholder=\"Password\" />\r\n                                {this.state.errors.Password && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Password}</p>\r\n                                )}\r\n                            </FormGroup>\r\n                            {\r\n                                this.props.invalidLogin ? <p className=\"alert alert-info\">Invalid username/password</p> : null\r\n                            }\r\n\r\n                            <p style={{ color: '#641E89', textDecoration: 'underline', cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    this.toggleModalOpen();\r\n                                    this.toggleModalSignupOpen();\r\n                                }}\r\n                            >Don't have an account? signup</p>\r\n                            <Button onClick={(e) => this.handleSubmit(e)}\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    height: \"40px\",\r\n                                    backgroundColor: \"#641E89\",\r\n                                    color: \"#fff\",\r\n                                    border: \"1px solid white\"\r\n                                }} className=\"btn form-control\">{this.state.loginRequestStatus_admin ? \"Login\" :\r\n                                    <Loader\r\n                                        type=\"Puff\"\r\n                                        color=\"#FFF\"\r\n                                        height=\"30\"\r\n                                        width=\"30\"\r\n                                    />}\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.modalSignupOpen} onClose={this.toggleModalSignupOpen} center>\r\n                    <h4 style={{ textAlign: \"center\" }}>Sign up for a new account</h4>\r\n                    {\r\n                        this.props.navbar.SIGNUP_SUCCESS &&\r\n\r\n                        (\r\n                            <div class=\"alert alert-success alert-dismissible\">\r\n                                <span href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</span>\r\n                                <strong>Success!</strong> user created please login.\r\n                        </div>\r\n                        )\r\n                    }\r\n                    <div style={{ padding: '50px' }}>\r\n                        <Form style={{ margin: 'auto', width: '300px', padding: '20px 30px', background: '#fff', boxShadow: '0 0 20px #ccc' }}>\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Email\">Email</Label> */}\r\n                                <Input type=\"text\" name=\"Email\" id=\"Email\" value={this.state.account.Email} onChange={(e) => this.handleLoginChange(e)} placeholder=\"Email\" />\r\n                                {this.state.errors.Email && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Email}</p>\r\n                                )}\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Password\">Password</Label> */}\r\n                                <Input type=\"Username\" name=\"Username\" id=\"Username\" value={this.state.account.Username} onChange={(e) => this.handleLoginChange(e)} placeholder=\"Username\" />\r\n                                {this.state.errors.Username && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Username}</p>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                {/* <Label style={{fontWeight:\"normal\",fontSize:'12px'}} className=\"text-muted\" for=\"Password\">Password</Label> */}\r\n                                <Input type=\"Password\" name=\"Password\" id=\"Password\" value={this.state.account.Password} onChange={(e) => this.handleLoginChange(e)} placeholder=\"Password\" />\r\n                                {this.state.errors.Password && (\r\n                                    <p style={{ padding: '3px', fontSize: '12px' }} className=\"alert alert-danger\">{this.state.errors.Password}</p>\r\n                                )}\r\n                            </FormGroup>\r\n\r\n                            <p style={{ color: '#641E89', textDecoration: 'underline', cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    this.toggleModalSignupOpen();\r\n                                    this.toggleModalOpen();\r\n                                }}\r\n                            >Already have an account? login</p>\r\n                            {/* <p style={{color:'#641E89',textDecoration:'underline', cursor:'pointer'}}>Forgot Password ?</p> */}\r\n                            <Button onClick={(e) => this.handleSubmit(e, true)}\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    height: \"40px\",\r\n                                    backgroundColor: \"#641E89\",\r\n                                    color: \"#fff\",\r\n                                    border: \"1px solid white\"\r\n                                }} className=\"btn form-control\">{this.state.loginRequestStatus_admin ? \"Signup\" :\r\n                                    <Loader\r\n                                        type=\"Puff\"\r\n                                        color=\"#FFF\"\r\n                                        height=\"30\"\r\n                                        width=\"30\"\r\n                                    />}\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst dot = (color = '#ccc') => ({\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n\r\n    ':before': {\r\n        backgroundColor: color,\r\n        borderRadius: 10,\r\n        content: '\" \"',\r\n        display: 'block',\r\n        marginRight: 8,\r\n        height: 10,\r\n        width: 10,\r\n    },\r\n});\r\nconst colourStyles = {\r\n    control: styles => ({ ...styles, backgroundColor: 'white' }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        const color = chroma(data.color);\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isDisabled\r\n                ? null\r\n                : isSelected ? data.color : isFocused ? color.alpha(0.1).css() : null,\r\n            color: isDisabled\r\n                ? '#ccc'\r\n                : isSelected\r\n                    ? chroma.contrast(color, 'white') > 2 ? 'white' : 'black'\r\n                    : data.color,\r\n            cursor: isDisabled ? 'not-allowed' : 'default',\r\n        };\r\n    },\r\n    input: styles => ({ ...styles, ...dot() }),\r\n    placeholder: styles => ({ ...styles, ...dot() }),\r\n    singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\r\n};\r\nconst getBackgroudColor = (page) => {\r\n    switch (page) {\r\n        case 'Concepts':\r\n            return \"#696969\";\r\n        case 'Concept Clusters':\r\n            return \"#CD5C5C\";\r\n        case 'Authors':\r\n            return \"#A52A2A\";\r\n        case 'Author Clusters':\r\n            return \"#800080\";\r\n        default:\r\n            return \"#a4b2b7\";\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelectedCategory: bindActionCreators(setSelectedCategory, dispatch),\r\n        setSelectedItem: bindActionCreators(setSelectedItem, dispatch),\r\n        flushState: bindActionCreators(flushState, dispatch),\r\n        setAutherClusterSelectedItems: bindActionCreators(setAutherClusterSelectedItems, dispatch),\r\n        getAuthorGroups: bindActionCreators(getAuthorGroups, dispatch),\r\n        login: bindActionCreators(login, dispatch),\r\n        signup: bindActionCreators(signup, dispatch),\r\n        logout: bindActionCreators(logout, dispatch),\r\n        addTag: bindActionCreators(addTag, dispatch),\r\n        removeTag: bindActionCreators(removeTag, dispatch)\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        navbar: state.navbar,\r\n        userExist_admin: state.navbar.userExist_admin,\r\n        loginRequestStatus_admin: state.navbar.loginRequestStatus_admin,\r\n        loginStatus_admin: state.navbar.loginStatus_admin,\r\n        invalidLogin: state.navbar.invalidLogin,\r\n        loggedInUserAccount_admin: state.navbar.loggedInUserAccount_admin\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TopNavBar));","import React, { Component } from 'react';\r\nimport conceptionary_svg from \"../../images/conceptionary.svg\";\r\nimport \"./HomePage.css\";\r\nimport{getAuthorGroups} from \"../../utilities\";\r\nimport queryString from \"query-string\";\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    async componentWillMount(){\r\n    //     if (queryString.parse(this.props.location.search).filters) {\r\n    //         let filters = [];\r\n    //         let queryFilters = queryString.parse(this.props.location.search).filters;\r\n    //         if (typeof queryFilters === \"string\") {\r\n    //             filters.push(queryFilters);\r\n    //         } else {\r\n    //             filters = queryFilters;\r\n    //         }\r\n    //         let author_group = await getAuthorGroups(filters);\r\n    //         this.props.addTag(author_group);\r\n    // }\r\n}\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: \"5%\" }} className=\"text-center\">\r\n                <img src={conceptionary_svg} width=\"80%\" alt=\"\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport './style.css';\r\nimport Axios from 'axios';\r\nclass FileUpload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null,\r\n            msg: \"\",\r\n            skip: [],\r\n            wait:false\r\n        }\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n    }\r\n\r\n    onChangeHandler(event) {\r\n        this.setState({\r\n            selectedFile: event.target.files[0],\r\n        });\r\n    }\r\n    async onClickHandler() {\r\n        this.setState({\r\n            wait:true\r\n        })\r\n        const data = new FormData();\r\n        data.append('file', this.state.selectedFile);\r\n        let response = await Axios.post(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspectives/upload`, data);\r\n        if (response.data.msg) {\r\n            this.setState({\r\n                msg: response.data.msg,\r\n                wait:false\r\n            })\r\n        }\r\n        if (response.data.skip.length > 0) {\r\n            this.setState({\r\n                skip: response.data.skip\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"container\" style={{ marginTop: \"5px\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"offset-md-3 col-md-6\">\r\n                        <div class=\"form-group files\">\r\n                            <label><b>Upload Your File </b></label>\r\n                            <input type=\"file\" name=\"file\" class=\"form-control\" multiple onChange={this.onChangeHandler} /><br></br>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            {/*<ToastContainer />\r\n                <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>*/}\r\n\r\n                        </div>\r\n                        <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler} disabled={(this.state.selectedFile?false:true)||(this.state.wait?true:false)}>Upload</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style={{ display: this.state.msg ? 'block' : 'none' }}>\r\n                    <div class=\"offset-md-3 col-md-6\" style={{ marginTop: '50px' }}>\r\n                        <div class=\"alert alert-info alert-dismissible fade show\" role=\"alert\">\r\n                            <strong>{this.state.msg}</strong>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style={{ marginTop: '50px' }}>\r\n                    <div class=\"class=offset-md-3 col-md-6\">\r\n                        {\r\n                            this.state.wait&&(\r\n                                <h2>please wait......</h2>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style={{ marginTop: '50px' }}>\r\n                    <div class=\"class=offset-md-2 col-md-6\">\r\n                        <ul style={{listStyleType:'none'}}>\r\n                           {\r\n                               this.state.skip.length>0&&(\r\n                                   this.state.skip.map(i=>{\r\n                                       return <li>row:{i} not saved from file</li>\r\n                                   })\r\n                               )\r\n                           }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUpload\r\n\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { Helmet } from \"react-helmet\";\r\nclass PerspectiveDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Perspective: null,\r\n            Concept: null,\r\n            Author: null,\r\n            imgURL: null,\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        let data = await axios.get(`${process.env.REACT_APP_SERVER}/api/rest/v1/perspective/detail/${id}`)\r\n        if (data.data.responseType == \"success\") {\r\n            this.setState({\r\n                Perspective: data.data.data,\r\n                Concept: data.data.data.Concept,\r\n                Author: data.data.data.Author,\r\n                imgURL: data.data.img\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\" style={{ marginTop: '50px' }}>\r\n                {this.state.Perspective && this.state.Concept && this.state.Author &&\r\n                    <React.Fragment>\r\n                        <Helmet>\r\n                            <meta property=\"og:url\" content={`http://3.84.7.245:3000/perspective/${this.state.Perspective.id}`} />\r\n                            <meta property=\"og:type\" content=\"website\" />\r\n                            <meta property=\"fb:app_id\" content=\"930857800581355\" />\r\n                            <meta property=\"og:title\" content={this.state.Concept.name.charAt(0).toUpperCase() + this.state.Concept.name.slice(1)} />\r\n                            <meta property=\"og:description\" content={this.state.Perspective.description} />\r\n                            <meta property=\"og:image\" content={this.state.imgURL} />\r\n                        </Helmet>\r\n                        <div>\r\n                            <img src={this.state.imgURL} style={{ width: '200px', height: '200px' }} alt={this.state.Author.lastName}></img>\r\n                            <h3>{this.state.Concept.name}</h3>\r\n                            <hr></hr>\r\n                            <p><b>{this.state.Concept.name}</b> {this.state.Perspective.description}</p>\r\n                            <h5>{this.state.Author.firstName + \" \" + this.state.Author.lastName}</h5>\r\n                        </div>\r\n                    </React.Fragment>\r\n                }\r\n                {/* <Helmet>\r\n                    <meta property=\"og:url\" content={`http://conceptionary-frontend.s3-website.us-east-2.amazonaws.com/perspective/${this.state.Perspective.id}`} />\r\n                    <meta property=\"og:type\" content=\"website\" />\r\n                    <meta property=\"fb:app_id\" content=\"930857800581355\" />\r\n                    <meta property=\"og:title\" content={this.state.Concept.name} />\r\n                    <meta property=\"og:description\" content={this.state.Perspective.description} />\r\n                    <meta property=\"og:image\" content=\"https://www.recordedbooks.com/RBDigital/media/site/new%20stuff/Authors%20600%20X%20600/Authors_Stephen-King_600x600_1.jpg?ext=.jpg\" />\r\n                </Helmet>\r\n                <div>\r\n                    <img alt=\"\" src=\"https://www.recordedbooks.com/RBDigital/media/site/new%20stuff/Authors%20600%20X%20600/Authors_Stephen-King_600x600_1.jpg?ext=.jpg\" style={{ width: '200px', height: '200px' }}></img>\r\n                    <h3>{this.state.Concept.name}</h3>\r\n                    <hr></hr>\r\n                    <p><b>{this.state.Concept.name}</b> {this.state.Perspective.description}</p>\r\n                    <h5>{this.state.Author.firstName + \" \" + this.state.Author.lastName}</h5>\r\n                    <p>conceptionary site</p>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PerspectiveDetail","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Router, Route, Link, Switch, Redirect } from 'react-router-dom';\r\nimport ConceptsPage from \"./components/ConceptsPage/ConceptsPage\";\r\nimport ConceptClustersPage from \"./components/ConceptClustersPage/ConceptClustersPage\";\r\nimport Message from \"./components/Messages/Message\";\r\nimport AuthorCluster from \"./components/AutherCluster/AutherCluster\";\r\nimport AuthorPage from \"./components/AuthorPage/AutherPage\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Signup from \"./components/Signup/Signup\";\r\nimport TopNavBar from \"./components/TopNavBar/TopNavBar\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport FileUpload from './components/FileUpload/FileUpload';\r\nimport PerspectiveDetail from './components/perspectiveDetail/perspective';\r\nimport { connect } from 'react-redux';\r\nimport { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory()\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuthenticated: false,\r\n      user: this.props.auth.user,\r\n    }\r\n  }\r\n  render() {\r\n    const { isAuthenticated } = this.props.auth;\r\n    // const { id, username, email } = this.props.auth.user;\r\n    const PrivateRoute = ({ component: Component, ...rest }) => {\r\n      // console.log(\"...Rest\", rest);\r\n      return <Route {...rest} render={(props) => {\r\n        // console.log(\"Props in Private Route\", props);\r\n        return isAuthenticated === true ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }} />\r\n    };\r\n    return (\r\n       <Router history={history}>\r\n        <div>\r\n          <TopNavBar />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/signup\" exact component={Signup} />\r\n            <Route path=\"/concepts\" exact component={ConceptsPage} />\r\n            <Route path=\"/concepts/:name\" exact component={ConceptsPage} />\r\n            <Route path=\"/concept-clusters\" exact component={ConceptClustersPage} />\r\n            <Route path=\"/concept-clusters/:name\" exact component={ConceptClustersPage} />\r\n            <Route path=\"/authors\" exact component={AuthorPage} />\r\n            <Route path=\"/authors/:name\" exact component={AuthorPage} />\r\n            <Route path=\"/author-clusters\" exact component={AuthorCluster} />\r\n            <Route path=\"/author-groups\" exact component={AuthorCluster} />\r\n            <Route path=\"/author-groups/:name\" exact component={AuthorCluster} />\r\n            <Route path=\"/author-clusters/:name\" exact component={AuthorCluster} />\r\n            <Route path=\"/Message\" exact component={Message} />\r\n            <Route path=\"/Fileupload\" exact component={FileUpload}/>\r\n            <Route path=\"/perspective/:id\" exact component={PerspectiveDetail}/>\r\n          </Switch>\r\n        </div>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\nfunction mapStatToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  }\r\n}\r\nexport default connect(mapStatToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS } from \"constants\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case \"SET_CURRENT_USER\":\r\n            return {\r\n                isAuthenticated: !isEmpty(action.user),\r\n                user: action.user,\r\n            }\r\n        case \"LOG_OUT\":\r\n            return {\r\n                isAuthenticated: false,\r\n                user: {}\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nconst initialState = {\r\n    // searchSuggestions: [],\r\n    tags: [],\r\n    selectedOption: \"\",\r\n    authorClusterSelectedOptions: \"\",\r\n    searchCategory: \"All\",\r\n    concepts: [],\r\n    authors: [],\r\n    conceptClusters: [],\r\n    authorClusters: [],\r\n    authorGroups: [],\r\n    loading: true,\r\n    userExist_admin: false,\r\n    loginStatus_admin: false,\r\n    loggedInUserAccount_admin: {},\r\n    loginRequestStatus_admin: true,\r\n    invalidLogin: false,\r\n    SIGNUP_SUCCESS: false,\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case \"GET_CONCEPTS_NAMES_NAVBAR\":\r\n            // console.log(\"GET_CONCEPTS_NAMES_NAVBAR\");\r\n            return {\r\n                ...state,\r\n                searchSuggestions: action.payload,\r\n            }\r\n        case \"SET_SEARCH_CATEGORY\":\r\n            // console.log(\"SET_SEARCH_CATEGORY \");\r\n            return {\r\n                ...state,\r\n                searchCategory: action.payload,\r\n            }\r\n        case \"SET_SELECTED_OPTION\":\r\n            // console.log(\"SET_SELECTED_OPTION\");\r\n            return {\r\n                ...state,\r\n                selectedOption: action.payload\r\n            }\r\n        case \"FLUSH_NAV_BAR\":\r\n            return {\r\n                ...state,\r\n                selectedOption: \"\",\r\n            }\r\n        case \"SET_AUTHOR_CLUSTER_SELECTED_OPTIONS\":\r\n            return {\r\n                ...state,\r\n                authorClusterSelectedOptions: action.payload,\r\n            }\r\n        case \"CONCEPTS_TRIMMED_FOR_NAVBAR\":\r\n            // console.log(action.payload);\r\n            // console.log(\"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\")\r\n            return {\r\n                ...state,\r\n                concepts: action.payload,\r\n            }\r\n        case \"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\":\r\n            // console.log(\"CONCEPT_CLUSTERS_TRIMMED_FOR_NAVBAR\")\r\n            return {\r\n                ...state,\r\n                conceptClusters: action.payload,\r\n            }\r\n        case \"AUTHORS_TRIMMED_FOR_NAVBAR\":\r\n            // console.log(\"AUTHORS_TRIMMED_FOR_NAVBAR\")\r\n            return {\r\n                ...state,\r\n                authors: action.payload,\r\n            }\r\n        case \"AUTHOR_CLUSTERS_TRIMMED_FOR_NAVBAR\":\r\n            // console.log(\"AUTHOR_CLUSTERS_TRIMMED_FOR_NAVBAR\")\r\n            return {\r\n                ...state,\r\n                authorClusters: action.payload,\r\n            }\r\n\r\n        case \"AUTHOR_GROUPS_TRIMMED_FOR_NAVBAR\":\r\n            return {\r\n                ...state,\r\n                authorGroups: action.payload,\r\n            }\r\n\r\n        case \"LOGIN_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loginRequestStatus_admin: false,\r\n                invalidLogin: false,\r\n                loginStatus_admin: false\r\n\r\n            }\r\n\r\n        case \"LOGIN_SUCCESS\":\r\n            // return state;\r\n            return {\r\n                ...state,\r\n                userExist_admin: true,\r\n                loggedInUserAccount_admin: action.userInfo,\r\n                loginRequestStatus_admin: true,\r\n                loginStatus_admin: true,\r\n                invalidLogin: false\r\n\r\n            }\r\n\r\n        case \"LOGIN_FAILURE\":\r\n            return {\r\n                ...state,\r\n                loginRequestStatus_admin: true,\r\n                loginStatus_admin: false,\r\n                invalidLogin: true\r\n            }\r\n\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                loginStatus_admin: false,\r\n                loggedInUserAccount_admin: {},\r\n                loginRequestStatus_admin: false,\r\n                userExist_admin: false,\r\n            }\r\n        case \"SIGNUP_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                SIGNUP_SUCCESS: true\r\n            }\r\n        case \"ADD_TAG\": {\r\n            let tags = [...state.tags]\r\n            if(Array.isArray(action.payload)){\r\n                tags.push(...action.payload)\r\n            }else{\r\n                tags.push(action.payload)\r\n            }\r\n            return {\r\n                ...state,\r\n                tags: tags\r\n            }\r\n        }\r\n        case \"REMOVE_TAG\":\r\n            let tags = [...state.tags];\r\n            for (let i = 0; i < tags.length; i++) {\r\n                if (tags[i].id == action.payload) {\r\n                    tags.splice(i, 1);\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                tags: tags\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    listRelatedData: [],\r\n    loading: true,\r\n    apiLoading: false,\r\n    apiServerError: false,\r\n    apiNetworkError: false,\r\n    conceptWithDetails: {},\r\n    perspectiveIds: [],\r\n    perspectivesRelations: {},\r\n    perspectivesDetail: {},\r\n    authors: {},\r\n    concept: {},\r\n    keywordIds: [],\r\n    keywords: {},\r\n    all: true,\r\n    sortByKeywordId: \"\",\r\n    sortBy: \"authorLast\",\r\n    isLike: false,\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case 'SERVER_ERROR':\r\n            return {\r\n                apiServerError: true,\r\n            }\r\n        case 'NETWORK_ERROR':\r\n            return {\r\n                apiNetworkError: true,\r\n            }\r\n        case 'REQUEST_STARTED':\r\n            return {\r\n                apiLoading: true,\r\n            }\r\n        case 'REQUEST_SUCCESSFUL':\r\n            return {\r\n                ...state,\r\n                conceptWithDetails: action.payload,\r\n                apiLoading: false,\r\n                apiServerError: false,\r\n                apiNetworkError: false,\r\n            }\r\n        case 'SET_CONCEPT_DETAILS': {\r\n            return {\r\n                ...state,\r\n                perspectivesRelations: action.payload.perspectivesRelations,\r\n                authors: action.payload.authors,\r\n                concept: action.payload.concepts,\r\n                keywords: action.payload.keywords,\r\n                perspectivesDetail: action.payload.perspectivesDetail\r\n                //keywordIds:\r\n            }\r\n        }\r\n        case 'SET_DETAILED_PERSPECTIVE': {\r\n            let perspectives = [...state.perspectivesDetail, ...action.payload];\r\n            return {\r\n                ...state,\r\n                perspectivesDetail: perspectives\r\n            }\r\n        }\r\n        case 'setPerspectiveIds': {\r\n            return {\r\n                ...state,\r\n                perspectiveIds: action.payload\r\n            }\r\n        }\r\n        case 'sortByAuthorLast': {\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload\r\n            }\r\n        }\r\n        case 'sortByKeyword': {\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload.sortBy,\r\n                sortByKeywordId: action.payload.sortByKeywordId,\r\n                all: action.payload.all\r\n\r\n            }\r\n        }\r\n        case 'SHOW_ALL_PERSPECTIVE': {\r\n            return {\r\n                ...state,\r\n                all: action.payload\r\n            }\r\n        }\r\n        case 'SET_PERSPECTIVE_LIKE': {\r\n            let perspectives = state.perspectives;\r\n            perspectives[action.payload.id].loves = action.payload.loves;\r\n            perspectives[action.payload.id].isLike = action.payload.isLike;\r\n            return {\r\n                ...state,\r\n                perspectives: perspectives\r\n            }\r\n        }\r\n        case 'SET_IS_LIKE': {\r\n            return {\r\n                ...state,\r\n                isLike: action.payload\r\n            }\r\n        }\r\n\r\n        // case \"GET_CONCEPT_DETAILS\":\r\n        //     // console.log(\"Dispatch Called!\");\r\n        //     return {\r\n        //         ...state,\r\n        //         conceptsWithDetails: [...action.payload]\r\n        //     }\r\n        // case \"GET_CONCEPT_KEYWORDS\":\r\n        //     return {\r\n        //         ...state,\r\n        //         keywords: [...action.payload],\r\n        //     }\r\n        // case \"GET_CONCEPT_PERSPECTIVEIDS\":\r\n        //     return {\r\n        //         ...state,\r\n        //         perspectiveids: [...action.payload]\r\n        //     }\r\n        // case \"REFRESH_CONCEPT_PAGE\":\r\n        //     return {\r\n        //         ...state,\r\n\r\n        //     }\r\n        // case 'FLUSH_CONCEPT':\r\n        //     return {\r\n        //         loading: true\r\n        //     }\r\n        case 'GET_LIST_RELATED':\r\n            return {\r\n                ...state,\r\n                listRelatedData: action.payload,\r\n            }\r\n        // case 'LOADING_FALSE':\r\n        //     console.log(\"Loading False\")\r\n        //     return {\r\n        //         ...state,\r\n        //         loading: false\r\n        //     }\r\n        // case 'LOADING_TRUE':\r\n        //     console.log(\"Loaing True\")\r\n        //     return {\r\n        //         loading: true,\r\n        //     }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    conceptClustersWithDetails: [],\r\n    conceptClusterConceptsDiscrete: [],\r\n    authors:{},\r\n    concepts:{},\r\n    perspective:{},\r\n    keywords:{},\r\n    conceptCluster:{},\r\n    authorClicked: false,\r\n    conceptClicked: true,\r\n    loading: true,\r\n    apiLoading: false,\r\n    apiServerError: false,\r\n    apiNetworkError: false,\r\n    conceptClusterWithDetails: {}\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case 'CONCEPT_CLUSTER_DETAIL':{\r\n            let conceptCluster=action.payload.conceptCluster[Object.keys(action.payload.conceptCluster)[0]]\r\n            return{\r\n                ...state,\r\n                authors:action.payload.authors,\r\n                concepts:action.payload.concepts,\r\n                perspective:action.payload.perspectives,\r\n                conceptCluster:conceptCluster,\r\n                keywords:action.payload.keywords\r\n            }\r\n        }\r\n        case 'CLICKED_STATE':{\r\n            return{\r\n                ...state,\r\n                authorClicked:action.payload.authorClicked,\r\n                conceptClicked:action.payload.conceptClicked\r\n            }\r\n        }\r\n        case 'CONCEPT_CLUSTER_PERSPECTIVE_LIKE':{\r\n            let perspectives = state.perspective;\r\n            perspectives[action.payload.id].loves = action.payload.loves;\r\n            perspectives[action.payload.id].isLike = action.payload.isLike;\r\n            return{\r\n                ...state,\r\n                perspective: perspectives\r\n            }\r\n        }\r\n        case 'SERVER_ERROR':\r\n            return {\r\n                apiServerError: true,\r\n            }\r\n        case 'NETWORK_ERROR':\r\n            return {\r\n                apiNetworkError: true,\r\n            }\r\n        case 'REQUEST_STARTED':\r\n            return {\r\n                apiLoading: true,\r\n            }\r\n        case 'REQUEST_SUCCESSFUL':\r\n            return {\r\n                ...state,\r\n                conceptClusterWithDetails: action.payload,\r\n                apiLoading: false,\r\n                apiServerError: false,\r\n                apiNetworkError: false,\r\n            }\r\n        case \"GET_CONCEPT_CLUSTER_DETAILS\":\r\n            // console.log(\"Dispatch Called!\");\r\n            return {\r\n                ...state,\r\n                conceptClustersWithDetails: [...action.payload]\r\n            }\r\n        case \"GET_CONCEPT_CLUSTER_CONCEPTS_DISCRETE\":\r\n            return {\r\n                ...state,\r\n                conceptClusterConceptsDiscrete: [...action.payload],\r\n            }\r\n        case 'FLUSH_CONCEPT_CLUSTER':\r\n            return {\r\n                loading: true,\r\n            }\r\n        // case \"GET_CONCEPT_PERSPECTIVEIDS\":\r\n        //     return {\r\n        //         ...state,\r\n        //         perspectiveids: [...action.payload]\r\n        //     }\r\n        case \"LOADING_FALSE\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { stat } from \"fs\";\r\n\r\nconst initialState = {\r\n    authorsWithDetails: {},\r\n    authorBioHeadings: {},\r\n    authorBooks: {},\r\n    authorPerspectives:{},\r\n    authorGroups:{},\r\n    concepts:{},\r\n    author:{},\r\n    apiLoading: false,\r\n    apiServerError: false,\r\n    apiNetworkError: false,\r\n    author_authors_apiLoading: false,\r\n    author_authors_apiServerError: false,\r\n    author_authors_apiNetworkError: false,\r\n    author_authors: {\r\n    AuthorInfluenceAuthors: [],\r\n    AuthorConvoAuthors: [],\r\n    }\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case 'AUTHOR_DETAILS':{\r\n            let author=action.payload.authors[Object.keys(action.payload.authors)[0]]\r\n            return{\r\n                ...state,\r\n                authorPerspectives:action.payload.perspectives,\r\n                authorBioHeadings:action.payload.AuthorBioHeadings,\r\n                authorGroups:action.payload.AuthorGroups,\r\n                author:author,\r\n                concepts:action.payload.concepts,\r\n                authorBooks:action.payload.books\r\n            }\r\n        }\r\n        case 'AUTHOR_PERSPECTIVE_LIKE':{\r\n            let perspectives = state.authorPerspectives;\r\n            perspectives[action.payload.id].loves = action.payload.loves;\r\n            perspectives[action.payload.id].isLike = action.payload.isLike;\r\n            return{\r\n                ...state,\r\n                authorPerspectives: perspectives\r\n            }\r\n        }\r\n        case 'SERVER_ERROR':\r\n            return {\r\n                ...state,\r\n                apiServerError: true,\r\n            }\r\n        case 'NETWORK_ERROR':\r\n            return {\r\n                ...state,\r\n                apiNetworkError: true,\r\n            }\r\n        case 'REQUEST_STARTED':\r\n            return {\r\n                ...state,\r\n                apiLoading: true,\r\n            }\r\n        case \"GET_AUTHOR_DETAILS\":\r\n            return {\r\n                ...state,\r\n                authorsWithDetails: action.payload,\r\n                apiLoading: false,\r\n                apiServerError: false,\r\n                apiNetworkError: false,\r\n            }\r\n        case \"GET_AUTHOR_AUTHORS_PENDING\":\r\n            return {\r\n                ...state,\r\n                author_authors_apiLoading: true,\r\n            }\r\n        case 'GET_AUTHOR_AUTHORS_SUCCESS':\r\n            // console.log('reducer get author success')\r\n            return {\r\n                ...state,\r\n                author_authors_apiLoading: false,\r\n                author_authors_apiServerError: false,\r\n                author_authors_apiNetworkError: false,\r\n                author_authors: action.payload\r\n            }\r\n        case 'GET_AUTHOR_AUTHORS_SERVER_ERROR':\r\n            return {\r\n                ...state,\r\n                author_authors_apiServerError: true,\r\n                author_authors_apiLoading: false,\r\n            }\r\n        case 'GET_AUTHOR_AUTHORS_NETWORK_ERROR':\r\n            return {\r\n                ...state,\r\n                author_authors_apiNetworkrError: true,\r\n                author_authors_apiLoading: false,\r\n            }\r\n        case \"GET_AUTHOR_BIO\":\r\n            // console.log(\"Get AuthorBio dispatch called in reducer catching\");\r\n            return {\r\n                ...state,\r\n                authorBioData: [...action.payload]\r\n            }\r\n        case \"GET_AUTHOR_BOOKS\":\r\n            // console.log(\"Get AuthorBooks dispatch called in reducer catching\");\r\n            return {\r\n                ...state,\r\n                authorBooks: [...action.payload]\r\n            }\r\n        case 'GET_AUTHOR_INFLUENCED_BY_AUTHORS':\r\n            return {\r\n                ...state,\r\n                authorInfluencedByAuthors: [...action.payload]\r\n            }\r\n        case 'GET_AUTHOR_INFLUENCED_ON_AUTHORS':\r\n            return {\r\n                ...state,\r\n                authorInfluencedOnAuthors: [...action.payload]\r\n            }\r\n        case 'GET_AUTHOR_CONVO_WITH_AUTHORS':\r\n            return {\r\n                ...state,\r\n                authorConvoWithAuthors: [...action.payload]\r\n            }\r\n        case 'FLUSH_AUTHOR':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case 'LOADING_FALSE':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    keywordsForPerspectiveId: [],\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case \"GET_SINGLE_CONCEPT_KEYWORDS\":\r\n            return {\r\n                ...state,\r\n                keywordsForPerspectiveId: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    authorClustersWithDetails: [],\r\n    authorClusterConceptsDiscrete: [],\r\n    authorCluster: {},\r\n    perspectives: [],\r\n    authorClicked: false,\r\n    conceptClicked: true,\r\n}\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case 'CLICKED_STATE': {\r\n            return {\r\n                ...state,\r\n                authorClicked: action.payload.authorClicked,\r\n                conceptClicked: action.payload.conceptClicked\r\n            }\r\n        }\r\n        case 'AUTHOR_CLUSTER_PERSPECTIVE_LIKE': {\r\n            let perspectives = state.authorCluster;\r\n            perspectives[action.payload.id].loves = action.payload.loves;\r\n            perspectives[action.payload.id].isLike = action.payload.isLike;\r\n            return {\r\n                ...state,\r\n                authorCluster: perspectives\r\n            }\r\n        }\r\n        case \"GET_AUTHOR_CLUSTER_DETAILS\":\r\n            return {\r\n                ...state,\r\n                authorClustersWithDetails: [...action.payload.data],\r\n                authorCluster: action.payload.entities.authorCluster,\r\n                perspectives: [...action.payload.result]\r\n            }\r\n        case \"GET_AUTHOR_CLUSTER_CONCEPTS_DISCRETE\":\r\n            return {\r\n                ...state,\r\n                authorClusterConceptsDiscrete: [...action.payload],\r\n            }\r\n\r\n        case 'FLUSH_AUTHOR_CLUSTER':\r\n            return {\r\n\r\n            }\r\n        case \"GET_CONCEPT_PERSPECTIVEIDS\":\r\n            return {\r\n                ...state,\r\n                perspectiveids: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from \"./auth\";\r\nimport navbar from \"./navbar\";\r\nimport concepts from \"./concepts\";\r\nimport conceptClusters from \"./conceptClusters\";\r\nimport author from \"./author\";\r\nimport keyword from './keyword';\r\nimport autherCluster from \"./autherCluster\";\r\nexport default combineReducers({\r\n    auth,\r\n    concepts,\r\n    navbar,\r\n    keyword,\r\n    author,\r\n    conceptClusters,\r\n    autherCluster,\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport setAuthorizationToken from \"./utils/setAuthorizationToken\";\r\nimport combineReducers from \"./reducers\";\r\nimport { setCurrentUser } from './actions/loginActions';\r\nimport jwt from \"jsonwebtoken\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n//import { PersistGate } from 'redux-persist/integration/react';\r\n//import configureStore from './store/configureStore';\r\n//const {store,persistor}=configureStore();\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(combineReducers, composeEnhancers(applyMiddleware(thunk)));\r\nif (localStorage.jwtToken) {\r\n    setAuthorizationToken(localStorage.jwtToken);\r\n    store.dispatch(setCurrentUser(jwt.decode(localStorage.jwtToken)));\r\n}\r\n\r\nReactDOM.render(<Provider store={store}>\r\n    <Router>\r\n    {/*<PersistGate loading={null} persistor={persistor}>*/}\r\n        <App />\r\n   {/* </PersistGate>*/}\r\n    </Router>\r\n</Provider>, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}